/*
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TextmagicClient);
  }
}(this, function(expect, TextmagicClient) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DoCarrierLookupResponse', function() {
      beforeEach(function() {
        instance = new TextmagicClient.DoCarrierLookupResponse();
      });

      it('should create an instance of DoCarrierLookupResponse', function() {
        // TODO: update the code to test DoCarrierLookupResponse
        expect(instance).to.be.a(TextmagicClient.DoCarrierLookupResponse);
      });

      it('should have the property cost (base name: "cost")', function() {
        // TODO: update the code to test the property cost
        expect(instance).to.have.property('cost');
        // expect(instance.cost).to.be(expectedValueLiteral);
      });

      it('should have the property country (base name: "country")', function() {
        // TODO: update the code to test the property country
        expect(instance).to.have.property('country');
        // expect(instance.country).to.be(expectedValueLiteral);
      });

      it('should have the property local (base name: "local")', function() {
        // TODO: update the code to test the property local
        expect(instance).to.have.property('local');
        // expect(instance.local).to.be(expectedValueLiteral);
      });

      it('should have the property type (base name: "type")', function() {
        // TODO: update the code to test the property type
        expect(instance).to.have.property('type');
        // expect(instance.type).to.be(expectedValueLiteral);
      });

      it('should have the property carrier (base name: "carrier")', function() {
        // TODO: update the code to test the property carrier
        expect(instance).to.have.property('carrier');
        // expect(instance.carrier).to.be(expectedValueLiteral);
      });

      it('should have the property number164 (base name: "number164")', function() {
        // TODO: update the code to test the property number164
        expect(instance).to.have.property('number164');
        // expect(instance.number164).to.be(expectedValueLiteral);
      });

      it('should have the property valid (base name: "valid")', function() {
        // TODO: update the code to test the property valid
        expect(instance).to.have.property('valid');
        // expect(instance.valid).to.be(expectedValueLiteral);
      });

    });
  });

}));
