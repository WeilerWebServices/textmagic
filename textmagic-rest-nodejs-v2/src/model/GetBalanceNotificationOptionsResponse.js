/*
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.TextmagicClient) {
      root.TextmagicClient = {};
    }
    root.TextmagicClient.GetBalanceNotificationOptionsResponse = factory(root.TextmagicClient.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The GetBalanceNotificationOptionsResponse model module.
   * @module model/GetBalanceNotificationOptionsResponse
   * @version 2.0.1588
   */

  /**
   * Constructs a new <code>GetBalanceNotificationOptionsResponse</code>.
   * @alias module:model/GetBalanceNotificationOptionsResponse
   * @class
   * @param _1 {String} Contains sign of currency in Unicode hex code.
   * @param _2 {String} Contains sign of currency in Unicode hex code.
   * @param _3 {String} Contains sign of currency in Unicode hex code.
   * @param _5 {String} Contains sign of currency in Unicode hex code.
   * @param _10 {String} Contains sign of currency in Unicode hex code.
   * @param _20 {String} Contains sign of currency in Unicode hex code.
   * @param _30 {String} Contains sign of currency in Unicode hex code.
   * @param _50 {String} Contains sign of currency in Unicode hex code.
   * @param _100 {String} Contains sign of currency in Unicode hex code.
   * @param _500 {String} Contains sign of currency in Unicode hex code.
   * @param _1000 {String} Contains sign of currency in Unicode hex code.
   */
  var exports = function(_1, _2, _3, _5, _10, _20, _30, _50, _100, _500, _1000) {
    this._1 = _1;
    this._2 = _2;
    this._3 = _3;
    this._5 = _5;
    this._10 = _10;
    this._20 = _20;
    this._30 = _30;
    this._50 = _50;
    this._100 = _100;
    this._500 = _500;
    this._1000 = _1000;
  };

  /**
   * Constructs a <code>GetBalanceNotificationOptionsResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetBalanceNotificationOptionsResponse} obj Optional instance to populate.
   * @return {module:model/GetBalanceNotificationOptionsResponse} The populated <code>GetBalanceNotificationOptionsResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('1'))
        obj._1 = ApiClient.convertToType(data['1'], 'String');
      if (data.hasOwnProperty('2'))
        obj._2 = ApiClient.convertToType(data['2'], 'String');
      if (data.hasOwnProperty('3'))
        obj._3 = ApiClient.convertToType(data['3'], 'String');
      if (data.hasOwnProperty('5'))
        obj._5 = ApiClient.convertToType(data['5'], 'String');
      if (data.hasOwnProperty('10'))
        obj._10 = ApiClient.convertToType(data['10'], 'String');
      if (data.hasOwnProperty('20'))
        obj._20 = ApiClient.convertToType(data['20'], 'String');
      if (data.hasOwnProperty('30'))
        obj._30 = ApiClient.convertToType(data['30'], 'String');
      if (data.hasOwnProperty('50'))
        obj._50 = ApiClient.convertToType(data['50'], 'String');
      if (data.hasOwnProperty('100'))
        obj._100 = ApiClient.convertToType(data['100'], 'String');
      if (data.hasOwnProperty('500'))
        obj._500 = ApiClient.convertToType(data['500'], 'String');
      if (data.hasOwnProperty('1000'))
        obj._1000 = ApiClient.convertToType(data['1000'], 'String');
    }
    return obj;
  }

  /**
   * Contains sign of currency in Unicode hex code.
   * @member {String} _1
   */
  exports.prototype._1 = undefined;

  /**
   * Contains sign of currency in Unicode hex code.
   * @member {String} _2
   */
  exports.prototype._2 = undefined;

  /**
   * Contains sign of currency in Unicode hex code.
   * @member {String} _3
   */
  exports.prototype._3 = undefined;

  /**
   * Contains sign of currency in Unicode hex code.
   * @member {String} _5
   */
  exports.prototype._5 = undefined;

  /**
   * Contains sign of currency in Unicode hex code.
   * @member {String} _10
   */
  exports.prototype._10 = undefined;

  /**
   * Contains sign of currency in Unicode hex code.
   * @member {String} _20
   */
  exports.prototype._20 = undefined;

  /**
   * Contains sign of currency in Unicode hex code.
   * @member {String} _30
   */
  exports.prototype._30 = undefined;

  /**
   * Contains sign of currency in Unicode hex code.
   * @member {String} _50
   */
  exports.prototype._50 = undefined;

  /**
   * Contains sign of currency in Unicode hex code.
   * @member {String} _100
   */
  exports.prototype._100 = undefined;

  /**
   * Contains sign of currency in Unicode hex code.
   * @member {String} _500
   */
  exports.prototype._500 = undefined;

  /**
   * Contains sign of currency in Unicode hex code.
   * @member {String} _1000
   */
  exports.prototype._1000 = undefined;

  return exports;

}));
