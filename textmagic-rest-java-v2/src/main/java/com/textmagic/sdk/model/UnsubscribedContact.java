/*
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.textmagic.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * UnsubscribedContact
 */

public class UnsubscribedContact {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("phone")
  private String phone = null;

  @SerializedName("unsubscribeTime")
  private OffsetDateTime unsubscribeTime = null;

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("lastName")
  private String lastName = null;

  public UnsubscribedContact id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Unsubscribed contact ID.
   * @return id
  **/
  @ApiModelProperty(example = "27074", required = true, value = "Unsubscribed contact ID.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public UnsubscribedContact phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
   * @return phone
  **/
  @ApiModelProperty(example = "447860021130", required = true, value = "Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public UnsubscribedContact unsubscribeTime(OffsetDateTime unsubscribeTime) {
    this.unsubscribeTime = unsubscribeTime;
    return this;
  }

   /**
   * Time when contact was opted-out.
   * @return unsubscribeTime
  **/
  @ApiModelProperty(example = "2015-01-09T18:59:46+0000", required = true, value = "Time when contact was opted-out.")
  public OffsetDateTime getUnsubscribeTime() {
    return unsubscribeTime;
  }

  public void setUnsubscribeTime(OffsetDateTime unsubscribeTime) {
    this.unsubscribeTime = unsubscribeTime;
  }

  public UnsubscribedContact firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Unsubscribed contact first name.
   * @return firstName
  **/
  @ApiModelProperty(example = "Charles", required = true, value = "Unsubscribed contact first name.")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public UnsubscribedContact lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Unsubscribed contact last name.
   * @return lastName
  **/
  @ApiModelProperty(example = "Conway", required = true, value = "Unsubscribed contact last name.")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UnsubscribedContact unsubscribedContact = (UnsubscribedContact) o;
    return Objects.equals(this.id, unsubscribedContact.id) &&
        Objects.equals(this.phone, unsubscribedContact.phone) &&
        Objects.equals(this.unsubscribeTime, unsubscribedContact.unsubscribeTime) &&
        Objects.equals(this.firstName, unsubscribedContact.firstName) &&
        Objects.equals(this.lastName, unsubscribedContact.lastName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, phone, unsubscribeTime, firstName, lastName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UnsubscribedContact {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    unsubscribeTime: ").append(toIndentedString(unsubscribeTime)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

