/*
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TextmagicClient);
  }
}(this, function(expect, TextmagicClient) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('SendMessageResponse', function() {
      beforeEach(function() {
        instance = new TextmagicClient.SendMessageResponse();
      });

      it('should create an instance of SendMessageResponse', function() {
        // TODO: update the code to test SendMessageResponse
        expect(instance).to.be.a(TextmagicClient.SendMessageResponse);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property href (base name: "href")', function() {
        // TODO: update the code to test the property href
        expect(instance).to.have.property('href');
        // expect(instance.href).to.be(expectedValueLiteral);
      });

      it('should have the property type (base name: "type")', function() {
        // TODO: update the code to test the property type
        expect(instance).to.have.property('type');
        // expect(instance.type).to.be(expectedValueLiteral);
      });

      it('should have the property sessionId (base name: "sessionId")', function() {
        // TODO: update the code to test the property sessionId
        expect(instance).to.have.property('sessionId');
        // expect(instance.sessionId).to.be(expectedValueLiteral);
      });

      it('should have the property bulkId (base name: "bulkId")', function() {
        // TODO: update the code to test the property bulkId
        expect(instance).to.have.property('bulkId');
        // expect(instance.bulkId).to.be(expectedValueLiteral);
      });

      it('should have the property messageId (base name: "messageId")', function() {
        // TODO: update the code to test the property messageId
        expect(instance).to.have.property('messageId');
        // expect(instance.messageId).to.be(expectedValueLiteral);
      });

      it('should have the property scheduleId (base name: "scheduleId")', function() {
        // TODO: update the code to test the property scheduleId
        expect(instance).to.have.property('scheduleId');
        // expect(instance.scheduleId).to.be(expectedValueLiteral);
      });

      it('should have the property chatId (base name: "chatId")', function() {
        // TODO: update the code to test the property chatId
        expect(instance).to.have.property('chatId');
        // expect(instance.chatId).to.be(expectedValueLiteral);
      });

    });
  });

}));
