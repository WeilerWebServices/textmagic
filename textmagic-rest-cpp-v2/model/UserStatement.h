/**
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.8.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * UserStatement.h
 *
 * 
 */

#ifndef COM_TEXTMAGIC_CLIENT_MODEL_UserStatement_H_
#define COM_TEXTMAGIC_CLIENT_MODEL_UserStatement_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace textmagic {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  UserStatement
    : public ModelBase
{
public:
    UserStatement();
    virtual ~UserStatement();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// UserStatement members

    /// <summary>
    /// User statement ID.
    /// </summary>
    int32_t getId() const;
        void setId(int32_t value);
    /// <summary>
    /// User ID.
    /// </summary>
    int32_t getUserId() const;
        void setUserId(int32_t value);
    /// <summary>
    /// User statement date.
    /// </summary>
    utility::datetime getDate() const;
        void setDate(utility::datetime value);
    /// <summary>
    /// 
    /// </summary>
    double getBalance() const;
        void setBalance(double value);
    /// <summary>
    /// Balance change amount.
    /// </summary>
    float getDelta() const;
        void setDelta(float value);
    /// <summary>
    /// Type of statement (what you have been charged for): *   **sms** - for sending SMS *   **number** - for renewing a dedicated number; *   **schedule** - for scheduling text messages; *   **topup** - for adding credits to your account. 
    /// </summary>
    utility::string_t getType() const;
        void setType(utility::string_t value);
    /// <summary>
    /// Value differs by **type**: *   for **sms**, it is the sent messages amount; *   for **number**, it is a dedicated phone number; *   for **schedule**, it is a scheduled messages amount; *   for **top-up**, it is an invoice ID. 
    /// </summary>
    utility::string_t getValue() const;
        void setValue(utility::string_t value);
    /// <summary>
    /// Optional comment.
    /// </summary>
    utility::string_t getComment() const;
        void setComment(utility::string_t value);

protected:
    int32_t m_Id;
        int32_t m_UserId;
        utility::datetime m_date;
        double m_Balance;
        float m_Delta;
        utility::string_t m_Type;
        utility::string_t m_Value;
        utility::string_t m_Comment;
    };

}
}
}
}

#endif /* COM_TEXTMAGIC_CLIENT_MODEL_UserStatement_H_ */
