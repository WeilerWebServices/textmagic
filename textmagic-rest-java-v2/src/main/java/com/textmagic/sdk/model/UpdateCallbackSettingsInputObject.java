/*
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.textmagic.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * UpdateCallbackSettingsInputObject
 */

public class UpdateCallbackSettingsInputObject {
  @SerializedName("outUrl")
  private String outUrl = null;

  @SerializedName("inUrl")
  private String inUrl = null;

  /**
   * Desired callback data format. m - multipart/form-data, u - application/x-www-form-urlencoded, j - application/json
   */
  @JsonAdapter(FormatEnum.Adapter.class)
  public enum FormatEnum {
    M("m"),
    
    U("u"),
    
    J("j");

    private String value;

    FormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FormatEnum fromValue(String text) {
      for (FormatEnum b : FormatEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FormatEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FormatEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("format")
  private FormatEnum format = null;

  public UpdateCallbackSettingsInputObject outUrl(String outUrl) {
    this.outUrl = outUrl;
    return this;
  }

   /**
   * This URL is used to push message delivery status updates to your application.
   * @return outUrl
  **/
  @ApiModelProperty(example = "http://www.mysite.com/delivery-callback.php", value = "This URL is used to push message delivery status updates to your application.")
  public String getOutUrl() {
    return outUrl;
  }

  public void setOutUrl(String outUrl) {
    this.outUrl = outUrl;
  }

  public UpdateCallbackSettingsInputObject inUrl(String inUrl) {
    this.inUrl = inUrl;
    return this;
  }

   /**
   * This URL is used to push incoming SMS to your application.
   * @return inUrl
  **/
  @ApiModelProperty(example = "http://www.mysite.com/incoming-sms-callback.php", value = "This URL is used to push incoming SMS to your application.")
  public String getInUrl() {
    return inUrl;
  }

  public void setInUrl(String inUrl) {
    this.inUrl = inUrl;
  }

  public UpdateCallbackSettingsInputObject format(FormatEnum format) {
    this.format = format;
    return this;
  }

   /**
   * Desired callback data format. m - multipart/form-data, u - application/x-www-form-urlencoded, j - application/json
   * @return format
  **/
  @ApiModelProperty(value = "Desired callback data format. m - multipart/form-data, u - application/x-www-form-urlencoded, j - application/json")
  public FormatEnum getFormat() {
    return format;
  }

  public void setFormat(FormatEnum format) {
    this.format = format;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateCallbackSettingsInputObject updateCallbackSettingsInputObject = (UpdateCallbackSettingsInputObject) o;
    return Objects.equals(this.outUrl, updateCallbackSettingsInputObject.outUrl) &&
        Objects.equals(this.inUrl, updateCallbackSettingsInputObject.inUrl) &&
        Objects.equals(this.format, updateCallbackSettingsInputObject.format);
  }

  @Override
  public int hashCode() {
    return Objects.hash(outUrl, inUrl, format);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateCallbackSettingsInputObject {\n");
    
    sb.append("    outUrl: ").append(toIndentedString(outUrl)).append("\n");
    sb.append("    inUrl: ").append(toIndentedString(inUrl)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

