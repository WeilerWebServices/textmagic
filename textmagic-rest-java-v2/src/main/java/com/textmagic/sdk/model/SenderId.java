/*
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.textmagic.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.textmagic.sdk.model.User;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SenderId
 */

public class SenderId {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("displayTimeFormat")
  private String displayTimeFormat = null;

  @SerializedName("senderId")
  private String senderId = null;

  @SerializedName("user")
  private User user = null;

  /**
   * *   **P** for Pending - this Sender ID is being reviewed by our support team; *   **R** for Rejected - our support team rejected your application for this Sender ID; *   **A** for Active. 
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    A("A"),
    
    R("R"),
    
    P("P");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  public SenderId id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Numeric sender ID.
   * @return id
  **/
  @ApiModelProperty(example = "37", required = true, value = "Numeric sender ID.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public SenderId displayTimeFormat(String displayTimeFormat) {
    this.displayTimeFormat = displayTimeFormat;
    return this;
  }

   /**
   * Format for representation of time.
   * @return displayTimeFormat
  **/
  @ApiModelProperty(example = "24h", value = "Format for representation of time.")
  public String getDisplayTimeFormat() {
    return displayTimeFormat;
  }

  public void setDisplayTimeFormat(String displayTimeFormat) {
    this.displayTimeFormat = displayTimeFormat;
  }

  public SenderId senderId(String senderId) {
    this.senderId = senderId;
    return this;
  }

   /**
   * Alphanumeric ID.
   * @return senderId
  **/
  @ApiModelProperty(example = "HotRod", required = true, value = "Alphanumeric ID.")
  public String getSenderId() {
    return senderId;
  }

  public void setSenderId(String senderId) {
    this.senderId = senderId;
  }

  public SenderId user(User user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(required = true, value = "")
  public User getUser() {
    return user;
  }

  public void setUser(User user) {
    this.user = user;
  }

  public SenderId status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * *   **P** for Pending - this Sender ID is being reviewed by our support team; *   **R** for Rejected - our support team rejected your application for this Sender ID; *   **A** for Active. 
   * @return status
  **/
  @ApiModelProperty(example = "A", required = true, value = "*   **P** for Pending - this Sender ID is being reviewed by our support team; *   **R** for Rejected - our support team rejected your application for this Sender ID; *   **A** for Active. ")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SenderId senderId = (SenderId) o;
    return Objects.equals(this.id, senderId.id) &&
        Objects.equals(this.displayTimeFormat, senderId.displayTimeFormat) &&
        Objects.equals(this.senderId, senderId.senderId) &&
        Objects.equals(this.user, senderId.user) &&
        Objects.equals(this.status, senderId.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayTimeFormat, senderId, user, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SenderId {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayTimeFormat: ").append(toIndentedString(displayTimeFormat)).append("\n");
    sb.append("    senderId: ").append(toIndentedString(senderId)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

