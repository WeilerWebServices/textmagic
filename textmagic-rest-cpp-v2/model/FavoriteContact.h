/**
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.8.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * FavoriteContact.h
 *
 * 
 */

#ifndef COM_TEXTMAGIC_CLIENT_MODEL_FavoriteContact_H_
#define COM_TEXTMAGIC_CLIENT_MODEL_FavoriteContact_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace textmagic {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  FavoriteContact
    : public ModelBase
{
public:
    FavoriteContact();
    virtual ~FavoriteContact();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// FavoriteContact members

    /// <summary>
    /// List or Contact ID.
    /// </summary>
    int32_t getEntityId() const;
        void setEntityId(int32_t value);
    /// <summary>
    /// Entity type which should be marked as **favorite**.
    /// </summary>
    utility::string_t getEntityType() const;
        void setEntityType(utility::string_t value);
    /// <summary>
    /// Contact first name/last name if entityType is **contact**; List name if entity type is **list**.
    /// </summary>
    utility::string_t getPrimaryLabel() const;
        void setPrimaryLabel(utility::string_t value);
    /// <summary>
    /// Phone number if entityType is **contact**; List contacts number if entity type is **list**.
    /// </summary>
    utility::string_t getSecondaryLabel() const;
        void setSecondaryLabel(utility::string_t value);
    /// <summary>
    /// Contact country if entityType is **contact**; else, null.
    /// </summary>
    utility::string_t getTertiaryLabel() const;
        void setTertiaryLabel(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAvatar() const;
        void setAvatar(utility::string_t value);

protected:
    int32_t m_EntityId;
        utility::string_t m_EntityType;
        utility::string_t m_PrimaryLabel;
        utility::string_t m_SecondaryLabel;
        utility::string_t m_TertiaryLabel;
        utility::string_t m_Avatar;
    };

}
}
}
}

#endif /* COM_TEXTMAGIC_CLIENT_MODEL_FavoriteContact_H_ */
