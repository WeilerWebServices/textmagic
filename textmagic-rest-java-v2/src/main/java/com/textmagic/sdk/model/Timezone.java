/*
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.textmagic.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Timezone
 */

public class Timezone {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("area")
  private String area = null;

  @SerializedName("dst")
  private Integer dst = null;

  @SerializedName("offset")
  private Integer offset = null;

  @SerializedName("timezone")
  private String timezone = null;

  public Timezone id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Internal timezone ID.
   * @return id
  **/
  @ApiModelProperty(example = "55", required = true, value = "Internal timezone ID.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Timezone area(String area) {
    this.area = area;
    return this;
  }

   /**
   * Timezone area.
   * @return area
  **/
  @ApiModelProperty(example = "Europe", required = true, value = "Timezone area.")
  public String getArea() {
    return area;
  }

  public void setArea(String area) {
    this.area = area;
  }

  public Timezone dst(Integer dst) {
    this.dst = dst;
    return this;
  }

   /**
   * Is daylight saving time used in this timezone?
   * @return dst
  **/
  @ApiModelProperty(example = "1", required = true, value = "Is daylight saving time used in this timezone?")
  public Integer getDst() {
    return dst;
  }

  public void setDst(Integer dst) {
    this.dst = dst;
  }

  public Timezone offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Offset from UTC time in seconds. In this example, it is 21600/60/60&#x3D;6 hours.
   * @return offset
  **/
  @ApiModelProperty(example = "10800", required = true, value = "Offset from UTC time in seconds. In this example, it is 21600/60/60=6 hours.")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public Timezone timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * User-friendly timezone name (with spaces replaced by underscores).
   * @return timezone
  **/
  @ApiModelProperty(example = "Europe/Tallinn", required = true, value = "User-friendly timezone name (with spaces replaced by underscores).")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Timezone timezone = (Timezone) o;
    return Objects.equals(this.id, timezone.id) &&
        Objects.equals(this.area, timezone.area) &&
        Objects.equals(this.dst, timezone.dst) &&
        Objects.equals(this.offset, timezone.offset) &&
        Objects.equals(this.timezone, timezone.timezone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, area, dst, offset, timezone);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Timezone {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    area: ").append(toIndentedString(area)).append("\n");
    sb.append("    dst: ").append(toIndentedString(dst)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

