/*
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TextmagicClient);
  }
}(this, function(expect, TextmagicClient) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetMessagePriceResponseCountriesItem', function() {
      beforeEach(function() {
        instance = new TextmagicClient.GetMessagePriceResponseCountriesItem();
      });

      it('should create an instance of GetMessagePriceResponseCountriesItem', function() {
        // TODO: update the code to test GetMessagePriceResponseCountriesItem
        expect(instance).to.be.a(TextmagicClient.GetMessagePriceResponseCountriesItem);
      });

      it('should have the property country (base name: "country")', function() {
        // TODO: update the code to test the property country
        expect(instance).to.have.property('country');
        // expect(instance.country).to.be(expectedValueLiteral);
      });

      it('should have the property countryName (base name: "countryName")', function() {
        // TODO: update the code to test the property countryName
        expect(instance).to.have.property('countryName');
        // expect(instance.countryName).to.be(expectedValueLiteral);
      });

      it('should have the property allowDedicated (base name: "allowDedicated")', function() {
        // TODO: update the code to test the property allowDedicated
        expect(instance).to.have.property('allowDedicated');
        // expect(instance.allowDedicated).to.be(expectedValueLiteral);
      });

      it('should have the property count (base name: "count")', function() {
        // TODO: update the code to test the property count
        expect(instance).to.have.property('count');
        // expect(instance.count).to.be(expectedValueLiteral);
      });

      it('should have the property max (base name: "max")', function() {
        // TODO: update the code to test the property max
        expect(instance).to.have.property('max');
        // expect(instance.max).to.be(expectedValueLiteral);
      });

      it('should have the property sum (base name: "sum")', function() {
        // TODO: update the code to test the property sum
        expect(instance).to.have.property('sum');
        // expect(instance.sum).to.be(expectedValueLiteral);
      });

      it('should have the property landline (base name: "landline")', function() {
        // TODO: update the code to test the property landline
        expect(instance).to.have.property('landline');
        // expect(instance.landline).to.be(expectedValueLiteral);
      });

    });
  });

}));
