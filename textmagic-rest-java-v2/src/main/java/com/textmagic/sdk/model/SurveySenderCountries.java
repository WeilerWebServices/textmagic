/*
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.textmagic.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SurveySenderCountries
 */

public class SurveySenderCountries {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("countryName")
  private String countryName = null;

  @SerializedName("fromNumber")
  private String fromNumber = null;

  @SerializedName("allowDedicated")
  private Boolean allowDedicated = null;

  public SurveySenderCountries id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "1", required = true, value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public SurveySenderCountries countryName(String countryName) {
    this.countryName = countryName;
    return this;
  }

   /**
   * Get countryName
   * @return countryName
  **/
  @ApiModelProperty(example = "GB", required = true, value = "")
  public String getCountryName() {
    return countryName;
  }

  public void setCountryName(String countryName) {
    this.countryName = countryName;
  }

  public SurveySenderCountries fromNumber(String fromNumber) {
    this.fromNumber = fromNumber;
    return this;
  }

   /**
   * Get fromNumber
   * @return fromNumber
  **/
  @ApiModelProperty(example = "447860021130", required = true, value = "")
  public String getFromNumber() {
    return fromNumber;
  }

  public void setFromNumber(String fromNumber) {
    this.fromNumber = fromNumber;
  }

  public SurveySenderCountries allowDedicated(Boolean allowDedicated) {
    this.allowDedicated = allowDedicated;
    return this;
  }

   /**
   * Is allowed to use a dedicated number?
   * @return allowDedicated
  **/
  @ApiModelProperty(example = "true", required = true, value = "Is allowed to use a dedicated number?")
  public Boolean isAllowDedicated() {
    return allowDedicated;
  }

  public void setAllowDedicated(Boolean allowDedicated) {
    this.allowDedicated = allowDedicated;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SurveySenderCountries surveySenderCountries = (SurveySenderCountries) o;
    return Objects.equals(this.id, surveySenderCountries.id) &&
        Objects.equals(this.countryName, surveySenderCountries.countryName) &&
        Objects.equals(this.fromNumber, surveySenderCountries.fromNumber) &&
        Objects.equals(this.allowDedicated, surveySenderCountries.allowDedicated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, countryName, fromNumber, allowDedicated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SurveySenderCountries {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    countryName: ").append(toIndentedString(countryName)).append("\n");
    sb.append("    fromNumber: ").append(toIndentedString(fromNumber)).append("\n");
    sb.append("    allowDedicated: ").append(toIndentedString(allowDedicated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

