/*
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.textmagic.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * GetCallsPricesResponse
 */

public class GetCallsPricesResponse {
  @SerializedName("outbound")
  private BigDecimal outbound = null;

  @SerializedName("inbound")
  private BigDecimal inbound = null;

  @SerializedName("forward")
  private BigDecimal forward = null;

  @SerializedName("country")
  private String country = null;

  public GetCallsPricesResponse outbound(BigDecimal outbound) {
    this.outbound = outbound;
    return this;
  }

   /**
   * Price for outbound message.
   * @return outbound
  **/
  @ApiModelProperty(required = true, value = "Price for outbound message.")
  public BigDecimal getOutbound() {
    return outbound;
  }

  public void setOutbound(BigDecimal outbound) {
    this.outbound = outbound;
  }

  public GetCallsPricesResponse inbound(BigDecimal inbound) {
    this.inbound = inbound;
    return this;
  }

   /**
   * Price for inbound message.
   * @return inbound
  **/
  @ApiModelProperty(required = true, value = "Price for inbound message.")
  public BigDecimal getInbound() {
    return inbound;
  }

  public void setInbound(BigDecimal inbound) {
    this.inbound = inbound;
  }

  public GetCallsPricesResponse forward(BigDecimal forward) {
    this.forward = forward;
    return this;
  }

   /**
   * Price for forward.
   * @return forward
  **/
  @ApiModelProperty(required = true, value = "Price for forward.")
  public BigDecimal getForward() {
    return forward;
  }

  public void setForward(BigDecimal forward) {
    this.forward = forward;
  }

  public GetCallsPricesResponse country(String country) {
    this.country = country;
    return this;
  }

   /**
   * 2-letter ISO country code for local phone numbers, used when local is  set to true. Default is account country.
   * @return country
  **/
  @ApiModelProperty(example = "US", required = true, value = "2-letter ISO country code for local phone numbers, used when local is  set to true. Default is account country.")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCallsPricesResponse getCallsPricesResponse = (GetCallsPricesResponse) o;
    return Objects.equals(this.outbound, getCallsPricesResponse.outbound) &&
        Objects.equals(this.inbound, getCallsPricesResponse.inbound) &&
        Objects.equals(this.forward, getCallsPricesResponse.forward) &&
        Objects.equals(this.country, getCallsPricesResponse.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(outbound, inbound, forward, country);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCallsPricesResponse {\n");
    
    sb.append("    outbound: ").append(toIndentedString(outbound)).append("\n");
    sb.append("    inbound: ").append(toIndentedString(inbound)).append("\n");
    sb.append("    forward: ").append(toIndentedString(forward)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

