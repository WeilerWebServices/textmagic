/**
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.8.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SurveyNode.h
 *
 * 
 */

#ifndef COM_TEXTMAGIC_CLIENT_MODEL_SurveyNode_H_
#define COM_TEXTMAGIC_CLIENT_MODEL_SurveyNode_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace com {
namespace textmagic {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  SurveyNode
    : public ModelBase
{
public:
    SurveyNode();
    virtual ~SurveyNode();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SurveyNode members

    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
        void setId(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLabel() const;
        void setLabel(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getBody() const;
        void setBody(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNodeType() const;
        void setNodeType(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    bool isIsEndNode() const;
        void setIsEndNode(bool value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getSendDelay() const;
        void setSendDelay(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getStartNodes();
        void setStartNodes(std::vector<utility::string_t> value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getEndNodes();
        void setEndNodes(std::vector<utility::string_t> value);

protected:
    int32_t m_Id;
        utility::string_t m_Label;
        utility::string_t m_Body;
        utility::string_t m_NodeType;
        bool m_IsEndNode;
        int32_t m_SendDelay;
        std::vector<utility::string_t> m_StartNodes;
        std::vector<utility::string_t> m_EndNodes;
    };

}
}
}
}

#endif /* COM_TEXTMAGIC_CLIENT_MODEL_SurveyNode_H_ */
