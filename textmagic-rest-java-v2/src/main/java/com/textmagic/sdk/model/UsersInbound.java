/*
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.textmagic.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.textmagic.sdk.model.Country;
import com.textmagic.sdk.model.User;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * UsersInbound
 */

public class UsersInbound {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("displayTimeFormat")
  private String displayTimeFormat = null;

  @SerializedName("phone")
  private String phone = null;

  @SerializedName("user")
  private User user = null;

  @SerializedName("purchasedAt")
  private OffsetDateTime purchasedAt = null;

  @SerializedName("expireAt")
  private OffsetDateTime expireAt = null;

  /**
   * Number status: *   **U** for Unused. No messages have been sent from (or received to) this number; *   **A** for Active. 
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    U("U"),
    
    A("A");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("country")
  private Country country = null;

  public UsersInbound id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Dedicated number ID.
   * @return id
  **/
  @ApiModelProperty(example = "305", required = true, value = "Dedicated number ID.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public UsersInbound displayTimeFormat(String displayTimeFormat) {
    this.displayTimeFormat = displayTimeFormat;
    return this;
  }

   /**
   * Format for representation of time.
   * @return displayTimeFormat
  **/
  @ApiModelProperty(example = "24h", value = "Format for representation of time.")
  public String getDisplayTimeFormat() {
    return displayTimeFormat;
  }

  public void setDisplayTimeFormat(String displayTimeFormat) {
    this.displayTimeFormat = displayTimeFormat;
  }

  public UsersInbound phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Dedicated phone number.
   * @return phone
  **/
  @ApiModelProperty(example = "447860021130", value = "Dedicated phone number.")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public UsersInbound user(User user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(required = true, value = "")
  public User getUser() {
    return user;
  }

  public void setUser(User user) {
    this.user = user;
  }

  public UsersInbound purchasedAt(OffsetDateTime purchasedAt) {
    this.purchasedAt = purchasedAt;
    return this;
  }

   /**
   * Time when the dedicated number was purchased.
   * @return purchasedAt
  **/
  @ApiModelProperty(example = "2014-10-02T11:07:04+0000", required = true, value = "Time when the dedicated number was purchased.")
  public OffsetDateTime getPurchasedAt() {
    return purchasedAt;
  }

  public void setPurchasedAt(OffsetDateTime purchasedAt) {
    this.purchasedAt = purchasedAt;
  }

  public UsersInbound expireAt(OffsetDateTime expireAt) {
    this.expireAt = expireAt;
    return this;
  }

   /**
   * Dedicated number subscription expiration time.
   * @return expireAt
  **/
  @ApiModelProperty(example = "2014-10-02T11:07:04+0000", required = true, value = "Dedicated number subscription expiration time.")
  public OffsetDateTime getExpireAt() {
    return expireAt;
  }

  public void setExpireAt(OffsetDateTime expireAt) {
    this.expireAt = expireAt;
  }

  public UsersInbound status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Number status: *   **U** for Unused. No messages have been sent from (or received to) this number; *   **A** for Active. 
   * @return status
  **/
  @ApiModelProperty(example = "U", required = true, value = "Number status: *   **U** for Unused. No messages have been sent from (or received to) this number; *   **A** for Active. ")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public UsersInbound country(Country country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @ApiModelProperty(required = true, value = "")
  public Country getCountry() {
    return country;
  }

  public void setCountry(Country country) {
    this.country = country;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsersInbound usersInbound = (UsersInbound) o;
    return Objects.equals(this.id, usersInbound.id) &&
        Objects.equals(this.displayTimeFormat, usersInbound.displayTimeFormat) &&
        Objects.equals(this.phone, usersInbound.phone) &&
        Objects.equals(this.user, usersInbound.user) &&
        Objects.equals(this.purchasedAt, usersInbound.purchasedAt) &&
        Objects.equals(this.expireAt, usersInbound.expireAt) &&
        Objects.equals(this.status, usersInbound.status) &&
        Objects.equals(this.country, usersInbound.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayTimeFormat, phone, user, purchasedAt, expireAt, status, country);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsersInbound {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayTimeFormat: ").append(toIndentedString(displayTimeFormat)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    purchasedAt: ").append(toIndentedString(purchasedAt)).append("\n");
    sb.append("    expireAt: ").append(toIndentedString(expireAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

