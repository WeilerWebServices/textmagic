/*
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.textmagic.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GetContactsAutocompleteResponseItem
 */

public class GetContactsAutocompleteResponseItem {
  @SerializedName("entityId")
  private Integer entityId = null;

  /**
   * Entry type: * **contact** if it is related to a contact; * **list** if it is related to a contact list; * **reply** if it is related to an incoming message. 
   */
  @JsonAdapter(EntityTypeEnum.Adapter.class)
  public enum EntityTypeEnum {
    REPLY("reply"),
    
    CONTACT("contact"),
    
    LIST("list");

    private String value;

    EntityTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EntityTypeEnum fromValue(String text) {
      for (EntityTypeEnum b : EntityTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<EntityTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EntityTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EntityTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return EntityTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("entityType")
  private EntityTypeEnum entityType = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("label")
  private String label = null;

  @SerializedName("sharedBy")
  private String sharedBy = null;

  @SerializedName("isShared")
  private Boolean isShared = null;

  @SerializedName("avatar")
  private String avatar = null;

  @SerializedName("favorited")
  private Boolean favorited = null;

  @SerializedName("userId")
  private Integer userId = null;

  @SerializedName("countryName")
  private String countryName = null;

  @SerializedName("qposition")
  private Integer qposition = null;

  @SerializedName("rposition")
  private Integer rposition = null;

  public GetContactsAutocompleteResponseItem entityId(Integer entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * Id of entity. 0 if object is a reply.
   * @return entityId
  **/
  @ApiModelProperty(example = "362", required = true, value = "Id of entity. 0 if object is a reply.")
  public Integer getEntityId() {
    return entityId;
  }

  public void setEntityId(Integer entityId) {
    this.entityId = entityId;
  }

  public GetContactsAutocompleteResponseItem entityType(EntityTypeEnum entityType) {
    this.entityType = entityType;
    return this;
  }

   /**
   * Entry type: * **contact** if it is related to a contact; * **list** if it is related to a contact list; * **reply** if it is related to an incoming message. 
   * @return entityType
  **/
  @ApiModelProperty(example = "contact", required = true, value = "Entry type: * **contact** if it is related to a contact; * **list** if it is related to a contact list; * **reply** if it is related to an incoming message. ")
  public EntityTypeEnum getEntityType() {
    return entityType;
  }

  public void setEntityType(EntityTypeEnum entityType) {
    this.entityType = entityType;
  }

  public GetContactsAutocompleteResponseItem value(String value) {
    this.value = value;
    return this;
  }

   /**
   * ID of the contact/list if entityType is contact/list OR phone number if entityType is reply.
   * @return value
  **/
  @ApiModelProperty(example = "22", required = true, value = "ID of the contact/list if entityType is contact/list OR phone number if entityType is reply.")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public GetContactsAutocompleteResponseItem label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Name of the contact/list if entityType is contact/list OR phone number if entityType is reply.
   * @return label
  **/
  @ApiModelProperty(example = "Homer Simpson", required = true, value = "Name of the contact/list if entityType is contact/list OR phone number if entityType is reply.")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public GetContactsAutocompleteResponseItem sharedBy(String sharedBy) {
    this.sharedBy = sharedBy;
    return this;
  }

   /**
   * If contact or list was shared by another sub-account, the name of this user will be shown.
   * @return sharedBy
  **/
  @ApiModelProperty(example = "John Doe", required = true, value = "If contact or list was shared by another sub-account, the name of this user will be shown.")
  public String getSharedBy() {
    return sharedBy;
  }

  public void setSharedBy(String sharedBy) {
    this.sharedBy = sharedBy;
  }

  public GetContactsAutocompleteResponseItem isShared(Boolean isShared) {
    this.isShared = isShared;
    return this;
  }

   /**
   * If contact or list was shared by another sub-account then &#x60;true&#x60; will be set.
   * @return isShared
  **/
  @ApiModelProperty(example = "true", required = true, value = "If contact or list was shared by another sub-account then `true` will be set.")
  public Boolean isIsShared() {
    return isShared;
  }

  public void setIsShared(Boolean isShared) {
    this.isShared = isShared;
  }

  public GetContactsAutocompleteResponseItem avatar(String avatar) {
    this.avatar = avatar;
    return this;
  }

   /**
   * Contact avatar URI.
   * @return avatar
  **/
  @ApiModelProperty(example = "avatars/dummy_avatar.png", required = true, value = "Contact avatar URI.")
  public String getAvatar() {
    return avatar;
  }

  public void setAvatar(String avatar) {
    this.avatar = avatar;
  }

  public GetContactsAutocompleteResponseItem favorited(Boolean favorited) {
    this.favorited = favorited;
    return this;
  }

   /**
   * If contact has been marked as favorite.
   * @return favorited
  **/
  @ApiModelProperty(example = "true", required = true, value = "If contact has been marked as favorite.")
  public Boolean isFavorited() {
    return favorited;
  }

  public void setFavorited(Boolean favorited) {
    this.favorited = favorited;
  }

  public GetContactsAutocompleteResponseItem userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Owner ID of the contact/list (if it was shared).
   * @return userId
  **/
  @ApiModelProperty(example = "33", required = true, value = "Owner ID of the contact/list (if it was shared).")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  public GetContactsAutocompleteResponseItem countryName(String countryName) {
    this.countryName = countryName;
    return this;
  }

   /**
   * Get countryName
   * @return countryName
  **/
  @ApiModelProperty(example = "Australia", required = true, value = "")
  public String getCountryName() {
    return countryName;
  }

  public void setCountryName(String countryName) {
    this.countryName = countryName;
  }

  public GetContactsAutocompleteResponseItem qposition(Integer qposition) {
    this.qposition = qposition;
    return this;
  }

   /**
   * Get qposition
   * @return qposition
  **/
  @ApiModelProperty(example = "Internal field, used for sorting purposes.", required = true, value = "")
  public Integer getQposition() {
    return qposition;
  }

  public void setQposition(Integer qposition) {
    this.qposition = qposition;
  }

  public GetContactsAutocompleteResponseItem rposition(Integer rposition) {
    this.rposition = rposition;
    return this;
  }

   /**
   * Get rposition
   * @return rposition
  **/
  @ApiModelProperty(example = "Internal field, used for sorting purposes.", required = true, value = "")
  public Integer getRposition() {
    return rposition;
  }

  public void setRposition(Integer rposition) {
    this.rposition = rposition;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetContactsAutocompleteResponseItem getContactsAutocompleteResponseItem = (GetContactsAutocompleteResponseItem) o;
    return Objects.equals(this.entityId, getContactsAutocompleteResponseItem.entityId) &&
        Objects.equals(this.entityType, getContactsAutocompleteResponseItem.entityType) &&
        Objects.equals(this.value, getContactsAutocompleteResponseItem.value) &&
        Objects.equals(this.label, getContactsAutocompleteResponseItem.label) &&
        Objects.equals(this.sharedBy, getContactsAutocompleteResponseItem.sharedBy) &&
        Objects.equals(this.isShared, getContactsAutocompleteResponseItem.isShared) &&
        Objects.equals(this.avatar, getContactsAutocompleteResponseItem.avatar) &&
        Objects.equals(this.favorited, getContactsAutocompleteResponseItem.favorited) &&
        Objects.equals(this.userId, getContactsAutocompleteResponseItem.userId) &&
        Objects.equals(this.countryName, getContactsAutocompleteResponseItem.countryName) &&
        Objects.equals(this.qposition, getContactsAutocompleteResponseItem.qposition) &&
        Objects.equals(this.rposition, getContactsAutocompleteResponseItem.rposition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, entityType, value, label, sharedBy, isShared, avatar, favorited, userId, countryName, qposition, rposition);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetContactsAutocompleteResponseItem {\n");
    
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    sharedBy: ").append(toIndentedString(sharedBy)).append("\n");
    sb.append("    isShared: ").append(toIndentedString(isShared)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    favorited: ").append(toIndentedString(favorited)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    countryName: ").append(toIndentedString(countryName)).append("\n");
    sb.append("    qposition: ").append(toIndentedString(qposition)).append("\n");
    sb.append("    rposition: ").append(toIndentedString(rposition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

