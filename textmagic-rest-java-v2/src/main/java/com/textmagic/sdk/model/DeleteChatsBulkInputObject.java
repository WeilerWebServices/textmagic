/*
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.textmagic.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DeleteChatsBulkInputObject
 */

public class DeleteChatsBulkInputObject {
  @SerializedName("ids")
  private String ids = null;

  @SerializedName("all")
  private Boolean all = null;

  /**
   * Default is an empty string. If set, all entities with specified status will be affected.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    A("a"),
    
    C("c"),
    
    D("d");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  public DeleteChatsBulkInputObject ids(String ids) {
    this.ids = ids;
    return this;
  }

   /**
   * Entity ID(s), separated by comma.
   * @return ids
  **/
  @ApiModelProperty(example = "1,2,3", value = "Entity ID(s), separated by comma.")
  public String getIds() {
    return ids;
  }

  public void setIds(String ids) {
    this.ids = ids;
  }

  public DeleteChatsBulkInputObject all(Boolean all) {
    this.all = all;
    return this;
  }

   /**
   * Entity ID(s), separated by comma.
   * @return all
  **/
  @ApiModelProperty(example = "false", value = "Entity ID(s), separated by comma.")
  public Boolean isAll() {
    return all;
  }

  public void setAll(Boolean all) {
    this.all = all;
  }

  public DeleteChatsBulkInputObject status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Default is an empty string. If set, all entities with specified status will be affected.
   * @return status
  **/
  @ApiModelProperty(example = "a", value = "Default is an empty string. If set, all entities with specified status will be affected.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteChatsBulkInputObject deleteChatsBulkInputObject = (DeleteChatsBulkInputObject) o;
    return Objects.equals(this.ids, deleteChatsBulkInputObject.ids) &&
        Objects.equals(this.all, deleteChatsBulkInputObject.all) &&
        Objects.equals(this.status, deleteChatsBulkInputObject.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ids, all, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteChatsBulkInputObject {\n");
    
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    all: ").append(toIndentedString(all)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

