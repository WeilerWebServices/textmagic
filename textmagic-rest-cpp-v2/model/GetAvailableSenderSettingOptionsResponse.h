/**
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.8.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * GetAvailableSenderSettingOptionsResponse.h
 *
 * 
 */

#ifndef COM_TEXTMAGIC_CLIENT_MODEL_GetAvailableSenderSettingOptionsResponse_H_
#define COM_TEXTMAGIC_CLIENT_MODEL_GetAvailableSenderSettingOptionsResponse_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace com {
namespace textmagic {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  GetAvailableSenderSettingOptionsResponse
    : public ModelBase
{
public:
    GetAvailableSenderSettingOptionsResponse();
    virtual ~GetAvailableSenderSettingOptionsResponse();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// GetAvailableSenderSettingOptionsResponse members

    /// <summary>
    /// Array of dedicated number strings.
    /// </summary>
    std::vector<utility::string_t>& getDedicated();
        void setDedicated(std::vector<utility::string_t> value);
    /// <summary>
    /// Array of verified account phone numbers (currently only one).
    /// </summary>
    std::vector<utility::string_t>& getUser();
        void setUser(std::vector<utility::string_t> value);
    /// <summary>
    /// Array of shared number strings.
    /// </summary>
    std::vector<utility::string_t>& getShared();
        void setShared(std::vector<utility::string_t> value);
    /// <summary>
    /// Array of alphanumeric sender IDs.
    /// </summary>
    std::vector<utility::string_t>& getSenderIds();
        void setSenderIds(std::vector<utility::string_t> value);

protected:
    std::vector<utility::string_t> m_Dedicated;
        std::vector<utility::string_t> m_User;
        std::vector<utility::string_t> m_Shared;
        std::vector<utility::string_t> m_SenderIds;
    };

}
}
}
}

#endif /* COM_TEXTMAGIC_CLIENT_MODEL_GetAvailableSenderSettingOptionsResponse_H_ */
