<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TextMagicClient</name>
    </assembly>
    <members>
        <member name="T:TextMagicClient.Api.ITextMagicApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:TextMagicClient.Client.IApiAccessor">
            <summary>
            Represents configuration aspects required to interact with the API endpoints.
            </summary>
        </member>
        <member name="M:TextMagicClient.Client.IApiAccessor.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:TextMagicClient.Client.IApiAccessor.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:TextMagicClient.Client.IApiAccessor.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.AssignContactsToList(TextMagicClient.Model.AssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Assign contacts to a list
            </summary>
            <remarks>
            &gt; Unlike all other PUT requests, this command does not need old contact IDs to be submitted. For example, if you have a list with contacts 150, 151 and 152 and you want to add contact ID 153, you only need to submit 153 as a parameter of PUT /api/v2/lists/{id}/contacts. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="assignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.AssignContactsToListWithHttpInfo(TextMagicClient.Model.AssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Assign contacts to a list
            </summary>
            <remarks>
            &gt; Unlike all other PUT requests, this command does not need old contact IDs to be submitted. For example, if you have a list with contacts 150, 151 and 152 and you want to add contact ID 153, you only need to submit 153 as a parameter of PUT /api/v2/lists/{id}/contacts. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="assignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.BlockContact(TextMagicClient.Model.BlockContactInputObject)">
            <summary>
            Block a contact by phone number
            </summary>
            <remarks>
            Block a contact from inbound and outbound communication by phone number.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="blockContactInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.BlockContactWithHttpInfo(TextMagicClient.Model.BlockContactInputObject)">
            <summary>
            Block a contact by phone number
            </summary>
            <remarks>
            Block a contact from inbound and outbound communication by phone number.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="blockContactInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.BuyDedicatedNumber(TextMagicClient.Model.BuyDedicatedNumberInputObject)">
            <summary>
            Buy a dedicated number
            </summary>
            <remarks>
            To buy a dedicated number, you first need to find an available number matching your criteria using the `/api/v2/numbers/available` command described above.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="buyDedicatedNumberInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.BuyDedicatedNumberWithHttpInfo(TextMagicClient.Model.BuyDedicatedNumberInputObject)">
            <summary>
            Buy a dedicated number
            </summary>
            <remarks>
            To buy a dedicated number, you first need to find an available number matching your criteria using the `/api/v2/numbers/available` command described above.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="buyDedicatedNumberInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CancelVerification(System.String)">
            <summary>
            Cancel verification process
            </summary>
            <remarks>
            You can cancel the verification not earlier than 30 seconds after the initial request.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="verifyId">The verifyId that you received in Step 1.</param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CancelVerificationWithHttpInfo(System.String)">
            <summary>
            Cancel verification process
            </summary>
            <remarks>
            You can cancel the verification not earlier than 30 seconds after the initial request.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="verifyId">The verifyId that you received in Step 1.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CheckPhoneVerificationCodeTFA(TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 2: Check the verification code 
            </summary>
            <remarks>
            Check received code from user with the code which was actually sent.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkPhoneVerificationCodeTFAInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CheckPhoneVerificationCodeTFAWithHttpInfo(TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 2: Check the verification code 
            </summary>
            <remarks>
            Check received code from user with the code which was actually sent.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkPhoneVerificationCodeTFAInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.ClearAndAssignContactsToList(TextMagicClient.Model.ClearAndAssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Reset list members to the specified contacts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="clearAndAssignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.ClearAndAssignContactsToListWithHttpInfo(TextMagicClient.Model.ClearAndAssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Reset list members to the specified contacts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="clearAndAssignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CloseChatsBulk(TextMagicClient.Model.CloseChatsBulkInputObject)">
            <summary>
            Close chats (bulk)
            </summary>
            <remarks>
            Close chats by chat IDs or close all chats
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="closeChatsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CloseChatsBulkWithHttpInfo(TextMagicClient.Model.CloseChatsBulkInputObject)">
            <summary>
            Close chats (bulk)
            </summary>
            <remarks>
            Close chats by chat IDs or close all chats
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="closeChatsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CloseReadChats">
            <summary>
            Close read chats
            </summary>
            <remarks>
            Close all chats that have no unread messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CloseReadChatsWithHttpInfo">
            <summary>
            Close read chats
            </summary>
            <remarks>
            Close all chats that have no unread messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CloseSubaccount(System.Nullable{System.Int32})">
            <summary>
            Close sub-account
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CloseSubaccountWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Close sub-account
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateContact(TextMagicClient.Model.CreateContactInputObject)">
            <summary>
            Add a new contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateContactWithHttpInfo(TextMagicClient.Model.CreateContactInputObject)">
            <summary>
            Add a new contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateContactNote(TextMagicClient.Model.CreateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Create a new contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateContactNoteWithHttpInfo(TextMagicClient.Model.CreateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Create a new contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateCustomField(TextMagicClient.Model.CreateCustomFieldInputObject)">
            <summary>
            Add a new custom field
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createCustomFieldInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateCustomFieldWithHttpInfo(TextMagicClient.Model.CreateCustomFieldInputObject)">
            <summary>
            Add a new custom field
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createCustomFieldInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateList(TextMagicClient.Model.CreateListInputObject)">
            <summary>
            Create a new list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createListInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateListWithHttpInfo(TextMagicClient.Model.CreateListInputObject)">
            <summary>
            Create a new list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createListInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateTemplate(TextMagicClient.Model.CreateTemplateInputObject)">
            <summary>
            Create a template
            </summary>
            <remarks>
            There are times when creating a new template makes sense (such as when targeting specific clients or improving your business strategies).  You can create new SMS templates for marketing purposes or SMS templates for business campaigns. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createTemplateInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateTemplateWithHttpInfo(TextMagicClient.Model.CreateTemplateInputObject)">
            <summary>
            Create a template
            </summary>
            <remarks>
            There are times when creating a new template makes sense (such as when targeting specific clients or improving your business strategies).  You can create new SMS templates for marketing purposes or SMS templates for business campaigns. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createTemplateInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteAllContacts">
            <summary>
            Delete contacts (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteAllContactsWithHttpInfo">
            <summary>
            Delete contacts (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteAllOutboundMessages">
            <summary>
            Delete all messages
            </summary>
            <remarks>
            Delete all messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteAllOutboundMessagesWithHttpInfo">
            <summary>
            Delete all messages
            </summary>
            <remarks>
            Delete all messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteAvatar">
            <summary>
            Delete an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteAvatarWithHttpInfo">
            <summary>
            Delete an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteChatMessages(TextMagicClient.Model.DeleteChatMessagesBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete chat messages by ID(s)
            </summary>
            <remarks>
            Delete messages from chat by given message IDs.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatMessagesBulkInputObject"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteChatMessagesWithHttpInfo(TextMagicClient.Model.DeleteChatMessagesBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete chat messages by ID(s)
            </summary>
            <remarks>
            Delete messages from chat by given message IDs.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatMessagesBulkInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteChatsBulk(TextMagicClient.Model.DeleteChatsBulkInputObject)">
            <summary>
            Delete chats (bulk)
            </summary>
            <remarks>
            Delete chats by given IDs or delete all chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteChatsBulkWithHttpInfo(TextMagicClient.Model.DeleteChatsBulkInputObject)">
            <summary>
            Delete chats (bulk)
            </summary>
            <remarks>
            Delete chats by given IDs or delete all chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContact(System.Nullable{System.Int32})">
            <summary>
            Delete a contact
            </summary>
            <remarks>
            &gt; This command removes your contact completely. If it was assigned or saved to a shared list, it will disappear from there too. If you only need to remove a contact from selected lists, use the Contact assignment command in the Lists section instead, rather than deleting the contact. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a contact
            </summary>
            <remarks>
            &gt; This command removes your contact completely. If it was assigned or saved to a shared list, it will disappear from there too. If you only need to remove a contact from selected lists, use the Contact assignment command in the Lists section instead, rather than deleting the contact. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactAvatar(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactAvatarWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactNote(System.Nullable{System.Int32})">
            <summary>
            Delete a contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactNoteWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactNotesBulk(System.Nullable{System.Int32},TextMagicClient.Model.DeleteContactNotesBulkInputObject)">
            <summary>
            Delete contact notes (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="deleteContactNotesBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactNotesBulkWithHttpInfo(System.Nullable{System.Int32},TextMagicClient.Model.DeleteContactNotesBulkInputObject)">
            <summary>
            Delete contact notes (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="deleteContactNotesBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactsByIds(TextMagicClient.Model.DeleteContactsByIdsInputObject)">
            <summary>
            Delete contacts by IDs (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContactsByIdsInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactsByIdsWithHttpInfo(TextMagicClient.Model.DeleteContactsByIdsInputObject)">
            <summary>
            Delete contacts by IDs (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContactsByIdsInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactsFromList(TextMagicClient.Model.DeleteContacsFromListObject,System.Nullable{System.Int32})">
            <summary>
            Unassign contacts from a list
            </summary>
            <remarks>
            &gt; When you remove contacts from a specific list, they will be deleted permanently, unless they are first saved in another list. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContacsFromListObject"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactsFromListWithHttpInfo(TextMagicClient.Model.DeleteContacsFromListObject,System.Nullable{System.Int32})">
            <summary>
            Unassign contacts from a list
            </summary>
            <remarks>
            &gt; When you remove contacts from a specific list, they will be deleted permanently, unless they are first saved in another list. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContacsFromListObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteCustomField(System.Nullable{System.Int32})">
            <summary>
            Delete a custom field
            </summary>
            <remarks>
            &gt; When a custom field is deleted, all the information that was added to contacts under this custom field will also be lost. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteCustomFieldWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a custom field
            </summary>
            <remarks>
            &gt; When a custom field is deleted, all the information that was added to contacts under this custom field will also be lost. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteDedicatedNumber(System.Nullable{System.Int32})">
            <summary>
            Cancel a dedicated number subscription
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteDedicatedNumberWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Cancel a dedicated number subscription
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteInboundMessage(System.Nullable{System.Int32})">
            <summary>
            Delete a single inbound message
            </summary>
            <remarks>
            &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteInboundMessageWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a single inbound message
            </summary>
            <remarks>
            &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteInboundMessagesBulk(TextMagicClient.Model.DeleteInboundMessagesBulkInputObject)">
            <summary>
            Delete inbound messages (bulk)
            </summary>
            <remarks>
            &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteInboundMessagesBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteInboundMessagesBulkWithHttpInfo(TextMagicClient.Model.DeleteInboundMessagesBulkInputObject)">
            <summary>
            Delete inbound messages (bulk)
            </summary>
            <remarks>
            &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteInboundMessagesBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteList(System.Nullable{System.Int32})">
            <summary>
            Delete a list
            </summary>
            <remarks>
            This command has no parameters. If successful, this command will return the standard delete response (204 No Content); otherwise, a standard error response will be returned.  When you delete a list, the contacts in it are deleted as well, unless they were saved in another list.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteListWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a list
            </summary>
            <remarks>
            This command has no parameters. If successful, this command will return the standard delete response (204 No Content); otherwise, a standard error response will be returned.  When you delete a list, the contacts in it are deleted as well, unless they were saved in another list.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteListAvatar(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar for a list
            </summary>
            <remarks>
            Delete an avatar for a list
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteListAvatarWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar for a list
            </summary>
            <remarks>
            Delete an avatar for a list
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteListContactsBulk(TextMagicClient.Model.DeleteListContactsBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete contacts from a list (bulk)
            </summary>
            <remarks>
            Delete contacts from a list (bulk)
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListContactsBulkInputObject"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteListContactsBulkWithHttpInfo(TextMagicClient.Model.DeleteListContactsBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete contacts from a list (bulk)
            </summary>
            <remarks>
            Delete contacts from a list (bulk)
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListContactsBulkInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteListsBulk(TextMagicClient.Model.DeleteListsBulkInputObject)">
            <summary>
            Delete lists (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteListsBulkWithHttpInfo(TextMagicClient.Model.DeleteListsBulkInputObject)">
            <summary>
            Delete lists (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteMessageSession(System.Nullable{System.Int32})">
            <summary>
            Delete a session
            </summary>
            <remarks>
            Delete a message session, together with all nested messages. &gt; You will not be refunded for any deleted sent sessions. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteMessageSessionWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a session
            </summary>
            <remarks>
            Delete a message session, together with all nested messages. &gt; You will not be refunded for any deleted sent sessions. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteMessageSessionsBulk(TextMagicClient.Model.DeleteMessageSessionsBulkInputObject)">
            <summary>
            Delete sessions (bulk)
            </summary>
            <remarks>
            Delete message sessions, together with all nested messages, by given ID(s) or delete all message sessions.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteMessageSessionsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteMessageSessionsBulkWithHttpInfo(TextMagicClient.Model.DeleteMessageSessionsBulkInputObject)">
            <summary>
            Delete sessions (bulk)
            </summary>
            <remarks>
            Delete message sessions, together with all nested messages, by given ID(s) or delete all message sessions.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteMessageSessionsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteOutboundMessage(System.Nullable{System.Int32})">
            <summary>
            Delete message
            </summary>
            <remarks>
            Delete a single message.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteOutboundMessageWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete message
            </summary>
            <remarks>
            Delete a single message.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteOutboundMessagesBulk(TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject)">
            <summary>
            Delete messages (bulk)
            </summary>
            <remarks>
            Delete outbound messages by the given ID(s) or delete all outbound messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteOutboundMessagesBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteOutboundMessagesBulkWithHttpInfo(TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject)">
            <summary>
            Delete messages (bulk)
            </summary>
            <remarks>
            Delete outbound messages by the given ID(s) or delete all outbound messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteOutboundMessagesBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteScheduledMessage(System.Nullable{System.Int32})">
            <summary>
            Delete a single scheduled message
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteScheduledMessageWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a single scheduled message
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteScheduledMessagesBulk(TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject)">
            <summary>
            Delete scheduled messages (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteScheduledMessagesBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteScheduledMessagesBulkWithHttpInfo(TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject)">
            <summary>
            Delete scheduled messages (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteScheduledMessagesBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteSenderId(System.Nullable{System.Int32})">
            <summary>
            Delete a Sender ID
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteSenderIdWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a Sender ID
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteTemplate(System.Nullable{System.Int32})">
            <summary>
            Delete a template
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteTemplateWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a template
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteTemplatesBulk(TextMagicClient.Model.DeleteTemplatesBulkInputObject)">
            <summary>
            Delete templates (bulk)
            </summary>
            <remarks>
            Delete templates by given IDs or delete all templates.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteTemplatesBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteTemplatesBulkWithHttpInfo(TextMagicClient.Model.DeleteTemplatesBulkInputObject)">
            <summary>
            Delete templates (bulk)
            </summary>
            <remarks>
            Delete templates by given IDs or delete all templates.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteTemplatesBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DoCarrierLookup(System.String,System.String)">
            <summary>
            Carrier Lookup
            </summary>
            <remarks>
            This API call allows you to retrieve additional information about a phone number: region-specific phone number formatting, carrier, phone type (landline/mobile) and country information.  &gt; Numbers must be checked one by one. You cannot check multiple numbers in one request.   
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164) or in [National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers). </param>
            <param name="country">This option must be specified only if the phone number is in a **[National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers)**.  (optional)</param>
            <returns>DoCarrierLookupResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DoCarrierLookupWithHttpInfo(System.String,System.String)">
            <summary>
            Carrier Lookup
            </summary>
            <remarks>
            This API call allows you to retrieve additional information about a phone number: region-specific phone number formatting, carrier, phone type (landline/mobile) and country information.  &gt; Numbers must be checked one by one. You cannot check multiple numbers in one request.   
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164) or in [National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers). </param>
            <param name="country">This option must be specified only if the phone number is in a **[National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers)**.  (optional)</param>
            <returns>ApiResponse of DoCarrierLookupResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DoEmailLookup(System.String)">
            <summary>
            Email Lookup
            </summary>
            <remarks>
            To get more details about an email address or to check whether it is a valid email or not, you can use the Email Lookup command. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).  This API call allows you to retrieve additional information about an email address, such as mailbox detection, syntax checks, DNS validation, deliverability status, and many more helpful values (see the table below).  &gt; Emails must be checked one by one. You cannot check multiple emails in one request. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="email">Email address.</param>
            <returns>DoEmailLookupResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DoEmailLookupWithHttpInfo(System.String)">
            <summary>
            Email Lookup
            </summary>
            <remarks>
            To get more details about an email address or to check whether it is a valid email or not, you can use the Email Lookup command. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).  This API call allows you to retrieve additional information about an email address, such as mailbox detection, syntax checks, DNS validation, deliverability status, and many more helpful values (see the table below).  &gt; Emails must be checked one by one. You cannot check multiple emails in one request. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="email">Email address.</param>
            <returns>ApiResponse of DoEmailLookupResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllBulkSessions(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all bulk sessions
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetAllBulkSessionsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllBulkSessionsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all bulk sessions
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetAllBulkSessionsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllChats(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all chats
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="status">Fetch only (a)ctive, (c)losed or (d)eleted chats. (optional)</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <param name="flat">Should additional contact info be included? (optional, default to 0)</param>
            <returns>GetAllChatsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllChatsWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all chats
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="status">Fetch only (a)ctive, (c)losed or (d)eleted chats. (optional)</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <param name="flat">Should additional contact info be included? (optional, default to 0)</param>
            <returns>ApiResponse of GetAllChatsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllInboundMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all inbound messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>GetAllInboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllInboundMessagesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all inbound messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of GetAllInboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllMessageSessions(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all sessions
            </summary>
            <remarks>
            Get all message sending sessions. &gt; This list contains all of your sessions, including those which were sent but not via API 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetAllMessageSessionsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllMessageSessionsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all sessions
            </summary>
            <remarks>
            Get all message sending sessions. &gt; This list contains all of your sessions, including those which were sent but not via API 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetAllMessageSessionsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllOutboundMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all messages
            </summary>
            <remarks>
            Get all user oubound messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <returns>GetAllOutboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllOutboundMessagesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all messages
            </summary>
            <remarks>
            Get all user oubound messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <returns>ApiResponse of GetAllOutboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllScheduledMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get all scheduled messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>GetAllScheduledMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllScheduledMessagesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get all scheduled messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of GetAllScheduledMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllTemplates(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all templates
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional)</param>
            <param name="limit">The number of results per page. (optional)</param>
            <returns>GetAllTemplatesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllTemplatesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all templates
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional)</param>
            <param name="limit">The number of results per page. (optional)</param>
            <returns>ApiResponse of GetAllTemplatesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAvailableDedicatedNumbers(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find dedicated numbers available for purchase
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter dedicated number country ISO code.</param>
            <param name="prefix">Desired number prefix. Should include the country code (i.e. 447 for UK phone number format). Leave blank to get all the available numbers for the specified country. (optional)</param>
            <param name="tollfree">Should we show only tollfree numbers (tollfree available only for US). (optional, default to 0)</param>
            <returns>GetAvailableDedicatedNumbersResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAvailableDedicatedNumbersWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find dedicated numbers available for purchase
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter dedicated number country ISO code.</param>
            <param name="prefix">Desired number prefix. Should include the country code (i.e. 447 for UK phone number format). Leave blank to get all the available numbers for the specified country. (optional)</param>
            <param name="tollfree">Should we show only tollfree numbers (tollfree available only for US). (optional, default to 0)</param>
            <returns>ApiResponse of GetAvailableDedicatedNumbersResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAvailableSenderSettingOptions(System.String)">
            <summary>
            Get available sender settings
            </summary>
            <remarks>
            Get all available sender setting options which can be used in the \"from\" parameter of the POST messages method.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter ISO country ID. If not specified, it returns all the available sender settings. (optional)</param>
            <returns>GetAvailableSenderSettingOptionsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAvailableSenderSettingOptionsWithHttpInfo(System.String)">
            <summary>
            Get available sender settings
            </summary>
            <remarks>
            Get all available sender setting options which can be used in the \"from\" parameter of the POST messages method.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter ISO country ID. If not specified, it returns all the available sender settings. (optional)</param>
            <returns>ApiResponse of GetAvailableSenderSettingOptionsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBalanceNotificationOptions">
            <summary>
            Returns the list of available balance options which can be used as a bound to determine when to send email to user with low balance notification. See https://my.textmagic.com/online/account/notifications/balance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GetBalanceNotificationOptionsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBalanceNotificationOptionsWithHttpInfo">
            <summary>
            Returns the list of available balance options which can be used as a bound to determine when to send email to user with low balance notification. See https://my.textmagic.com/online/account/notifications/balance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GetBalanceNotificationOptionsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBalanceNotificationSettings">
            <summary>
            Get balance notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GetBalanceNotificationSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBalanceNotificationSettingsWithHttpInfo">
            <summary>
            Get balance notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GetBalanceNotificationSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBlockedContacts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get blocked contacts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find blocked contacts by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>GetBlockedContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBlockedContactsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get blocked contacts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find blocked contacts by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of GetBlockedContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBulkSession(System.Nullable{System.Int32})">
            <summary>
            Get bulk session status
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>BulkSession</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBulkSessionWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get bulk session status
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of BulkSession</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCallbackSettings">
            <summary>
            Fetch callback URL settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GetCallbackSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCallbackSettingsWithHttpInfo">
            <summary>
            Fetch callback URL settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GetCallbackSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetChat(System.Nullable{System.Int32})">
            <summary>
            Get a single chat
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Chat</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetChatWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single chat
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Chat</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetChatByPhone(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find chats by phone
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <param name="upsert">Create a new chat if not found. (optional, default to 0)</param>
            <param name="reopen">Reopen chat if found or do not change status. (optional, default to 0)</param>
            <returns>Chat</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetChatByPhoneWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find chats by phone
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <param name="upsert">Create a new chat if not found. (optional, default to 0)</param>
            <param name="reopen">Reopen chat if found or do not change status. (optional, default to 0)</param>
            <returns>ApiResponse of Chat</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetChatMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Get chat messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="start">Return messages since specified timestamp only. Required when `end` parameter specified. (optional)</param>
            <param name="end">Return messages up to specified timestamp only. Required when `start` parameter specified. (optional)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <returns>GetChatMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetChatMessagesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Get chat messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="start">Return messages since specified timestamp only. Required when `end` parameter specified. (optional)</param>
            <param name="end">Return messages up to specified timestamp only. Required when `start` parameter specified. (optional)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <returns>ApiResponse of GetChatMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContact(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Contact ID.</param>
            <returns>Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Contact ID.</param>
            <returns>ApiResponse of Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactByPhone(System.String)">
            <summary>
            Get the details of a specific contact by phone number
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <returns>Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactByPhoneWithHttpInfo(System.String)">
            <summary>
            Get the details of a specific contact by phone number
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <returns>ApiResponse of Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactIfBlocked(System.String)">
            <summary>
            Check if a phone number is blocked
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number to check.</param>
            <returns>Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactIfBlockedWithHttpInfo(System.String)">
            <summary>
            Check if a phone number is blocked
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number to check.</param>
            <returns>ApiResponse of Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactImportSessionProgress(System.Nullable{System.Int32})">
            <summary>
            Check import progress
            </summary>
            <remarks>
            Get contact import session progress.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>GetContactImportSessionProgressResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactImportSessionProgressWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Check import progress
            </summary>
            <remarks>
            Get contact import session progress.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of GetContactImportSessionProgressResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactNote(System.Nullable{System.Int32})">
            <summary>
            Get a contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ContactNote</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactNoteWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of ContactNote</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactNotes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Fetch notes assigned to a given contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetContactNotesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactNotesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Fetch notes assigned to a given contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetContactNotesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContacts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>GetContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of GetContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactsAutocomplete(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get contacts autocomplete suggestions
            </summary>
            <remarks>
            Get contacts autocomplete suggestions by given search terms.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="query">Find recipients by specified search query.</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lists">Should lists be returned or not? (optional, default to 0)</param>
            <returns>GetContactsAutocompleteResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactsAutocompleteWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get contacts autocomplete suggestions
            </summary>
            <remarks>
            Get contacts autocomplete suggestions by given search terms.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="query">Find recipients by specified search query.</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lists">Should lists be returned or not? (optional, default to 0)</param>
            <returns>ApiResponse of GetContactsAutocompleteResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactsByListId(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts in a list
            </summary>
            <remarks>
            A useful synonym for the \"contacts/search\" command with the provided \"listId\" parameter.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Given group ID.</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>GetContactsByListIdPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactsByListIdWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts in a list
            </summary>
            <remarks>
            A useful synonym for the \"contacts/search\" command with the provided \"listId\" parameter.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Given group ID.</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of GetContactsByListIdPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCountries">
            <summary>
            Get countries
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GetCountriesResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCountriesWithHttpInfo">
            <summary>
            Get countries
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GetCountriesResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCurrentUser">
            <summary>
            Get current account information
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>User</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCurrentUserWithHttpInfo">
            <summary>
            Get current account information
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCustomField(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific custom field
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>UserCustomField</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCustomFieldWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific custom field
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of UserCustomField</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCustomFields(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all custom fields
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetCustomFieldsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCustomFieldsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all custom fields
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetCustomFieldsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetDedicatedNumber(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific dedicated number
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>UsersInbound</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetDedicatedNumberWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific dedicated number
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of UsersInbound</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetFavorites(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get favorite contacts and lists
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find contacts or lists by specified search query. (optional)</param>
            <returns>GetFavoritesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetFavoritesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get favorite contacts and lists
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find contacts or lists by specified search query. (optional)</param>
            <returns>ApiResponse of GetFavoritesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetInboundMessage(System.Nullable{System.Int32})">
            <summary>
            Get a single inbound message
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns>MessageIn</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetInboundMessageWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single inbound message
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns>ApiResponse of MessageIn</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetInboundMessagesNotificationSettings">
            <summary>
            Get inbound messages notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GetInboundMessagesNotificationSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetInboundMessagesNotificationSettingsWithHttpInfo">
            <summary>
            Get inbound messages notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GetInboundMessagesNotificationSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetInvoices(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all invoices
            </summary>
            <remarks>
            With the TextMagic API, you can check the invoices and transactions for your account.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetInvoicesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetInvoicesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all invoices
            </summary>
            <remarks>
            With the TextMagic API, you can check the invoices and transactions for your account.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetInvoicesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetList(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>List</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetListWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of List</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetListContactsIds(System.Nullable{System.Int32})">
            <summary>
            Get all contact IDs in a list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>GetListContactsIdsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetListContactsIdsWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get all contact IDs in a list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of GetListContactsIdsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetLists(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all lists
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">The current fetched page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="favoriteOnly">Return only favorited lists. (optional, default to 0)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <returns>GetListsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetListsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all lists
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">The current fetched page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="favoriteOnly">Return only favorited lists. (optional, default to 0)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <returns>ApiResponse of GetListsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetListsOfContact(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a contact's lists
            </summary>
            <remarks>
            Get all the lists in which a contact is included.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetListsOfContactPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetListsOfContactWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a contact's lists
            </summary>
            <remarks>
            Get all the lists in which a contact is included.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetListsOfContactPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagePreview(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Preview message
            </summary>
            <remarks>
            Get a messages preview (with tags merged) of up to 100 messages per session.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="text">Message text. Required if **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using sendingDateTime and sendingTimezone parameters instead: Optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when the sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending of 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat(if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>GetMessagePreviewResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagePreviewWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Preview message
            </summary>
            <remarks>
            Get a messages preview (with tags merged) of up to 100 messages per session.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="text">Message text. Required if **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using sendingDateTime and sendingTimezone parameters instead: Optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when the sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending of 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat(if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>ApiResponse of GetMessagePreviewResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagePrice(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Check message price
            </summary>
            <remarks>
            Check pricing for a new outbound message.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="includeBlocked">Should we show the pricing for blocked contacts? (optional, default to 0)</param>
            <param name="text">Message text. Required if the **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if the **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using the sendingDateTime and sendingTimezone parameters instead: optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat (if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send a Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>GetMessagePriceResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagePriceWithHttpInfo(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Check message price
            </summary>
            <remarks>
            Check pricing for a new outbound message.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="includeBlocked">Should we show the pricing for blocked contacts? (optional, default to 0)</param>
            <param name="text">Message text. Required if the **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if the **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using the sendingDateTime and sendingTimezone parameters instead: optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat (if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send a Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>ApiResponse of GetMessagePriceResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessageSession(System.Nullable{System.Int32})">
            <summary>
            Get a session`s details
            </summary>
            <remarks>
            Get a specific session’s details.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Session ID.</param>
            <returns>MessageSession</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessageSessionWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a session`s details
            </summary>
            <remarks>
            Get a specific session’s details.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Session ID.</param>
            <returns>ApiResponse of MessageSession</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessageSessionStat(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a session`s statistics
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>GetMessageSessionStatResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessageSessionStatWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a session`s statistics
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>ApiResponse of GetMessageSessionStatResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagesBySessionId(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get a session`s messages
            </summary>
            <remarks>
            A useful synonym for the \"messages/search\" command with the provided \"sessionId\" parameter.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>GetMessagesBySessionIdPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagesBySessionIdWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get a session`s messages
            </summary>
            <remarks>
            A useful synonym for the \"messages/search\" command with the provided \"sessionId\" parameter.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>ApiResponse of GetMessagesBySessionIdPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagingCounters">
            <summary>
            Get sent/received messages counters values
            </summary>
            <remarks>
            Get total contacts, sent messages and received messages counters values.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GetMessagingCountersResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagingCountersWithHttpInfo">
            <summary>
            Get sent/received messages counters values
            </summary>
            <remarks>
            Get total contacts, sent messages and received messages counters values.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GetMessagingCountersResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagingStat(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get messaging statistics
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="by">*   **off** - to get total values per specified time interval; *   **day** - to show values grouped by day; *   **month** - to show values grouped by month; *   **year** - to show values grouped by year.  (optional, default to off)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>GetMessagingStatResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagingStatWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get messaging statistics
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="by">*   **off** - to get total values per specified time interval; *   **day** - to show values grouped by day; *   **month** - to show values grouped by month; *   **year** - to show values grouped by year.  (optional, default to off)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>ApiResponse of GetMessagingStatResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetOutboundMessage(System.Nullable{System.Int32})">
            <summary>
            Get a single message
            </summary>
            <remarks>
            Get a single outgoing message.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>MessageOut</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetOutboundMessageWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single message
            </summary>
            <remarks>
            Get a single outgoing message.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of MessageOut</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetOutboundMessagesHistory(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get history
            </summary>
            <remarks>
            Get the outbound messages history.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. (optional)</param>
            <param name="query">Find message by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>GetOutboundMessagesHistoryPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetOutboundMessagesHistoryWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get history
            </summary>
            <remarks>
            Get the outbound messages history.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. (optional)</param>
            <param name="query">Find message by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of GetOutboundMessagesHistoryPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetScheduledMessage(System.Nullable{System.Int32})">
            <summary>
            Get a single scheduled message
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>MessagesIcs</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetScheduledMessageWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single scheduled message
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of MessagesIcs</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSenderId(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific Sender ID
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>SenderId</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSenderIdWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific Sender ID
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of SenderId</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSenderIds(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your approved Sender IDs
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetSenderIdsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSenderIdsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your approved Sender IDs
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetSenderIdsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSenderSettings(System.String)">
            <summary>
            Get current sender settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">Return sender settings enabled for sending to a specified country. Should be 2 upper-case characters. (optional)</param>
            <returns>GetSenderSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSenderSettingsWithHttpInfo(System.String)">
            <summary>
            Get current sender settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">Return sender settings enabled for sending to a specified country. Should be 2 upper-case characters. (optional)</param>
            <returns>ApiResponse of GetSenderSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSpendingStat(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get spending statistics
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>GetSpendingStatPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSpendingStatWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get spending statistics
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>ApiResponse of GetSpendingStatPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSubaccount(System.Nullable{System.Int32})">
            <summary>
            Get sub-account information
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>User</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSubaccountWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get sub-account information
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSubaccounts(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a sub-accounts list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>User</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSubaccountsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a sub-accounts list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSubaccountsWithTokens(TextMagicClient.Model.GetSubaccountsWithTokensInputObject,System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            Get all sub-accounts with their REST API tokens associated with a specified app name
            </summary>
            <remarks>
            Get all sub-accounts with their REST API tokens associated with specified app name. When more than one token related to app name, last key will be returned.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="getSubaccountsWithTokensInputObject"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetSubaccountsWithTokensResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSubaccountsWithTokensWithHttpInfo(TextMagicClient.Model.GetSubaccountsWithTokensInputObject,System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            Get all sub-accounts with their REST API tokens associated with a specified app name
            </summary>
            <remarks>
            Get all sub-accounts with their REST API tokens associated with specified app name. When more than one token related to app name, last key will be returned.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="getSubaccountsWithTokensInputObject"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetSubaccountsWithTokensResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetTemplate(System.Nullable{System.Int32})">
            <summary>
            Get a template`s details
            </summary>
            <remarks>
            Get a single template.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>MessageTemplate</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetTemplateWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a template`s details
            </summary>
            <remarks>
            Get a single template.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of MessageTemplate</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetTimezones(System.Nullable{System.Int32})">
            <summary>
            Get timezones
            </summary>
            <remarks>
            Return all available timezone IDs
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="full">Return full info about timezones in array (0 or 1). Default is 0. (optional, default to 0)</param>
            <returns>GetTimezonesResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetTimezonesWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get timezones
            </summary>
            <remarks>
            Return all available timezone IDs
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="full">Return full info about timezones in array (0 or 1). Default is 0. (optional, default to 0)</param>
            <returns>ApiResponse of GetTimezonesResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUnreadMessagesTotal">
            <summary>
            Get unread messages number
            </summary>
            <remarks>
            Get the total amount of unread messages in the current user chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GetUnreadMessagesTotalResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUnreadMessagesTotalWithHttpInfo">
            <summary>
            Get unread messages number
            </summary>
            <remarks>
            Get the total amount of unread messages in the current user chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GetUnreadMessagesTotalResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUnsubscribedContact(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific unsubscribed contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>UnsubscribedContact</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUnsubscribedContactWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific unsubscribed contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of UnsubscribedContact</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUnsubscribers(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all unsubscribed contacts
            </summary>
            <remarks>
            When one of your message recipients sends a request with one of the [STOP-words](https://www.textmagic.com/sms-stop-command/), they will be immediately opted-out of your send lists and their contact status will change to an unsubscribed contact. To retrieve information on all contacts who have unsubscribed status, use: 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetUnsubscribersPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUnsubscribersWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all unsubscribed contacts
            </summary>
            <remarks>
            When one of your message recipients sends a request with one of the [STOP-words](https://www.textmagic.com/sms-stop-command/), they will be immediately opted-out of your send lists and their contact status will change to an unsubscribed contact. To retrieve information on all contacts who have unsubscribed status, use: 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetUnsubscribersPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUserDedicatedNumbers(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your dedicated numbers
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="surveyId">Fetch only those numbers that are ready for the survey. (optional)</param>
            <returns>GetUserDedicatedNumbersPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUserDedicatedNumbersWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your dedicated numbers
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="surveyId">Fetch only those numbers that are ready for the survey. (optional)</param>
            <returns>ApiResponse of GetUserDedicatedNumbersPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.ImportContacts(System.IO.Stream,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Import contacts
            </summary>
            <remarks>
            Import contacts from the CSV, XLS or XLSX file.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">File containing contacts in csv or xls(x) formats.</param>
            <param name="column">Import file column mapping. The string must contain sub-strings of mapping in format `columnNumber:field` glued by `;`. For example: `0:firstName;1:lastName;3:phone;4:email` where the value before `:` is a number of the column in the file, and the value after `:` is a field of the newly created contact or the ID of a custom field. Numbers of columns begin from zero. Allowed built-in contact fields are: `firstName`, `lastName`, `phone`, `email`. Existing of `phone` mapping is required. </param>
            <param name="listId">List that ID contacts will be imported to. Ignored if `listName` is specified.  (optional)</param>
            <param name="listName">List name. This list will be created during import. If such name is already taken, an ordinal (1, 2, ...) will be added to the end. Ignored if `listId` is specified.  (optional)</param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.ImportContactsWithHttpInfo(System.IO.Stream,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Import contacts
            </summary>
            <remarks>
            Import contacts from the CSV, XLS or XLSX file.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">File containing contacts in csv or xls(x) formats.</param>
            <param name="column">Import file column mapping. The string must contain sub-strings of mapping in format `columnNumber:field` glued by `;`. For example: `0:firstName;1:lastName;3:phone;4:email` where the value before `:` is a number of the column in the file, and the value after `:` is a field of the newly created contact or the ID of a custom field. Numbers of columns begin from zero. Allowed built-in contact fields are: `firstName`, `lastName`, `phone`, `email`. Existing of `phone` mapping is required. </param>
            <param name="listId">List that ID contacts will be imported to. Ignored if `listName` is specified.  (optional)</param>
            <param name="listName">List name. This list will be created during import. If such name is already taken, an ordinal (1, 2, ...) will be added to the end. Ignored if `listId` is specified.  (optional)</param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.InviteSubaccount(TextMagicClient.Model.InviteSubaccountInputObject)">
            <summary>
            Invite a new sub-account
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="inviteSubaccountInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.InviteSubaccountWithHttpInfo(TextMagicClient.Model.InviteSubaccountInputObject)">
            <summary>
            Invite a new sub-account
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="inviteSubaccountInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MarkChatsReadBulk(TextMagicClient.Model.MarkChatsReadBulkInputObject)">
            <summary>
            Mark chats as read (bulk)
            </summary>
            <remarks>
            Mark several chats as read by chat IDs or mark all chats as read
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsReadBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MarkChatsReadBulkWithHttpInfo(TextMagicClient.Model.MarkChatsReadBulkInputObject)">
            <summary>
            Mark chats as read (bulk)
            </summary>
            <remarks>
            Mark several chats as read by chat IDs or mark all chats as read
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsReadBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MarkChatsUnreadBulk(TextMagicClient.Model.MarkChatsUnreadBulkInputObject)">
            <summary>
            Mark chats as unread (bulk)
            </summary>
            <remarks>
            Mark several chats as UNread by chat IDs or mark all chats as UNread
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsUnreadBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MarkChatsUnreadBulkWithHttpInfo(TextMagicClient.Model.MarkChatsUnreadBulkInputObject)">
            <summary>
            Mark chats as unread (bulk)
            </summary>
            <remarks>
            Mark several chats as UNread by chat IDs or mark all chats as UNread
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsUnreadBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MuteChat(TextMagicClient.Model.MuteChatInputObject)">
            <summary>
            Mute chat sounds
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MuteChatWithHttpInfo(TextMagicClient.Model.MuteChatInputObject)">
            <summary>
            Mute chat sounds
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MuteChatsBulk(TextMagicClient.Model.MuteChatsBulkInputObject)">
            <summary>
            Mute chats (bulk)
            </summary>
            <remarks>
            Mute several chats by chat ids or mute all chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MuteChatsBulkWithHttpInfo(TextMagicClient.Model.MuteChatsBulkInputObject)">
            <summary>
            Mute chats (bulk)
            </summary>
            <remarks>
            Mute several chats by chat ids or mute all chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.Ping">
            <summary>
            Ping
            </summary>
            <remarks>
            Make a simple ping request.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>PingResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.PingWithHttpInfo">
            <summary>
            Ping
            </summary>
            <remarks>
            Make a simple ping request.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of PingResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.ReopenChatsBulk(TextMagicClient.Model.ReopenChatsBulkInputObject)">
            <summary>
            Reopen chats (bulk)
            </summary>
            <remarks>
            Reopen chats by chat IDs or reopen all chats
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="reopenChatsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.ReopenChatsBulkWithHttpInfo(TextMagicClient.Model.ReopenChatsBulkInputObject)">
            <summary>
            Reopen chats (bulk)
            </summary>
            <remarks>
            Reopen chats by chat IDs or reopen all chats
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="reopenChatsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.RequestNewSubaccountToken(TextMagicClient.Model.RequestNewSubaccountTokenInputObject)">
            <summary>
            Request a new REST API token for sub-account
            </summary>
            <remarks>
            Returning user object, key and app name.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestNewSubaccountTokenInputObject"></param>
            <returns>User</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.RequestNewSubaccountTokenWithHttpInfo(TextMagicClient.Model.RequestNewSubaccountTokenInputObject)">
            <summary>
            Request a new REST API token for sub-account
            </summary>
            <remarks>
            Returning user object, key and app name.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestNewSubaccountTokenInputObject"></param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.RequestSenderId(TextMagicClient.Model.RequestSenderIdInputObject)">
            <summary>
            Apply for a new Sender ID
            </summary>
            <remarks>
            &gt; Sender IDs are shared among all of your sub-accounts.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestSenderIdInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.RequestSenderIdWithHttpInfo(TextMagicClient.Model.RequestSenderIdInputObject)">
            <summary>
            Apply for a new Sender ID
            </summary>
            <remarks>
            &gt; Sender IDs are shared among all of your sub-accounts.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestSenderIdInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchChats(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats by message text
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <returns>SearchChatsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchChatsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats by message text
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <returns>ApiResponse of SearchChatsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchChatsByIds(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find chats by ID(s). (optional)</param>
            <returns>SearchChatsByIdsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchChatsByIdsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find chats by ID(s). (optional)</param>
            <returns>ApiResponse of SearchChatsByIdsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchChatsByReceipent(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find chats by recipient
            </summary>
            <remarks>
            Find chats by recipient (contact, list name or phone number).
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <returns>SearchChatsByReceipentPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchChatsByReceipentWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find chats by recipient
            </summary>
            <remarks>
            Find chats by recipient (contact, list name or phone number).
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <returns>ApiResponse of SearchChatsByReceipentPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchContacts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find contacts by given criteria
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="ids">Find contacts by IDs. (optional)</param>
            <param name="listId">Find contacts by List ID. (optional)</param>
            <param name="includeBlocked">Should blocked contacts be included? (optional)</param>
            <param name="query">Find contacts by specified search query. (optional)</param>
            <param name="local">Treat phone number passed in the \"query\" field as local. Default is 0. (optional, default to 0)</param>
            <param name="exactMatch">Return only exactly matching contacts. Default is 0. (optional, default to 0)</param>
            <param name="country">The 2-letter ISO country code for local phone numbers, used when \"local\" is set to true. Default is the account country. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>SearchContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchContactsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find contacts by given criteria
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="ids">Find contacts by IDs. (optional)</param>
            <param name="listId">Find contacts by List ID. (optional)</param>
            <param name="includeBlocked">Should blocked contacts be included? (optional)</param>
            <param name="query">Find contacts by specified search query. (optional)</param>
            <param name="local">Treat phone number passed in the \"query\" field as local. Default is 0. (optional, default to 0)</param>
            <param name="exactMatch">Return only exactly matching contacts. Default is 0. (optional, default to 0)</param>
            <param name="country">The 2-letter ISO country code for local phone numbers, used when \"local\" is set to true. Default is the account country. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of SearchContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchInboundMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Find inbound messages
            </summary>
            <remarks>
            Find inbound messages by given parameters.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="query">Find recipients by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="expand">Expand by adding firstName, lastName and contactId. (optional, default to 0)</param>
            <returns>SearchInboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchInboundMessagesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Find inbound messages
            </summary>
            <remarks>
            Find inbound messages by given parameters.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="query">Find recipients by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="expand">Expand by adding firstName, lastName and contactId. (optional, default to 0)</param>
            <returns>ApiResponse of SearchInboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchLists(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find lists by given criteria
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find lists by IDs. (optional)</param>
            <param name="query">Find lists by specified search query. (optional)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <param name="onlyDefault">Return only default lists. (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>SearchListsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchListsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find lists by given criteria
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find lists by IDs. (optional)</param>
            <param name="query">Find lists by specified search query. (optional)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <param name="onlyDefault">Return only default lists. (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of SearchListsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchOutboundMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Find messages
            </summary>
            <remarks>
            Find outbound messages by given parameters.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="sessionId">Find messages by session ID. (optional)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <returns>SearchOutboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchOutboundMessagesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Find messages
            </summary>
            <remarks>
            Find outbound messages by given parameters.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="sessionId">Find messages by session ID. (optional)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <returns>ApiResponse of SearchOutboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchScheduledMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Find scheduled messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="ids">Find schedules by ID(s). (optional)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>SearchScheduledMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchScheduledMessagesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Find scheduled messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="ids">Find schedules by ID(s). (optional)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of SearchScheduledMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchTemplates(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find templates by criteria
            </summary>
            <remarks>
            Find user templates by given parameters.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find template by ID(s). (optional)</param>
            <param name="name">Find template by name. (optional)</param>
            <param name="content">Find template by content. (optional)</param>
            <returns>SearchTemplatesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchTemplatesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find templates by criteria
            </summary>
            <remarks>
            Find user templates by given parameters.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find template by ID(s). (optional)</param>
            <param name="name">Find template by name. (optional)</param>
            <param name="content">Find template by content. (optional)</param>
            <returns>ApiResponse of SearchTemplatesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SendMessage(TextMagicClient.Model.SendMessageInputObject)">
            <summary>
            Send message
            </summary>
            <remarks>
            This is the main entrypoint to send messages. See the examples above for the reference.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendMessageInputObject"></param>
            <returns>SendMessageResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SendMessageWithHttpInfo(TextMagicClient.Model.SendMessageInputObject)">
            <summary>
            Send message
            </summary>
            <remarks>
            This is the main entrypoint to send messages. See the examples above for the reference.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendMessageInputObject"></param>
            <returns>ApiResponse of SendMessageResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SendPhoneVerificationCodeTFA(TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 1: Send a verification code 
            </summary>
            <remarks>
            Sends a verification code to a specified phone number.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendPhoneVerificationCodeTFAInputObject"></param>
            <returns>SendPhoneVerificationCodeResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SendPhoneVerificationCodeTFAWithHttpInfo(TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 1: Send a verification code 
            </summary>
            <remarks>
            Sends a verification code to a specified phone number.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendPhoneVerificationCodeTFAInputObject"></param>
            <returns>ApiResponse of SendPhoneVerificationCodeResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SetChatStatus(TextMagicClient.Model.SetChatStatusInputObject)">
            <summary>
            Change chat status
            </summary>
            <remarks>
            Set the status of the chat given by ID.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="setChatStatusInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SetChatStatusWithHttpInfo(TextMagicClient.Model.SetChatStatusInputObject)">
            <summary>
            Change chat status
            </summary>
            <remarks>
            Set the status of the chat given by ID.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="setChatStatusInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnblockContact(TextMagicClient.Model.UnblockContactInputObject)">
            <summary>
            Unblock a contact by phone number
            </summary>
            <remarks>
            Unblock a contact by phone number
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnblockContactWithHttpInfo(TextMagicClient.Model.UnblockContactInputObject)">
            <summary>
            Unblock a contact by phone number
            </summary>
            <remarks>
            Unblock a contact by phone number
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnblockContactsBulk(TextMagicClient.Model.UnblockContactsBulkInputObject)">
            <summary>
            Unblock contacts (bulk)
            </summary>
            <remarks>
            Unblock several contacts by blocked contact IDs or unblock all contacts.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnblockContactsBulkWithHttpInfo(TextMagicClient.Model.UnblockContactsBulkInputObject)">
            <summary>
            Unblock contacts (bulk)
            </summary>
            <remarks>
            Unblock several contacts by blocked contact IDs or unblock all contacts.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnmuteChatsBulk(TextMagicClient.Model.UnmuteChatsBulkInputObject)">
            <summary>
            Unmute chats (bulk)
            </summary>
            <remarks>
            Unmute several chats by chat ids or unmute all chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unmuteChatsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnmuteChatsBulkWithHttpInfo(TextMagicClient.Model.UnmuteChatsBulkInputObject)">
            <summary>
            Unmute chats (bulk)
            </summary>
            <remarks>
            Unmute several chats by chat ids or unmute all chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unmuteChatsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnsubscribeContact(TextMagicClient.Model.UnsubscribeContactInputObject)">
            <summary>
            Manually unsubscribe a contact
            </summary>
            <remarks>
            &gt; Please note, if you unsubscribe a contact, this action cannot be reversed. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unsubscribeContactInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnsubscribeContactWithHttpInfo(TextMagicClient.Model.UnsubscribeContactInputObject)">
            <summary>
            Manually unsubscribe a contact
            </summary>
            <remarks>
            &gt; Please note, if you unsubscribe a contact, this action cannot be reversed. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unsubscribeContactInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateBalanceNotificationSettings(TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject)">
            <summary>
            Update balance notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateBalanceNotificationSettingsInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateBalanceNotificationSettingsWithHttpInfo(TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject)">
            <summary>
            Update balance notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateBalanceNotificationSettingsInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCallbackSettings(TextMagicClient.Model.UpdateCallbackSettingsInputObject)">
            <summary>
            Update callback URL settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCallbackSettingsInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCallbackSettingsWithHttpInfo(TextMagicClient.Model.UpdateCallbackSettingsInputObject)">
            <summary>
            Update callback URL settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCallbackSettingsInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateChatDesktopNotificationSettings(TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject)">
            <summary>
            Update chat desktop notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateChatDesktopNotificationSettingsInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateChatDesktopNotificationSettingsWithHttpInfo(TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject)">
            <summary>
            Update chat desktop notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateChatDesktopNotificationSettingsInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateContact(TextMagicClient.Model.UpdateContactInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateContactWithHttpInfo(TextMagicClient.Model.UpdateContactInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateContactNote(TextMagicClient.Model.UpdateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateContactNoteWithHttpInfo(TextMagicClient.Model.UpdateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCurrentUser(TextMagicClient.Model.UpdateCurrentUserInputObject)">
            <summary>
            Edit current account info
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCurrentUserInputObject"></param>
            <returns>UpdateCurrentUserResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCurrentUserWithHttpInfo(TextMagicClient.Model.UpdateCurrentUserInputObject)">
            <summary>
            Edit current account info
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCurrentUserInputObject"></param>
            <returns>ApiResponse of UpdateCurrentUserResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCustomField(TextMagicClient.Model.UpdateCustomFieldInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a custom field
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCustomFieldWithHttpInfo(TextMagicClient.Model.UpdateCustomFieldInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a custom field
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCustomFieldValue(TextMagicClient.Model.UpdateCustomFieldValueInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit the custom field value of a specified contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldValueInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCustomFieldValueWithHttpInfo(TextMagicClient.Model.UpdateCustomFieldValueInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit the custom field value of a specified contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldValueInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateInboundMessagesNotificationSettings(TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject)">
            <summary>
            Update inbound messages notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateInboundMessagesNotificationSettingsInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateInboundMessagesNotificationSettingsWithHttpInfo(TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject)">
            <summary>
            Update inbound messages notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateInboundMessagesNotificationSettingsInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateList(System.Nullable{System.Int32},TextMagicClient.Model.UpdateListObject)">
            <summary>
            Edit a list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="updateListObject"> (optional)</param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateListWithHttpInfo(System.Nullable{System.Int32},TextMagicClient.Model.UpdateListObject)">
            <summary>
            Edit a list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="updateListObject"> (optional)</param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateSenderSetting(TextMagicClient.Model.UpdateSenderSettingInputObject)">
            <summary>
            Change sender settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateSenderSettingInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateSenderSettingWithHttpInfo(TextMagicClient.Model.UpdateSenderSettingInputObject)">
            <summary>
            Change sender settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateSenderSettingInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateTemplate(TextMagicClient.Model.UpdateTemplateInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a template
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateTemplateInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateTemplateWithHttpInfo(TextMagicClient.Model.UpdateTemplateInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a template
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateTemplateInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadAvatar(System.IO.Stream)">
            <summary>
            Upload an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">User avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadAvatarWithHttpInfo(System.IO.Stream)">
            <summary>
            Upload an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">User avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadContactAvatar(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Upload an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">Contact avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadContactAvatarWithHttpInfo(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Upload an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">Contact avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadListAvatar(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Add an avatar for a list
            </summary>
            <remarks>
            Add an avatar for a list
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">List avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadListAvatarWithHttpInfo(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Add an avatar for a list
            </summary>
            <remarks>
            Add an avatar for a list
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">List avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadMessageAttachment(System.IO.Stream)">
            <summary>
            Upload message attachment
            </summary>
            <remarks>
            Upload a new file to insert it as a link.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>UploadMessageAttachmentResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadMessageAttachmentWithHttpInfo(System.IO.Stream)">
            <summary>
            Upload message attachment
            </summary>
            <remarks>
            Upload a new file to insert it as a link.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>ApiResponse of UploadMessageAttachmentResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadMessageMMSAttachment(System.IO.Stream)">
            <summary>
            Upload message mms attachment
            </summary>
            <remarks>
            Upload a new file to mms.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>UploadMessageAttachmentResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadMessageMMSAttachmentWithHttpInfo(System.IO.Stream)">
            <summary>
            Upload message mms attachment
            </summary>
            <remarks>
            Upload a new file to mms.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>ApiResponse of UploadMessageAttachmentResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.AssignContactsToListAsync(TextMagicClient.Model.AssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Assign contacts to a list
            </summary>
            <remarks>
            &gt; Unlike all other PUT requests, this command does not need old contact IDs to be submitted. For example, if you have a list with contacts 150, 151 and 152 and you want to add contact ID 153, you only need to submit 153 as a parameter of PUT /api/v2/lists/{id}/contacts. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="assignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.AssignContactsToListAsyncWithHttpInfo(TextMagicClient.Model.AssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Assign contacts to a list
            </summary>
            <remarks>
            &gt; Unlike all other PUT requests, this command does not need old contact IDs to be submitted. For example, if you have a list with contacts 150, 151 and 152 and you want to add contact ID 153, you only need to submit 153 as a parameter of PUT /api/v2/lists/{id}/contacts. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="assignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.BlockContactAsync(TextMagicClient.Model.BlockContactInputObject)">
            <summary>
            Block a contact by phone number
            </summary>
            <remarks>
            Block a contact from inbound and outbound communication by phone number.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="blockContactInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.BlockContactAsyncWithHttpInfo(TextMagicClient.Model.BlockContactInputObject)">
            <summary>
            Block a contact by phone number
            </summary>
            <remarks>
            Block a contact from inbound and outbound communication by phone number.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="blockContactInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.BuyDedicatedNumberAsync(TextMagicClient.Model.BuyDedicatedNumberInputObject)">
            <summary>
            Buy a dedicated number
            </summary>
            <remarks>
            To buy a dedicated number, you first need to find an available number matching your criteria using the `/api/v2/numbers/available` command described above.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="buyDedicatedNumberInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.BuyDedicatedNumberAsyncWithHttpInfo(TextMagicClient.Model.BuyDedicatedNumberInputObject)">
            <summary>
            Buy a dedicated number
            </summary>
            <remarks>
            To buy a dedicated number, you first need to find an available number matching your criteria using the `/api/v2/numbers/available` command described above.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="buyDedicatedNumberInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CancelVerificationAsync(System.String)">
            <summary>
            Cancel verification process
            </summary>
            <remarks>
            You can cancel the verification not earlier than 30 seconds after the initial request.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="verifyId">The verifyId that you received in Step 1.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CancelVerificationAsyncWithHttpInfo(System.String)">
            <summary>
            Cancel verification process
            </summary>
            <remarks>
            You can cancel the verification not earlier than 30 seconds after the initial request.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="verifyId">The verifyId that you received in Step 1.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CheckPhoneVerificationCodeTFAAsync(TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 2: Check the verification code 
            </summary>
            <remarks>
            Check received code from user with the code which was actually sent.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkPhoneVerificationCodeTFAInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CheckPhoneVerificationCodeTFAAsyncWithHttpInfo(TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 2: Check the verification code 
            </summary>
            <remarks>
            Check received code from user with the code which was actually sent.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkPhoneVerificationCodeTFAInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.ClearAndAssignContactsToListAsync(TextMagicClient.Model.ClearAndAssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Reset list members to the specified contacts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="clearAndAssignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.ClearAndAssignContactsToListAsyncWithHttpInfo(TextMagicClient.Model.ClearAndAssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Reset list members to the specified contacts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="clearAndAssignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CloseChatsBulkAsync(TextMagicClient.Model.CloseChatsBulkInputObject)">
            <summary>
            Close chats (bulk)
            </summary>
            <remarks>
            Close chats by chat IDs or close all chats
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="closeChatsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CloseChatsBulkAsyncWithHttpInfo(TextMagicClient.Model.CloseChatsBulkInputObject)">
            <summary>
            Close chats (bulk)
            </summary>
            <remarks>
            Close chats by chat IDs or close all chats
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="closeChatsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CloseReadChatsAsync">
            <summary>
            Close read chats
            </summary>
            <remarks>
            Close all chats that have no unread messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CloseReadChatsAsyncWithHttpInfo">
            <summary>
            Close read chats
            </summary>
            <remarks>
            Close all chats that have no unread messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CloseSubaccountAsync(System.Nullable{System.Int32})">
            <summary>
            Close sub-account
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CloseSubaccountAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Close sub-account
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateContactAsync(TextMagicClient.Model.CreateContactInputObject)">
            <summary>
            Add a new contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateContactAsyncWithHttpInfo(TextMagicClient.Model.CreateContactInputObject)">
            <summary>
            Add a new contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateContactNoteAsync(TextMagicClient.Model.CreateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Create a new contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateContactNoteAsyncWithHttpInfo(TextMagicClient.Model.CreateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Create a new contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateCustomFieldAsync(TextMagicClient.Model.CreateCustomFieldInputObject)">
            <summary>
            Add a new custom field
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createCustomFieldInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateCustomFieldAsyncWithHttpInfo(TextMagicClient.Model.CreateCustomFieldInputObject)">
            <summary>
            Add a new custom field
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createCustomFieldInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateListAsync(TextMagicClient.Model.CreateListInputObject)">
            <summary>
            Create a new list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createListInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateListAsyncWithHttpInfo(TextMagicClient.Model.CreateListInputObject)">
            <summary>
            Create a new list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createListInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateTemplateAsync(TextMagicClient.Model.CreateTemplateInputObject)">
            <summary>
            Create a template
            </summary>
            <remarks>
            There are times when creating a new template makes sense (such as when targeting specific clients or improving your business strategies).  You can create new SMS templates for marketing purposes or SMS templates for business campaigns. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createTemplateInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.CreateTemplateAsyncWithHttpInfo(TextMagicClient.Model.CreateTemplateInputObject)">
            <summary>
            Create a template
            </summary>
            <remarks>
            There are times when creating a new template makes sense (such as when targeting specific clients or improving your business strategies).  You can create new SMS templates for marketing purposes or SMS templates for business campaigns. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createTemplateInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteAllContactsAsync">
            <summary>
            Delete contacts (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteAllContactsAsyncWithHttpInfo">
            <summary>
            Delete contacts (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteAllOutboundMessagesAsync">
            <summary>
            Delete all messages
            </summary>
            <remarks>
            Delete all messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteAllOutboundMessagesAsyncWithHttpInfo">
            <summary>
            Delete all messages
            </summary>
            <remarks>
            Delete all messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteAvatarAsync">
            <summary>
            Delete an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteAvatarAsyncWithHttpInfo">
            <summary>
            Delete an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteChatMessagesAsync(TextMagicClient.Model.DeleteChatMessagesBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete chat messages by ID(s)
            </summary>
            <remarks>
            Delete messages from chat by given message IDs.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatMessagesBulkInputObject"></param>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteChatMessagesAsyncWithHttpInfo(TextMagicClient.Model.DeleteChatMessagesBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete chat messages by ID(s)
            </summary>
            <remarks>
            Delete messages from chat by given message IDs.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatMessagesBulkInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteChatsBulkAsync(TextMagicClient.Model.DeleteChatsBulkInputObject)">
            <summary>
            Delete chats (bulk)
            </summary>
            <remarks>
            Delete chats by given IDs or delete all chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteChatsBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteChatsBulkInputObject)">
            <summary>
            Delete chats (bulk)
            </summary>
            <remarks>
            Delete chats by given IDs or delete all chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a contact
            </summary>
            <remarks>
            &gt; This command removes your contact completely. If it was assigned or saved to a shared list, it will disappear from there too. If you only need to remove a contact from selected lists, use the Contact assignment command in the Lists section instead, rather than deleting the contact. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a contact
            </summary>
            <remarks>
            &gt; This command removes your contact completely. If it was assigned or saved to a shared list, it will disappear from there too. If you only need to remove a contact from selected lists, use the Contact assignment command in the Lists section instead, rather than deleting the contact. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactAvatarAsync(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactAvatarAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactNoteAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactNoteAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactNotesBulkAsync(System.Nullable{System.Int32},TextMagicClient.Model.DeleteContactNotesBulkInputObject)">
            <summary>
            Delete contact notes (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="deleteContactNotesBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactNotesBulkAsyncWithHttpInfo(System.Nullable{System.Int32},TextMagicClient.Model.DeleteContactNotesBulkInputObject)">
            <summary>
            Delete contact notes (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="deleteContactNotesBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactsByIdsAsync(TextMagicClient.Model.DeleteContactsByIdsInputObject)">
            <summary>
            Delete contacts by IDs (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContactsByIdsInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactsByIdsAsyncWithHttpInfo(TextMagicClient.Model.DeleteContactsByIdsInputObject)">
            <summary>
            Delete contacts by IDs (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContactsByIdsInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactsFromListAsync(TextMagicClient.Model.DeleteContacsFromListObject,System.Nullable{System.Int32})">
            <summary>
            Unassign contacts from a list
            </summary>
            <remarks>
            &gt; When you remove contacts from a specific list, they will be deleted permanently, unless they are first saved in another list. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContacsFromListObject"></param>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteContactsFromListAsyncWithHttpInfo(TextMagicClient.Model.DeleteContacsFromListObject,System.Nullable{System.Int32})">
            <summary>
            Unassign contacts from a list
            </summary>
            <remarks>
            &gt; When you remove contacts from a specific list, they will be deleted permanently, unless they are first saved in another list. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContacsFromListObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteCustomFieldAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a custom field
            </summary>
            <remarks>
            &gt; When a custom field is deleted, all the information that was added to contacts under this custom field will also be lost. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteCustomFieldAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a custom field
            </summary>
            <remarks>
            &gt; When a custom field is deleted, all the information that was added to contacts under this custom field will also be lost. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteDedicatedNumberAsync(System.Nullable{System.Int32})">
            <summary>
            Cancel a dedicated number subscription
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteDedicatedNumberAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Cancel a dedicated number subscription
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteInboundMessageAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a single inbound message
            </summary>
            <remarks>
            &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteInboundMessageAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a single inbound message
            </summary>
            <remarks>
            &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteInboundMessagesBulkAsync(TextMagicClient.Model.DeleteInboundMessagesBulkInputObject)">
            <summary>
            Delete inbound messages (bulk)
            </summary>
            <remarks>
            &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteInboundMessagesBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteInboundMessagesBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteInboundMessagesBulkInputObject)">
            <summary>
            Delete inbound messages (bulk)
            </summary>
            <remarks>
            &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteInboundMessagesBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteListAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a list
            </summary>
            <remarks>
            This command has no parameters. If successful, this command will return the standard delete response (204 No Content); otherwise, a standard error response will be returned.  When you delete a list, the contacts in it are deleted as well, unless they were saved in another list.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteListAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a list
            </summary>
            <remarks>
            This command has no parameters. If successful, this command will return the standard delete response (204 No Content); otherwise, a standard error response will be returned.  When you delete a list, the contacts in it are deleted as well, unless they were saved in another list.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteListAvatarAsync(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar for a list
            </summary>
            <remarks>
            Delete an avatar for a list
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteListAvatarAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar for a list
            </summary>
            <remarks>
            Delete an avatar for a list
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteListContactsBulkAsync(TextMagicClient.Model.DeleteListContactsBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete contacts from a list (bulk)
            </summary>
            <remarks>
            Delete contacts from a list (bulk)
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListContactsBulkInputObject"></param>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteListContactsBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteListContactsBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete contacts from a list (bulk)
            </summary>
            <remarks>
            Delete contacts from a list (bulk)
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListContactsBulkInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteListsBulkAsync(TextMagicClient.Model.DeleteListsBulkInputObject)">
            <summary>
            Delete lists (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteListsBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteListsBulkInputObject)">
            <summary>
            Delete lists (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteMessageSessionAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a session
            </summary>
            <remarks>
            Delete a message session, together with all nested messages. &gt; You will not be refunded for any deleted sent sessions. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteMessageSessionAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a session
            </summary>
            <remarks>
            Delete a message session, together with all nested messages. &gt; You will not be refunded for any deleted sent sessions. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteMessageSessionsBulkAsync(TextMagicClient.Model.DeleteMessageSessionsBulkInputObject)">
            <summary>
            Delete sessions (bulk)
            </summary>
            <remarks>
            Delete message sessions, together with all nested messages, by given ID(s) or delete all message sessions.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteMessageSessionsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteMessageSessionsBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteMessageSessionsBulkInputObject)">
            <summary>
            Delete sessions (bulk)
            </summary>
            <remarks>
            Delete message sessions, together with all nested messages, by given ID(s) or delete all message sessions.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteMessageSessionsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteOutboundMessageAsync(System.Nullable{System.Int32})">
            <summary>
            Delete message
            </summary>
            <remarks>
            Delete a single message.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteOutboundMessageAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete message
            </summary>
            <remarks>
            Delete a single message.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteOutboundMessagesBulkAsync(TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject)">
            <summary>
            Delete messages (bulk)
            </summary>
            <remarks>
            Delete outbound messages by the given ID(s) or delete all outbound messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteOutboundMessagesBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteOutboundMessagesBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject)">
            <summary>
            Delete messages (bulk)
            </summary>
            <remarks>
            Delete outbound messages by the given ID(s) or delete all outbound messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteOutboundMessagesBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteScheduledMessageAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a single scheduled message
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteScheduledMessageAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a single scheduled message
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteScheduledMessagesBulkAsync(TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject)">
            <summary>
            Delete scheduled messages (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteScheduledMessagesBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteScheduledMessagesBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject)">
            <summary>
            Delete scheduled messages (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteScheduledMessagesBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteSenderIdAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a Sender ID
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteSenderIdAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a Sender ID
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteTemplateAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a template
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteTemplateAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a template
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteTemplatesBulkAsync(TextMagicClient.Model.DeleteTemplatesBulkInputObject)">
            <summary>
            Delete templates (bulk)
            </summary>
            <remarks>
            Delete templates by given IDs or delete all templates.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteTemplatesBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DeleteTemplatesBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteTemplatesBulkInputObject)">
            <summary>
            Delete templates (bulk)
            </summary>
            <remarks>
            Delete templates by given IDs or delete all templates.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteTemplatesBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DoCarrierLookupAsync(System.String,System.String)">
            <summary>
            Carrier Lookup
            </summary>
            <remarks>
            This API call allows you to retrieve additional information about a phone number: region-specific phone number formatting, carrier, phone type (landline/mobile) and country information.  &gt; Numbers must be checked one by one. You cannot check multiple numbers in one request.   
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164) or in [National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers). </param>
            <param name="country">This option must be specified only if the phone number is in a **[National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers)**.  (optional)</param>
            <returns>Task of DoCarrierLookupResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DoCarrierLookupAsyncWithHttpInfo(System.String,System.String)">
            <summary>
            Carrier Lookup
            </summary>
            <remarks>
            This API call allows you to retrieve additional information about a phone number: region-specific phone number formatting, carrier, phone type (landline/mobile) and country information.  &gt; Numbers must be checked one by one. You cannot check multiple numbers in one request.   
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164) or in [National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers). </param>
            <param name="country">This option must be specified only if the phone number is in a **[National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers)**.  (optional)</param>
            <returns>Task of ApiResponse (DoCarrierLookupResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DoEmailLookupAsync(System.String)">
            <summary>
            Email Lookup
            </summary>
            <remarks>
            To get more details about an email address or to check whether it is a valid email or not, you can use the Email Lookup command. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).  This API call allows you to retrieve additional information about an email address, such as mailbox detection, syntax checks, DNS validation, deliverability status, and many more helpful values (see the table below).  &gt; Emails must be checked one by one. You cannot check multiple emails in one request. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="email">Email address.</param>
            <returns>Task of DoEmailLookupResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.DoEmailLookupAsyncWithHttpInfo(System.String)">
            <summary>
            Email Lookup
            </summary>
            <remarks>
            To get more details about an email address or to check whether it is a valid email or not, you can use the Email Lookup command. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).  This API call allows you to retrieve additional information about an email address, such as mailbox detection, syntax checks, DNS validation, deliverability status, and many more helpful values (see the table below).  &gt; Emails must be checked one by one. You cannot check multiple emails in one request. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="email">Email address.</param>
            <returns>Task of ApiResponse (DoEmailLookupResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllBulkSessionsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all bulk sessions
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetAllBulkSessionsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllBulkSessionsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all bulk sessions
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetAllBulkSessionsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllChatsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all chats
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="status">Fetch only (a)ctive, (c)losed or (d)eleted chats. (optional)</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <param name="flat">Should additional contact info be included? (optional, default to 0)</param>
            <returns>Task of GetAllChatsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllChatsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all chats
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="status">Fetch only (a)ctive, (c)losed or (d)eleted chats. (optional)</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <param name="flat">Should additional contact info be included? (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetAllChatsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllInboundMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all inbound messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of GetAllInboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllInboundMessagesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all inbound messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (GetAllInboundMessagesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllMessageSessionsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all sessions
            </summary>
            <remarks>
            Get all message sending sessions. &gt; This list contains all of your sessions, including those which were sent but not via API 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetAllMessageSessionsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllMessageSessionsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all sessions
            </summary>
            <remarks>
            Get all message sending sessions. &gt; This list contains all of your sessions, including those which were sent but not via API 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetAllMessageSessionsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllOutboundMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all messages
            </summary>
            <remarks>
            Get all user oubound messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <returns>Task of GetAllOutboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllOutboundMessagesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all messages
            </summary>
            <remarks>
            Get all user oubound messages.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <returns>Task of ApiResponse (GetAllOutboundMessagesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllScheduledMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get all scheduled messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of GetAllScheduledMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllScheduledMessagesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get all scheduled messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (GetAllScheduledMessagesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllTemplatesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all templates
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional)</param>
            <param name="limit">The number of results per page. (optional)</param>
            <returns>Task of GetAllTemplatesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAllTemplatesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all templates
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional)</param>
            <param name="limit">The number of results per page. (optional)</param>
            <returns>Task of ApiResponse (GetAllTemplatesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAvailableDedicatedNumbersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find dedicated numbers available for purchase
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter dedicated number country ISO code.</param>
            <param name="prefix">Desired number prefix. Should include the country code (i.e. 447 for UK phone number format). Leave blank to get all the available numbers for the specified country. (optional)</param>
            <param name="tollfree">Should we show only tollfree numbers (tollfree available only for US). (optional, default to 0)</param>
            <returns>Task of GetAvailableDedicatedNumbersResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAvailableDedicatedNumbersAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find dedicated numbers available for purchase
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter dedicated number country ISO code.</param>
            <param name="prefix">Desired number prefix. Should include the country code (i.e. 447 for UK phone number format). Leave blank to get all the available numbers for the specified country. (optional)</param>
            <param name="tollfree">Should we show only tollfree numbers (tollfree available only for US). (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetAvailableDedicatedNumbersResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAvailableSenderSettingOptionsAsync(System.String)">
            <summary>
            Get available sender settings
            </summary>
            <remarks>
            Get all available sender setting options which can be used in the \"from\" parameter of the POST messages method.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter ISO country ID. If not specified, it returns all the available sender settings. (optional)</param>
            <returns>Task of GetAvailableSenderSettingOptionsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetAvailableSenderSettingOptionsAsyncWithHttpInfo(System.String)">
            <summary>
            Get available sender settings
            </summary>
            <remarks>
            Get all available sender setting options which can be used in the \"from\" parameter of the POST messages method.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter ISO country ID. If not specified, it returns all the available sender settings. (optional)</param>
            <returns>Task of ApiResponse (GetAvailableSenderSettingOptionsResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBalanceNotificationOptionsAsync">
            <summary>
            Returns the list of available balance options which can be used as a bound to determine when to send email to user with low balance notification. See https://my.textmagic.com/online/account/notifications/balance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GetBalanceNotificationOptionsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBalanceNotificationOptionsAsyncWithHttpInfo">
            <summary>
            Returns the list of available balance options which can be used as a bound to determine when to send email to user with low balance notification. See https://my.textmagic.com/online/account/notifications/balance
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GetBalanceNotificationOptionsResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBalanceNotificationSettingsAsync">
            <summary>
            Get balance notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GetBalanceNotificationSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBalanceNotificationSettingsAsyncWithHttpInfo">
            <summary>
            Get balance notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GetBalanceNotificationSettingsResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBlockedContactsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get blocked contacts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find blocked contacts by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of GetBlockedContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBlockedContactsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get blocked contacts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find blocked contacts by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (GetBlockedContactsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBulkSessionAsync(System.Nullable{System.Int32})">
            <summary>
            Get bulk session status
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of BulkSession</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetBulkSessionAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get bulk session status
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (BulkSession)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCallbackSettingsAsync">
            <summary>
            Fetch callback URL settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GetCallbackSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCallbackSettingsAsyncWithHttpInfo">
            <summary>
            Fetch callback URL settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GetCallbackSettingsResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetChatAsync(System.Nullable{System.Int32})">
            <summary>
            Get a single chat
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of Chat</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetChatAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single chat
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (Chat)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetChatByPhoneAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find chats by phone
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <param name="upsert">Create a new chat if not found. (optional, default to 0)</param>
            <param name="reopen">Reopen chat if found or do not change status. (optional, default to 0)</param>
            <returns>Task of Chat</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetChatByPhoneAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find chats by phone
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <param name="upsert">Create a new chat if not found. (optional, default to 0)</param>
            <param name="reopen">Reopen chat if found or do not change status. (optional, default to 0)</param>
            <returns>Task of ApiResponse (Chat)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetChatMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Get chat messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="start">Return messages since specified timestamp only. Required when `end` parameter specified. (optional)</param>
            <param name="end">Return messages up to specified timestamp only. Required when `start` parameter specified. (optional)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <returns>Task of GetChatMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetChatMessagesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Get chat messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="start">Return messages since specified timestamp only. Required when `end` parameter specified. (optional)</param>
            <param name="end">Return messages up to specified timestamp only. Required when `start` parameter specified. (optional)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetChatMessagesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactAsync(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Contact ID.</param>
            <returns>Task of Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Contact ID.</param>
            <returns>Task of ApiResponse (Contact)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactByPhoneAsync(System.String)">
            <summary>
            Get the details of a specific contact by phone number
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <returns>Task of Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactByPhoneAsyncWithHttpInfo(System.String)">
            <summary>
            Get the details of a specific contact by phone number
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <returns>Task of ApiResponse (Contact)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactIfBlockedAsync(System.String)">
            <summary>
            Check if a phone number is blocked
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number to check.</param>
            <returns>Task of Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactIfBlockedAsyncWithHttpInfo(System.String)">
            <summary>
            Check if a phone number is blocked
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number to check.</param>
            <returns>Task of ApiResponse (Contact)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactImportSessionProgressAsync(System.Nullable{System.Int32})">
            <summary>
            Check import progress
            </summary>
            <remarks>
            Get contact import session progress.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of GetContactImportSessionProgressResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactImportSessionProgressAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Check import progress
            </summary>
            <remarks>
            Get contact import session progress.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (GetContactImportSessionProgressResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactNoteAsync(System.Nullable{System.Int32})">
            <summary>
            Get a contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ContactNote</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactNoteAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (ContactNote)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactNotesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Fetch notes assigned to a given contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetContactNotesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactNotesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Fetch notes assigned to a given contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetContactNotesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of GetContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (GetContactsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactsAutocompleteAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get contacts autocomplete suggestions
            </summary>
            <remarks>
            Get contacts autocomplete suggestions by given search terms.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="query">Find recipients by specified search query.</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lists">Should lists be returned or not? (optional, default to 0)</param>
            <returns>Task of GetContactsAutocompleteResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactsAutocompleteAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get contacts autocomplete suggestions
            </summary>
            <remarks>
            Get contacts autocomplete suggestions by given search terms.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="query">Find recipients by specified search query.</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lists">Should lists be returned or not? (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetContactsAutocompleteResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactsByListIdAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts in a list
            </summary>
            <remarks>
            A useful synonym for the \"contacts/search\" command with the provided \"listId\" parameter.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Given group ID.</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of GetContactsByListIdPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetContactsByListIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts in a list
            </summary>
            <remarks>
            A useful synonym for the \"contacts/search\" command with the provided \"listId\" parameter.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Given group ID.</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (GetContactsByListIdPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCountriesAsync">
            <summary>
            Get countries
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GetCountriesResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCountriesAsyncWithHttpInfo">
            <summary>
            Get countries
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GetCountriesResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCurrentUserAsync">
            <summary>
            Get current account information
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCurrentUserAsyncWithHttpInfo">
            <summary>
            Get current account information
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCustomFieldAsync(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific custom field
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of UserCustomField</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCustomFieldAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific custom field
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (UserCustomField)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCustomFieldsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all custom fields
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetCustomFieldsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetCustomFieldsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all custom fields
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetCustomFieldsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetDedicatedNumberAsync(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific dedicated number
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of UsersInbound</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetDedicatedNumberAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific dedicated number
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (UsersInbound)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetFavoritesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get favorite contacts and lists
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find contacts or lists by specified search query. (optional)</param>
            <returns>Task of GetFavoritesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetFavoritesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get favorite contacts and lists
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find contacts or lists by specified search query. (optional)</param>
            <returns>Task of ApiResponse (GetFavoritesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetInboundMessageAsync(System.Nullable{System.Int32})">
            <summary>
            Get a single inbound message
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns>Task of MessageIn</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetInboundMessageAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single inbound message
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns>Task of ApiResponse (MessageIn)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetInboundMessagesNotificationSettingsAsync">
            <summary>
            Get inbound messages notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GetInboundMessagesNotificationSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetInboundMessagesNotificationSettingsAsyncWithHttpInfo">
            <summary>
            Get inbound messages notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GetInboundMessagesNotificationSettingsResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetInvoicesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all invoices
            </summary>
            <remarks>
            With the TextMagic API, you can check the invoices and transactions for your account.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetInvoicesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetInvoicesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all invoices
            </summary>
            <remarks>
            With the TextMagic API, you can check the invoices and transactions for your account.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetInvoicesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetListAsync(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of List</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetListAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (List)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetListContactsIdsAsync(System.Nullable{System.Int32})">
            <summary>
            Get all contact IDs in a list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of GetListContactsIdsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetListContactsIdsAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get all contact IDs in a list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (GetListContactsIdsResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetListsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all lists
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">The current fetched page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="favoriteOnly">Return only favorited lists. (optional, default to 0)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <returns>Task of GetListsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetListsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all lists
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">The current fetched page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="favoriteOnly">Return only favorited lists. (optional, default to 0)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetListsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetListsOfContactAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a contact's lists
            </summary>
            <remarks>
            Get all the lists in which a contact is included.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetListsOfContactPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetListsOfContactAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a contact's lists
            </summary>
            <remarks>
            Get all the lists in which a contact is included.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetListsOfContactPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagePreviewAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Preview message
            </summary>
            <remarks>
            Get a messages preview (with tags merged) of up to 100 messages per session.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="text">Message text. Required if **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using sendingDateTime and sendingTimezone parameters instead: Optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when the sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending of 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat(if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>Task of GetMessagePreviewResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagePreviewAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Preview message
            </summary>
            <remarks>
            Get a messages preview (with tags merged) of up to 100 messages per session.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="text">Message text. Required if **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using sendingDateTime and sendingTimezone parameters instead: Optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when the sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending of 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat(if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>Task of ApiResponse (GetMessagePreviewResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagePriceAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Check message price
            </summary>
            <remarks>
            Check pricing for a new outbound message.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="includeBlocked">Should we show the pricing for blocked contacts? (optional, default to 0)</param>
            <param name="text">Message text. Required if the **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if the **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using the sendingDateTime and sendingTimezone parameters instead: optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat (if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send a Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>Task of GetMessagePriceResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagePriceAsyncWithHttpInfo(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Check message price
            </summary>
            <remarks>
            Check pricing for a new outbound message.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="includeBlocked">Should we show the pricing for blocked contacts? (optional, default to 0)</param>
            <param name="text">Message text. Required if the **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if the **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using the sendingDateTime and sendingTimezone parameters instead: optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat (if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send a Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>Task of ApiResponse (GetMessagePriceResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessageSessionAsync(System.Nullable{System.Int32})">
            <summary>
            Get a session`s details
            </summary>
            <remarks>
            Get a specific session’s details.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Session ID.</param>
            <returns>Task of MessageSession</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessageSessionAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a session`s details
            </summary>
            <remarks>
            Get a specific session’s details.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Session ID.</param>
            <returns>Task of ApiResponse (MessageSession)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessageSessionStatAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a session`s statistics
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>Task of GetMessageSessionStatResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessageSessionStatAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a session`s statistics
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetMessageSessionStatResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagesBySessionIdAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get a session`s messages
            </summary>
            <remarks>
            A useful synonym for the \"messages/search\" command with the provided \"sessionId\" parameter.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>Task of GetMessagesBySessionIdPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagesBySessionIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get a session`s messages
            </summary>
            <remarks>
            A useful synonym for the \"messages/search\" command with the provided \"sessionId\" parameter.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetMessagesBySessionIdPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagingCountersAsync">
            <summary>
            Get sent/received messages counters values
            </summary>
            <remarks>
            Get total contacts, sent messages and received messages counters values.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GetMessagingCountersResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagingCountersAsyncWithHttpInfo">
            <summary>
            Get sent/received messages counters values
            </summary>
            <remarks>
            Get total contacts, sent messages and received messages counters values.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GetMessagingCountersResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagingStatAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get messaging statistics
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="by">*   **off** - to get total values per specified time interval; *   **day** - to show values grouped by day; *   **month** - to show values grouped by month; *   **year** - to show values grouped by year.  (optional, default to off)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>Task of GetMessagingStatResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetMessagingStatAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get messaging statistics
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="by">*   **off** - to get total values per specified time interval; *   **day** - to show values grouped by day; *   **month** - to show values grouped by month; *   **year** - to show values grouped by year.  (optional, default to off)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>Task of ApiResponse (GetMessagingStatResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetOutboundMessageAsync(System.Nullable{System.Int32})">
            <summary>
            Get a single message
            </summary>
            <remarks>
            Get a single outgoing message.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of MessageOut</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetOutboundMessageAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single message
            </summary>
            <remarks>
            Get a single outgoing message.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (MessageOut)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetOutboundMessagesHistoryAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get history
            </summary>
            <remarks>
            Get the outbound messages history.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. (optional)</param>
            <param name="query">Find message by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of GetOutboundMessagesHistoryPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetOutboundMessagesHistoryAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get history
            </summary>
            <remarks>
            Get the outbound messages history.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. (optional)</param>
            <param name="query">Find message by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (GetOutboundMessagesHistoryPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetScheduledMessageAsync(System.Nullable{System.Int32})">
            <summary>
            Get a single scheduled message
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of MessagesIcs</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetScheduledMessageAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single scheduled message
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (MessagesIcs)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSenderIdAsync(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific Sender ID
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of SenderId</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSenderIdAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific Sender ID
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (SenderId)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSenderIdsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your approved Sender IDs
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetSenderIdsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSenderIdsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your approved Sender IDs
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetSenderIdsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSenderSettingsAsync(System.String)">
            <summary>
            Get current sender settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">Return sender settings enabled for sending to a specified country. Should be 2 upper-case characters. (optional)</param>
            <returns>Task of GetSenderSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSenderSettingsAsyncWithHttpInfo(System.String)">
            <summary>
            Get current sender settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">Return sender settings enabled for sending to a specified country. Should be 2 upper-case characters. (optional)</param>
            <returns>Task of ApiResponse (GetSenderSettingsResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSpendingStatAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get spending statistics
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>Task of GetSpendingStatPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSpendingStatAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get spending statistics
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>Task of ApiResponse (GetSpendingStatPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSubaccountAsync(System.Nullable{System.Int32})">
            <summary>
            Get sub-account information
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSubaccountAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get sub-account information
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSubaccountsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a sub-accounts list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSubaccountsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a sub-accounts list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSubaccountsWithTokensAsync(TextMagicClient.Model.GetSubaccountsWithTokensInputObject,System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            Get all sub-accounts with their REST API tokens associated with a specified app name
            </summary>
            <remarks>
            Get all sub-accounts with their REST API tokens associated with specified app name. When more than one token related to app name, last key will be returned.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="getSubaccountsWithTokensInputObject"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetSubaccountsWithTokensResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetSubaccountsWithTokensAsyncWithHttpInfo(TextMagicClient.Model.GetSubaccountsWithTokensInputObject,System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            Get all sub-accounts with their REST API tokens associated with a specified app name
            </summary>
            <remarks>
            Get all sub-accounts with their REST API tokens associated with specified app name. When more than one token related to app name, last key will be returned.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="getSubaccountsWithTokensInputObject"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetSubaccountsWithTokensResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetTemplateAsync(System.Nullable{System.Int32})">
            <summary>
            Get a template`s details
            </summary>
            <remarks>
            Get a single template.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of MessageTemplate</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetTemplateAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a template`s details
            </summary>
            <remarks>
            Get a single template.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (MessageTemplate)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetTimezonesAsync(System.Nullable{System.Int32})">
            <summary>
            Get timezones
            </summary>
            <remarks>
            Return all available timezone IDs
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="full">Return full info about timezones in array (0 or 1). Default is 0. (optional, default to 0)</param>
            <returns>Task of GetTimezonesResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetTimezonesAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get timezones
            </summary>
            <remarks>
            Return all available timezone IDs
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="full">Return full info about timezones in array (0 or 1). Default is 0. (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetTimezonesResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUnreadMessagesTotalAsync">
            <summary>
            Get unread messages number
            </summary>
            <remarks>
            Get the total amount of unread messages in the current user chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GetUnreadMessagesTotalResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUnreadMessagesTotalAsyncWithHttpInfo">
            <summary>
            Get unread messages number
            </summary>
            <remarks>
            Get the total amount of unread messages in the current user chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GetUnreadMessagesTotalResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUnsubscribedContactAsync(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific unsubscribed contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of UnsubscribedContact</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUnsubscribedContactAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific unsubscribed contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (UnsubscribedContact)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUnsubscribersAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all unsubscribed contacts
            </summary>
            <remarks>
            When one of your message recipients sends a request with one of the [STOP-words](https://www.textmagic.com/sms-stop-command/), they will be immediately opted-out of your send lists and their contact status will change to an unsubscribed contact. To retrieve information on all contacts who have unsubscribed status, use: 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetUnsubscribersPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUnsubscribersAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all unsubscribed contacts
            </summary>
            <remarks>
            When one of your message recipients sends a request with one of the [STOP-words](https://www.textmagic.com/sms-stop-command/), they will be immediately opted-out of your send lists and their contact status will change to an unsubscribed contact. To retrieve information on all contacts who have unsubscribed status, use: 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetUnsubscribersPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUserDedicatedNumbersAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your dedicated numbers
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="surveyId">Fetch only those numbers that are ready for the survey. (optional)</param>
            <returns>Task of GetUserDedicatedNumbersPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.GetUserDedicatedNumbersAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your dedicated numbers
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="surveyId">Fetch only those numbers that are ready for the survey. (optional)</param>
            <returns>Task of ApiResponse (GetUserDedicatedNumbersPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.ImportContactsAsync(System.IO.Stream,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Import contacts
            </summary>
            <remarks>
            Import contacts from the CSV, XLS or XLSX file.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">File containing contacts in csv or xls(x) formats.</param>
            <param name="column">Import file column mapping. The string must contain sub-strings of mapping in format `columnNumber:field` glued by `;`. For example: `0:firstName;1:lastName;3:phone;4:email` where the value before `:` is a number of the column in the file, and the value after `:` is a field of the newly created contact or the ID of a custom field. Numbers of columns begin from zero. Allowed built-in contact fields are: `firstName`, `lastName`, `phone`, `email`. Existing of `phone` mapping is required. </param>
            <param name="listId">List that ID contacts will be imported to. Ignored if `listName` is specified.  (optional)</param>
            <param name="listName">List name. This list will be created during import. If such name is already taken, an ordinal (1, 2, ...) will be added to the end. Ignored if `listId` is specified.  (optional)</param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.ImportContactsAsyncWithHttpInfo(System.IO.Stream,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Import contacts
            </summary>
            <remarks>
            Import contacts from the CSV, XLS or XLSX file.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">File containing contacts in csv or xls(x) formats.</param>
            <param name="column">Import file column mapping. The string must contain sub-strings of mapping in format `columnNumber:field` glued by `;`. For example: `0:firstName;1:lastName;3:phone;4:email` where the value before `:` is a number of the column in the file, and the value after `:` is a field of the newly created contact or the ID of a custom field. Numbers of columns begin from zero. Allowed built-in contact fields are: `firstName`, `lastName`, `phone`, `email`. Existing of `phone` mapping is required. </param>
            <param name="listId">List that ID contacts will be imported to. Ignored if `listName` is specified.  (optional)</param>
            <param name="listName">List name. This list will be created during import. If such name is already taken, an ordinal (1, 2, ...) will be added to the end. Ignored if `listId` is specified.  (optional)</param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.InviteSubaccountAsync(TextMagicClient.Model.InviteSubaccountInputObject)">
            <summary>
            Invite a new sub-account
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="inviteSubaccountInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.InviteSubaccountAsyncWithHttpInfo(TextMagicClient.Model.InviteSubaccountInputObject)">
            <summary>
            Invite a new sub-account
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="inviteSubaccountInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MarkChatsReadBulkAsync(TextMagicClient.Model.MarkChatsReadBulkInputObject)">
            <summary>
            Mark chats as read (bulk)
            </summary>
            <remarks>
            Mark several chats as read by chat IDs or mark all chats as read
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsReadBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MarkChatsReadBulkAsyncWithHttpInfo(TextMagicClient.Model.MarkChatsReadBulkInputObject)">
            <summary>
            Mark chats as read (bulk)
            </summary>
            <remarks>
            Mark several chats as read by chat IDs or mark all chats as read
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsReadBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MarkChatsUnreadBulkAsync(TextMagicClient.Model.MarkChatsUnreadBulkInputObject)">
            <summary>
            Mark chats as unread (bulk)
            </summary>
            <remarks>
            Mark several chats as UNread by chat IDs or mark all chats as UNread
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsUnreadBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MarkChatsUnreadBulkAsyncWithHttpInfo(TextMagicClient.Model.MarkChatsUnreadBulkInputObject)">
            <summary>
            Mark chats as unread (bulk)
            </summary>
            <remarks>
            Mark several chats as UNread by chat IDs or mark all chats as UNread
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsUnreadBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MuteChatAsync(TextMagicClient.Model.MuteChatInputObject)">
            <summary>
            Mute chat sounds
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MuteChatAsyncWithHttpInfo(TextMagicClient.Model.MuteChatInputObject)">
            <summary>
            Mute chat sounds
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MuteChatsBulkAsync(TextMagicClient.Model.MuteChatsBulkInputObject)">
            <summary>
            Mute chats (bulk)
            </summary>
            <remarks>
            Mute several chats by chat ids or mute all chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.MuteChatsBulkAsyncWithHttpInfo(TextMagicClient.Model.MuteChatsBulkInputObject)">
            <summary>
            Mute chats (bulk)
            </summary>
            <remarks>
            Mute several chats by chat ids or mute all chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.PingAsync">
            <summary>
            Ping
            </summary>
            <remarks>
            Make a simple ping request.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of PingResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.PingAsyncWithHttpInfo">
            <summary>
            Ping
            </summary>
            <remarks>
            Make a simple ping request.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (PingResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.ReopenChatsBulkAsync(TextMagicClient.Model.ReopenChatsBulkInputObject)">
            <summary>
            Reopen chats (bulk)
            </summary>
            <remarks>
            Reopen chats by chat IDs or reopen all chats
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="reopenChatsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.ReopenChatsBulkAsyncWithHttpInfo(TextMagicClient.Model.ReopenChatsBulkInputObject)">
            <summary>
            Reopen chats (bulk)
            </summary>
            <remarks>
            Reopen chats by chat IDs or reopen all chats
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="reopenChatsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.RequestNewSubaccountTokenAsync(TextMagicClient.Model.RequestNewSubaccountTokenInputObject)">
            <summary>
            Request a new REST API token for sub-account
            </summary>
            <remarks>
            Returning user object, key and app name.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestNewSubaccountTokenInputObject"></param>
            <returns>Task of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.RequestNewSubaccountTokenAsyncWithHttpInfo(TextMagicClient.Model.RequestNewSubaccountTokenInputObject)">
            <summary>
            Request a new REST API token for sub-account
            </summary>
            <remarks>
            Returning user object, key and app name.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestNewSubaccountTokenInputObject"></param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.RequestSenderIdAsync(TextMagicClient.Model.RequestSenderIdInputObject)">
            <summary>
            Apply for a new Sender ID
            </summary>
            <remarks>
            &gt; Sender IDs are shared among all of your sub-accounts.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestSenderIdInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.RequestSenderIdAsyncWithHttpInfo(TextMagicClient.Model.RequestSenderIdInputObject)">
            <summary>
            Apply for a new Sender ID
            </summary>
            <remarks>
            &gt; Sender IDs are shared among all of your sub-accounts.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestSenderIdInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchChatsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats by message text
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <returns>Task of SearchChatsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchChatsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats by message text
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <returns>Task of ApiResponse (SearchChatsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchChatsByIdsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find chats by ID(s). (optional)</param>
            <returns>Task of SearchChatsByIdsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchChatsByIdsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats (bulk)
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find chats by ID(s). (optional)</param>
            <returns>Task of ApiResponse (SearchChatsByIdsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchChatsByReceipentAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find chats by recipient
            </summary>
            <remarks>
            Find chats by recipient (contact, list name or phone number).
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <returns>Task of SearchChatsByReceipentPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchChatsByReceipentAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find chats by recipient
            </summary>
            <remarks>
            Find chats by recipient (contact, list name or phone number).
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <returns>Task of ApiResponse (SearchChatsByReceipentPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchContactsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find contacts by given criteria
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="ids">Find contacts by IDs. (optional)</param>
            <param name="listId">Find contacts by List ID. (optional)</param>
            <param name="includeBlocked">Should blocked contacts be included? (optional)</param>
            <param name="query">Find contacts by specified search query. (optional)</param>
            <param name="local">Treat phone number passed in the \"query\" field as local. Default is 0. (optional, default to 0)</param>
            <param name="exactMatch">Return only exactly matching contacts. Default is 0. (optional, default to 0)</param>
            <param name="country">The 2-letter ISO country code for local phone numbers, used when \"local\" is set to true. Default is the account country. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of SearchContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchContactsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find contacts by given criteria
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="ids">Find contacts by IDs. (optional)</param>
            <param name="listId">Find contacts by List ID. (optional)</param>
            <param name="includeBlocked">Should blocked contacts be included? (optional)</param>
            <param name="query">Find contacts by specified search query. (optional)</param>
            <param name="local">Treat phone number passed in the \"query\" field as local. Default is 0. (optional, default to 0)</param>
            <param name="exactMatch">Return only exactly matching contacts. Default is 0. (optional, default to 0)</param>
            <param name="country">The 2-letter ISO country code for local phone numbers, used when \"local\" is set to true. Default is the account country. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (SearchContactsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchInboundMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Find inbound messages
            </summary>
            <remarks>
            Find inbound messages by given parameters.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="query">Find recipients by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="expand">Expand by adding firstName, lastName and contactId. (optional, default to 0)</param>
            <returns>Task of SearchInboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchInboundMessagesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Find inbound messages
            </summary>
            <remarks>
            Find inbound messages by given parameters.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="query">Find recipients by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="expand">Expand by adding firstName, lastName and contactId. (optional, default to 0)</param>
            <returns>Task of ApiResponse (SearchInboundMessagesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchListsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find lists by given criteria
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find lists by IDs. (optional)</param>
            <param name="query">Find lists by specified search query. (optional)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <param name="onlyDefault">Return only default lists. (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of SearchListsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchListsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find lists by given criteria
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find lists by IDs. (optional)</param>
            <param name="query">Find lists by specified search query. (optional)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <param name="onlyDefault">Return only default lists. (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (SearchListsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchOutboundMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Find messages
            </summary>
            <remarks>
            Find outbound messages by given parameters.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="sessionId">Find messages by session ID. (optional)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <returns>Task of SearchOutboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchOutboundMessagesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Find messages
            </summary>
            <remarks>
            Find outbound messages by given parameters.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="sessionId">Find messages by session ID. (optional)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <returns>Task of ApiResponse (SearchOutboundMessagesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchScheduledMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Find scheduled messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="ids">Find schedules by ID(s). (optional)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of SearchScheduledMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchScheduledMessagesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Find scheduled messages
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="ids">Find schedules by ID(s). (optional)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (SearchScheduledMessagesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchTemplatesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find templates by criteria
            </summary>
            <remarks>
            Find user templates by given parameters.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find template by ID(s). (optional)</param>
            <param name="name">Find template by name. (optional)</param>
            <param name="content">Find template by content. (optional)</param>
            <returns>Task of SearchTemplatesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SearchTemplatesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find templates by criteria
            </summary>
            <remarks>
            Find user templates by given parameters.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find template by ID(s). (optional)</param>
            <param name="name">Find template by name. (optional)</param>
            <param name="content">Find template by content. (optional)</param>
            <returns>Task of ApiResponse (SearchTemplatesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SendMessageAsync(TextMagicClient.Model.SendMessageInputObject)">
            <summary>
            Send message
            </summary>
            <remarks>
            This is the main entrypoint to send messages. See the examples above for the reference.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendMessageInputObject"></param>
            <returns>Task of SendMessageResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SendMessageAsyncWithHttpInfo(TextMagicClient.Model.SendMessageInputObject)">
            <summary>
            Send message
            </summary>
            <remarks>
            This is the main entrypoint to send messages. See the examples above for the reference.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendMessageInputObject"></param>
            <returns>Task of ApiResponse (SendMessageResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SendPhoneVerificationCodeTFAAsync(TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 1: Send a verification code 
            </summary>
            <remarks>
            Sends a verification code to a specified phone number.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendPhoneVerificationCodeTFAInputObject"></param>
            <returns>Task of SendPhoneVerificationCodeResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SendPhoneVerificationCodeTFAAsyncWithHttpInfo(TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 1: Send a verification code 
            </summary>
            <remarks>
            Sends a verification code to a specified phone number.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendPhoneVerificationCodeTFAInputObject"></param>
            <returns>Task of ApiResponse (SendPhoneVerificationCodeResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SetChatStatusAsync(TextMagicClient.Model.SetChatStatusInputObject)">
            <summary>
            Change chat status
            </summary>
            <remarks>
            Set the status of the chat given by ID.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="setChatStatusInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.SetChatStatusAsyncWithHttpInfo(TextMagicClient.Model.SetChatStatusInputObject)">
            <summary>
            Change chat status
            </summary>
            <remarks>
            Set the status of the chat given by ID.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="setChatStatusInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnblockContactAsync(TextMagicClient.Model.UnblockContactInputObject)">
            <summary>
            Unblock a contact by phone number
            </summary>
            <remarks>
            Unblock a contact by phone number
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnblockContactAsyncWithHttpInfo(TextMagicClient.Model.UnblockContactInputObject)">
            <summary>
            Unblock a contact by phone number
            </summary>
            <remarks>
            Unblock a contact by phone number
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnblockContactsBulkAsync(TextMagicClient.Model.UnblockContactsBulkInputObject)">
            <summary>
            Unblock contacts (bulk)
            </summary>
            <remarks>
            Unblock several contacts by blocked contact IDs or unblock all contacts.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnblockContactsBulkAsyncWithHttpInfo(TextMagicClient.Model.UnblockContactsBulkInputObject)">
            <summary>
            Unblock contacts (bulk)
            </summary>
            <remarks>
            Unblock several contacts by blocked contact IDs or unblock all contacts.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnmuteChatsBulkAsync(TextMagicClient.Model.UnmuteChatsBulkInputObject)">
            <summary>
            Unmute chats (bulk)
            </summary>
            <remarks>
            Unmute several chats by chat ids or unmute all chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unmuteChatsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnmuteChatsBulkAsyncWithHttpInfo(TextMagicClient.Model.UnmuteChatsBulkInputObject)">
            <summary>
            Unmute chats (bulk)
            </summary>
            <remarks>
            Unmute several chats by chat ids or unmute all chats.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unmuteChatsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnsubscribeContactAsync(TextMagicClient.Model.UnsubscribeContactInputObject)">
            <summary>
            Manually unsubscribe a contact
            </summary>
            <remarks>
            &gt; Please note, if you unsubscribe a contact, this action cannot be reversed. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unsubscribeContactInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UnsubscribeContactAsyncWithHttpInfo(TextMagicClient.Model.UnsubscribeContactInputObject)">
            <summary>
            Manually unsubscribe a contact
            </summary>
            <remarks>
            &gt; Please note, if you unsubscribe a contact, this action cannot be reversed. 
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unsubscribeContactInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateBalanceNotificationSettingsAsync(TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject)">
            <summary>
            Update balance notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateBalanceNotificationSettingsInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateBalanceNotificationSettingsAsyncWithHttpInfo(TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject)">
            <summary>
            Update balance notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateBalanceNotificationSettingsInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCallbackSettingsAsync(TextMagicClient.Model.UpdateCallbackSettingsInputObject)">
            <summary>
            Update callback URL settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCallbackSettingsInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCallbackSettingsAsyncWithHttpInfo(TextMagicClient.Model.UpdateCallbackSettingsInputObject)">
            <summary>
            Update callback URL settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCallbackSettingsInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateChatDesktopNotificationSettingsAsync(TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject)">
            <summary>
            Update chat desktop notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateChatDesktopNotificationSettingsInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateChatDesktopNotificationSettingsAsyncWithHttpInfo(TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject)">
            <summary>
            Update chat desktop notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateChatDesktopNotificationSettingsInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateContactAsync(TextMagicClient.Model.UpdateContactInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateContactAsyncWithHttpInfo(TextMagicClient.Model.UpdateContactInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateContactNoteAsync(TextMagicClient.Model.UpdateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateContactNoteAsyncWithHttpInfo(TextMagicClient.Model.UpdateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a contact note
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCurrentUserAsync(TextMagicClient.Model.UpdateCurrentUserInputObject)">
            <summary>
            Edit current account info
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCurrentUserInputObject"></param>
            <returns>Task of UpdateCurrentUserResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCurrentUserAsyncWithHttpInfo(TextMagicClient.Model.UpdateCurrentUserInputObject)">
            <summary>
            Edit current account info
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCurrentUserInputObject"></param>
            <returns>Task of ApiResponse (UpdateCurrentUserResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCustomFieldAsync(TextMagicClient.Model.UpdateCustomFieldInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a custom field
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCustomFieldAsyncWithHttpInfo(TextMagicClient.Model.UpdateCustomFieldInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a custom field
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCustomFieldValueAsync(TextMagicClient.Model.UpdateCustomFieldValueInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit the custom field value of a specified contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldValueInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateCustomFieldValueAsyncWithHttpInfo(TextMagicClient.Model.UpdateCustomFieldValueInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit the custom field value of a specified contact
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldValueInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateInboundMessagesNotificationSettingsAsync(TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject)">
            <summary>
            Update inbound messages notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateInboundMessagesNotificationSettingsInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateInboundMessagesNotificationSettingsAsyncWithHttpInfo(TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject)">
            <summary>
            Update inbound messages notification settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateInboundMessagesNotificationSettingsInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateListAsync(System.Nullable{System.Int32},TextMagicClient.Model.UpdateListObject)">
            <summary>
            Edit a list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="updateListObject"> (optional)</param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateListAsyncWithHttpInfo(System.Nullable{System.Int32},TextMagicClient.Model.UpdateListObject)">
            <summary>
            Edit a list
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="updateListObject"> (optional)</param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateSenderSettingAsync(TextMagicClient.Model.UpdateSenderSettingInputObject)">
            <summary>
            Change sender settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateSenderSettingInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateSenderSettingAsyncWithHttpInfo(TextMagicClient.Model.UpdateSenderSettingInputObject)">
            <summary>
            Change sender settings
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateSenderSettingInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateTemplateAsync(TextMagicClient.Model.UpdateTemplateInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a template
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateTemplateInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UpdateTemplateAsyncWithHttpInfo(TextMagicClient.Model.UpdateTemplateInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a template
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateTemplateInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadAvatarAsync(System.IO.Stream)">
            <summary>
            Upload an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">User avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadAvatarAsyncWithHttpInfo(System.IO.Stream)">
            <summary>
            Upload an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">User avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadContactAvatarAsync(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Upload an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">Contact avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadContactAvatarAsyncWithHttpInfo(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Upload an avatar
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">Contact avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadListAvatarAsync(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Add an avatar for a list
            </summary>
            <remarks>
            Add an avatar for a list
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">List avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadListAvatarAsyncWithHttpInfo(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Add an avatar for a list
            </summary>
            <remarks>
            Add an avatar for a list
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">List avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadMessageAttachmentAsync(System.IO.Stream)">
            <summary>
            Upload message attachment
            </summary>
            <remarks>
            Upload a new file to insert it as a link.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>Task of UploadMessageAttachmentResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadMessageAttachmentAsyncWithHttpInfo(System.IO.Stream)">
            <summary>
            Upload message attachment
            </summary>
            <remarks>
            Upload a new file to insert it as a link.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>Task of ApiResponse (UploadMessageAttachmentResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadMessageMMSAttachmentAsync(System.IO.Stream)">
            <summary>
            Upload message mms attachment
            </summary>
            <remarks>
            Upload a new file to mms.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>Task of UploadMessageAttachmentResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.ITextMagicApi.UploadMessageMMSAttachmentAsyncWithHttpInfo(System.IO.Stream)">
            <summary>
            Upload message mms attachment
            </summary>
            <remarks>
            Upload a new file to mms.
            </remarks>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>Task of ApiResponse (UploadMessageAttachmentResponse)</returns>
        </member>
        <member name="T:TextMagicClient.Api.TextMagicApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Api.TextMagicApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.#ctor(TextMagicClient.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Api.TextMagicApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.AssignContactsToList(TextMagicClient.Model.AssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Assign contacts to a list &gt; Unlike all other PUT requests, this command does not need old contact IDs to be submitted. For example, if you have a list with contacts 150, 151 and 152 and you want to add contact ID 153, you only need to submit 153 as a parameter of PUT /api/v2/lists/{id}/contacts. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="assignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.AssignContactsToListWithHttpInfo(TextMagicClient.Model.AssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Assign contacts to a list &gt; Unlike all other PUT requests, this command does not need old contact IDs to be submitted. For example, if you have a list with contacts 150, 151 and 152 and you want to add contact ID 153, you only need to submit 153 as a parameter of PUT /api/v2/lists/{id}/contacts. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="assignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.AssignContactsToListAsync(TextMagicClient.Model.AssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Assign contacts to a list &gt; Unlike all other PUT requests, this command does not need old contact IDs to be submitted. For example, if you have a list with contacts 150, 151 and 152 and you want to add contact ID 153, you only need to submit 153 as a parameter of PUT /api/v2/lists/{id}/contacts. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="assignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.AssignContactsToListAsyncWithHttpInfo(TextMagicClient.Model.AssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Assign contacts to a list &gt; Unlike all other PUT requests, this command does not need old contact IDs to be submitted. For example, if you have a list with contacts 150, 151 and 152 and you want to add contact ID 153, you only need to submit 153 as a parameter of PUT /api/v2/lists/{id}/contacts. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="assignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.BlockContact(TextMagicClient.Model.BlockContactInputObject)">
            <summary>
            Block a contact by phone number Block a contact from inbound and outbound communication by phone number.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="blockContactInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.BlockContactWithHttpInfo(TextMagicClient.Model.BlockContactInputObject)">
            <summary>
            Block a contact by phone number Block a contact from inbound and outbound communication by phone number.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="blockContactInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.BlockContactAsync(TextMagicClient.Model.BlockContactInputObject)">
            <summary>
            Block a contact by phone number Block a contact from inbound and outbound communication by phone number.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="blockContactInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.BlockContactAsyncWithHttpInfo(TextMagicClient.Model.BlockContactInputObject)">
            <summary>
            Block a contact by phone number Block a contact from inbound and outbound communication by phone number.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="blockContactInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.BuyDedicatedNumber(TextMagicClient.Model.BuyDedicatedNumberInputObject)">
            <summary>
            Buy a dedicated number To buy a dedicated number, you first need to find an available number matching your criteria using the `/api/v2/numbers/available` command described above.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="buyDedicatedNumberInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.BuyDedicatedNumberWithHttpInfo(TextMagicClient.Model.BuyDedicatedNumberInputObject)">
            <summary>
            Buy a dedicated number To buy a dedicated number, you first need to find an available number matching your criteria using the `/api/v2/numbers/available` command described above.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="buyDedicatedNumberInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.BuyDedicatedNumberAsync(TextMagicClient.Model.BuyDedicatedNumberInputObject)">
            <summary>
            Buy a dedicated number To buy a dedicated number, you first need to find an available number matching your criteria using the `/api/v2/numbers/available` command described above.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="buyDedicatedNumberInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.BuyDedicatedNumberAsyncWithHttpInfo(TextMagicClient.Model.BuyDedicatedNumberInputObject)">
            <summary>
            Buy a dedicated number To buy a dedicated number, you first need to find an available number matching your criteria using the `/api/v2/numbers/available` command described above.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="buyDedicatedNumberInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CancelVerification(System.String)">
            <summary>
            Cancel verification process You can cancel the verification not earlier than 30 seconds after the initial request.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="verifyId">The verifyId that you received in Step 1.</param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CancelVerificationWithHttpInfo(System.String)">
            <summary>
            Cancel verification process You can cancel the verification not earlier than 30 seconds after the initial request.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="verifyId">The verifyId that you received in Step 1.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CancelVerificationAsync(System.String)">
            <summary>
            Cancel verification process You can cancel the verification not earlier than 30 seconds after the initial request.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="verifyId">The verifyId that you received in Step 1.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CancelVerificationAsyncWithHttpInfo(System.String)">
            <summary>
            Cancel verification process You can cancel the verification not earlier than 30 seconds after the initial request.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="verifyId">The verifyId that you received in Step 1.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CheckPhoneVerificationCodeTFA(TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 2: Check the verification code  Check received code from user with the code which was actually sent.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkPhoneVerificationCodeTFAInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CheckPhoneVerificationCodeTFAWithHttpInfo(TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 2: Check the verification code  Check received code from user with the code which was actually sent.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkPhoneVerificationCodeTFAInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CheckPhoneVerificationCodeTFAAsync(TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 2: Check the verification code  Check received code from user with the code which was actually sent.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkPhoneVerificationCodeTFAInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CheckPhoneVerificationCodeTFAAsyncWithHttpInfo(TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 2: Check the verification code  Check received code from user with the code which was actually sent.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="checkPhoneVerificationCodeTFAInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.ClearAndAssignContactsToList(TextMagicClient.Model.ClearAndAssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Reset list members to the specified contacts 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="clearAndAssignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.ClearAndAssignContactsToListWithHttpInfo(TextMagicClient.Model.ClearAndAssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Reset list members to the specified contacts 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="clearAndAssignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.ClearAndAssignContactsToListAsync(TextMagicClient.Model.ClearAndAssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Reset list members to the specified contacts 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="clearAndAssignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.ClearAndAssignContactsToListAsyncWithHttpInfo(TextMagicClient.Model.ClearAndAssignContactsToListInputObject,System.Nullable{System.Int32})">
            <summary>
            Reset list members to the specified contacts 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="clearAndAssignContactsToListInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CloseChatsBulk(TextMagicClient.Model.CloseChatsBulkInputObject)">
            <summary>
            Close chats (bulk) Close chats by chat IDs or close all chats
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="closeChatsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CloseChatsBulkWithHttpInfo(TextMagicClient.Model.CloseChatsBulkInputObject)">
            <summary>
            Close chats (bulk) Close chats by chat IDs or close all chats
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="closeChatsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CloseChatsBulkAsync(TextMagicClient.Model.CloseChatsBulkInputObject)">
            <summary>
            Close chats (bulk) Close chats by chat IDs or close all chats
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="closeChatsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CloseChatsBulkAsyncWithHttpInfo(TextMagicClient.Model.CloseChatsBulkInputObject)">
            <summary>
            Close chats (bulk) Close chats by chat IDs or close all chats
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="closeChatsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CloseReadChats">
            <summary>
            Close read chats Close all chats that have no unread messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CloseReadChatsWithHttpInfo">
            <summary>
            Close read chats Close all chats that have no unread messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CloseReadChatsAsync">
            <summary>
            Close read chats Close all chats that have no unread messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CloseReadChatsAsyncWithHttpInfo">
            <summary>
            Close read chats Close all chats that have no unread messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CloseSubaccount(System.Nullable{System.Int32})">
            <summary>
            Close sub-account 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CloseSubaccountWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Close sub-account 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CloseSubaccountAsync(System.Nullable{System.Int32})">
            <summary>
            Close sub-account 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CloseSubaccountAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Close sub-account 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateContact(TextMagicClient.Model.CreateContactInputObject)">
            <summary>
            Add a new contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateContactWithHttpInfo(TextMagicClient.Model.CreateContactInputObject)">
            <summary>
            Add a new contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateContactAsync(TextMagicClient.Model.CreateContactInputObject)">
            <summary>
            Add a new contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateContactAsyncWithHttpInfo(TextMagicClient.Model.CreateContactInputObject)">
            <summary>
            Add a new contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateContactNote(TextMagicClient.Model.CreateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Create a new contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateContactNoteWithHttpInfo(TextMagicClient.Model.CreateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Create a new contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateContactNoteAsync(TextMagicClient.Model.CreateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Create a new contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateContactNoteAsyncWithHttpInfo(TextMagicClient.Model.CreateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Create a new contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateCustomField(TextMagicClient.Model.CreateCustomFieldInputObject)">
            <summary>
            Add a new custom field 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createCustomFieldInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateCustomFieldWithHttpInfo(TextMagicClient.Model.CreateCustomFieldInputObject)">
            <summary>
            Add a new custom field 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createCustomFieldInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateCustomFieldAsync(TextMagicClient.Model.CreateCustomFieldInputObject)">
            <summary>
            Add a new custom field 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createCustomFieldInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateCustomFieldAsyncWithHttpInfo(TextMagicClient.Model.CreateCustomFieldInputObject)">
            <summary>
            Add a new custom field 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createCustomFieldInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateList(TextMagicClient.Model.CreateListInputObject)">
            <summary>
            Create a new list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createListInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateListWithHttpInfo(TextMagicClient.Model.CreateListInputObject)">
            <summary>
            Create a new list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createListInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateListAsync(TextMagicClient.Model.CreateListInputObject)">
            <summary>
            Create a new list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createListInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateListAsyncWithHttpInfo(TextMagicClient.Model.CreateListInputObject)">
            <summary>
            Create a new list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createListInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateTemplate(TextMagicClient.Model.CreateTemplateInputObject)">
            <summary>
            Create a template There are times when creating a new template makes sense (such as when targeting specific clients or improving your business strategies).  You can create new SMS templates for marketing purposes or SMS templates for business campaigns. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createTemplateInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateTemplateWithHttpInfo(TextMagicClient.Model.CreateTemplateInputObject)">
            <summary>
            Create a template There are times when creating a new template makes sense (such as when targeting specific clients or improving your business strategies).  You can create new SMS templates for marketing purposes or SMS templates for business campaigns. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createTemplateInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateTemplateAsync(TextMagicClient.Model.CreateTemplateInputObject)">
            <summary>
            Create a template There are times when creating a new template makes sense (such as when targeting specific clients or improving your business strategies).  You can create new SMS templates for marketing purposes or SMS templates for business campaigns. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createTemplateInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.CreateTemplateAsyncWithHttpInfo(TextMagicClient.Model.CreateTemplateInputObject)">
            <summary>
            Create a template There are times when creating a new template makes sense (such as when targeting specific clients or improving your business strategies).  You can create new SMS templates for marketing purposes or SMS templates for business campaigns. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="createTemplateInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteAllContacts">
            <summary>
            Delete contacts (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteAllContactsWithHttpInfo">
            <summary>
            Delete contacts (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteAllContactsAsync">
            <summary>
            Delete contacts (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteAllContactsAsyncWithHttpInfo">
            <summary>
            Delete contacts (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteAllOutboundMessages">
            <summary>
            Delete all messages Delete all messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteAllOutboundMessagesWithHttpInfo">
            <summary>
            Delete all messages Delete all messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteAllOutboundMessagesAsync">
            <summary>
            Delete all messages Delete all messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteAllOutboundMessagesAsyncWithHttpInfo">
            <summary>
            Delete all messages Delete all messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteAvatar">
            <summary>
            Delete an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteAvatarWithHttpInfo">
            <summary>
            Delete an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteAvatarAsync">
            <summary>
            Delete an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteAvatarAsyncWithHttpInfo">
            <summary>
            Delete an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteChatMessages(TextMagicClient.Model.DeleteChatMessagesBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete chat messages by ID(s) Delete messages from chat by given message IDs.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatMessagesBulkInputObject"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteChatMessagesWithHttpInfo(TextMagicClient.Model.DeleteChatMessagesBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete chat messages by ID(s) Delete messages from chat by given message IDs.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatMessagesBulkInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteChatMessagesAsync(TextMagicClient.Model.DeleteChatMessagesBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete chat messages by ID(s) Delete messages from chat by given message IDs.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatMessagesBulkInputObject"></param>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteChatMessagesAsyncWithHttpInfo(TextMagicClient.Model.DeleteChatMessagesBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete chat messages by ID(s) Delete messages from chat by given message IDs.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatMessagesBulkInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteChatsBulk(TextMagicClient.Model.DeleteChatsBulkInputObject)">
            <summary>
            Delete chats (bulk) Delete chats by given IDs or delete all chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteChatsBulkWithHttpInfo(TextMagicClient.Model.DeleteChatsBulkInputObject)">
            <summary>
            Delete chats (bulk) Delete chats by given IDs or delete all chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteChatsBulkAsync(TextMagicClient.Model.DeleteChatsBulkInputObject)">
            <summary>
            Delete chats (bulk) Delete chats by given IDs or delete all chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteChatsBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteChatsBulkInputObject)">
            <summary>
            Delete chats (bulk) Delete chats by given IDs or delete all chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteChatsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContact(System.Nullable{System.Int32})">
            <summary>
            Delete a contact &gt; This command removes your contact completely. If it was assigned or saved to a shared list, it will disappear from there too. If you only need to remove a contact from selected lists, use the Contact assignment command in the Lists section instead, rather than deleting the contact. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a contact &gt; This command removes your contact completely. If it was assigned or saved to a shared list, it will disappear from there too. If you only need to remove a contact from selected lists, use the Contact assignment command in the Lists section instead, rather than deleting the contact. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a contact &gt; This command removes your contact completely. If it was assigned or saved to a shared list, it will disappear from there too. If you only need to remove a contact from selected lists, use the Contact assignment command in the Lists section instead, rather than deleting the contact. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a contact &gt; This command removes your contact completely. If it was assigned or saved to a shared list, it will disappear from there too. If you only need to remove a contact from selected lists, use the Contact assignment command in the Lists section instead, rather than deleting the contact. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactAvatar(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactAvatarWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactAvatarAsync(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactAvatarAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactNote(System.Nullable{System.Int32})">
            <summary>
            Delete a contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactNoteWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactNoteAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactNoteAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactNotesBulk(System.Nullable{System.Int32},TextMagicClient.Model.DeleteContactNotesBulkInputObject)">
            <summary>
            Delete contact notes (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="deleteContactNotesBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactNotesBulkWithHttpInfo(System.Nullable{System.Int32},TextMagicClient.Model.DeleteContactNotesBulkInputObject)">
            <summary>
            Delete contact notes (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="deleteContactNotesBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactNotesBulkAsync(System.Nullable{System.Int32},TextMagicClient.Model.DeleteContactNotesBulkInputObject)">
            <summary>
            Delete contact notes (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="deleteContactNotesBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactNotesBulkAsyncWithHttpInfo(System.Nullable{System.Int32},TextMagicClient.Model.DeleteContactNotesBulkInputObject)">
            <summary>
            Delete contact notes (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="deleteContactNotesBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactsByIds(TextMagicClient.Model.DeleteContactsByIdsInputObject)">
            <summary>
            Delete contacts by IDs (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContactsByIdsInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactsByIdsWithHttpInfo(TextMagicClient.Model.DeleteContactsByIdsInputObject)">
            <summary>
            Delete contacts by IDs (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContactsByIdsInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactsByIdsAsync(TextMagicClient.Model.DeleteContactsByIdsInputObject)">
            <summary>
            Delete contacts by IDs (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContactsByIdsInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactsByIdsAsyncWithHttpInfo(TextMagicClient.Model.DeleteContactsByIdsInputObject)">
            <summary>
            Delete contacts by IDs (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContactsByIdsInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactsFromList(TextMagicClient.Model.DeleteContacsFromListObject,System.Nullable{System.Int32})">
            <summary>
            Unassign contacts from a list &gt; When you remove contacts from a specific list, they will be deleted permanently, unless they are first saved in another list. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContacsFromListObject"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactsFromListWithHttpInfo(TextMagicClient.Model.DeleteContacsFromListObject,System.Nullable{System.Int32})">
            <summary>
            Unassign contacts from a list &gt; When you remove contacts from a specific list, they will be deleted permanently, unless they are first saved in another list. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContacsFromListObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactsFromListAsync(TextMagicClient.Model.DeleteContacsFromListObject,System.Nullable{System.Int32})">
            <summary>
            Unassign contacts from a list &gt; When you remove contacts from a specific list, they will be deleted permanently, unless they are first saved in another list. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContacsFromListObject"></param>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteContactsFromListAsyncWithHttpInfo(TextMagicClient.Model.DeleteContacsFromListObject,System.Nullable{System.Int32})">
            <summary>
            Unassign contacts from a list &gt; When you remove contacts from a specific list, they will be deleted permanently, unless they are first saved in another list. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteContacsFromListObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteCustomField(System.Nullable{System.Int32})">
            <summary>
            Delete a custom field &gt; When a custom field is deleted, all the information that was added to contacts under this custom field will also be lost. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteCustomFieldWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a custom field &gt; When a custom field is deleted, all the information that was added to contacts under this custom field will also be lost. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteCustomFieldAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a custom field &gt; When a custom field is deleted, all the information that was added to contacts under this custom field will also be lost. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteCustomFieldAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a custom field &gt; When a custom field is deleted, all the information that was added to contacts under this custom field will also be lost. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteDedicatedNumber(System.Nullable{System.Int32})">
            <summary>
            Cancel a dedicated number subscription 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteDedicatedNumberWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Cancel a dedicated number subscription 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteDedicatedNumberAsync(System.Nullable{System.Int32})">
            <summary>
            Cancel a dedicated number subscription 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteDedicatedNumberAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Cancel a dedicated number subscription 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteInboundMessage(System.Nullable{System.Int32})">
            <summary>
            Delete a single inbound message &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteInboundMessageWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a single inbound message &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteInboundMessageAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a single inbound message &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteInboundMessageAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a single inbound message &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteInboundMessagesBulk(TextMagicClient.Model.DeleteInboundMessagesBulkInputObject)">
            <summary>
            Delete inbound messages (bulk) &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteInboundMessagesBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteInboundMessagesBulkWithHttpInfo(TextMagicClient.Model.DeleteInboundMessagesBulkInputObject)">
            <summary>
            Delete inbound messages (bulk) &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteInboundMessagesBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteInboundMessagesBulkAsync(TextMagicClient.Model.DeleteInboundMessagesBulkInputObject)">
            <summary>
            Delete inbound messages (bulk) &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteInboundMessagesBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteInboundMessagesBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteInboundMessagesBulkInputObject)">
            <summary>
            Delete inbound messages (bulk) &gt; Note: deleted inbound messages will disappear from TextMagic Online, chats, and any other place they are referenced.  So, be careful! 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteInboundMessagesBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteList(System.Nullable{System.Int32})">
            <summary>
            Delete a list This command has no parameters. If successful, this command will return the standard delete response (204 No Content); otherwise, a standard error response will be returned.  When you delete a list, the contacts in it are deleted as well, unless they were saved in another list.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteListWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a list This command has no parameters. If successful, this command will return the standard delete response (204 No Content); otherwise, a standard error response will be returned.  When you delete a list, the contacts in it are deleted as well, unless they were saved in another list.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteListAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a list This command has no parameters. If successful, this command will return the standard delete response (204 No Content); otherwise, a standard error response will be returned.  When you delete a list, the contacts in it are deleted as well, unless they were saved in another list.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteListAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a list This command has no parameters. If successful, this command will return the standard delete response (204 No Content); otherwise, a standard error response will be returned.  When you delete a list, the contacts in it are deleted as well, unless they were saved in another list.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteListAvatar(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar for a list Delete an avatar for a list
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteListAvatarWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar for a list Delete an avatar for a list
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteListAvatarAsync(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar for a list Delete an avatar for a list
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteListAvatarAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete an avatar for a list Delete an avatar for a list
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteListContactsBulk(TextMagicClient.Model.DeleteListContactsBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete contacts from a list (bulk) Delete contacts from a list (bulk)
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListContactsBulkInputObject"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteListContactsBulkWithHttpInfo(TextMagicClient.Model.DeleteListContactsBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete contacts from a list (bulk) Delete contacts from a list (bulk)
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListContactsBulkInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteListContactsBulkAsync(TextMagicClient.Model.DeleteListContactsBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete contacts from a list (bulk) Delete contacts from a list (bulk)
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListContactsBulkInputObject"></param>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteListContactsBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteListContactsBulkInputObject,System.Nullable{System.Int32})">
            <summary>
            Delete contacts from a list (bulk) Delete contacts from a list (bulk)
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListContactsBulkInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteListsBulk(TextMagicClient.Model.DeleteListsBulkInputObject)">
            <summary>
            Delete lists (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteListsBulkWithHttpInfo(TextMagicClient.Model.DeleteListsBulkInputObject)">
            <summary>
            Delete lists (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteListsBulkAsync(TextMagicClient.Model.DeleteListsBulkInputObject)">
            <summary>
            Delete lists (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteListsBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteListsBulkInputObject)">
            <summary>
            Delete lists (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteListsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteMessageSession(System.Nullable{System.Int32})">
            <summary>
            Delete a session Delete a message session, together with all nested messages. &gt; You will not be refunded for any deleted sent sessions. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteMessageSessionWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a session Delete a message session, together with all nested messages. &gt; You will not be refunded for any deleted sent sessions. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteMessageSessionAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a session Delete a message session, together with all nested messages. &gt; You will not be refunded for any deleted sent sessions. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteMessageSessionAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a session Delete a message session, together with all nested messages. &gt; You will not be refunded for any deleted sent sessions. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteMessageSessionsBulk(TextMagicClient.Model.DeleteMessageSessionsBulkInputObject)">
            <summary>
            Delete sessions (bulk) Delete message sessions, together with all nested messages, by given ID(s) or delete all message sessions.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteMessageSessionsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteMessageSessionsBulkWithHttpInfo(TextMagicClient.Model.DeleteMessageSessionsBulkInputObject)">
            <summary>
            Delete sessions (bulk) Delete message sessions, together with all nested messages, by given ID(s) or delete all message sessions.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteMessageSessionsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteMessageSessionsBulkAsync(TextMagicClient.Model.DeleteMessageSessionsBulkInputObject)">
            <summary>
            Delete sessions (bulk) Delete message sessions, together with all nested messages, by given ID(s) or delete all message sessions.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteMessageSessionsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteMessageSessionsBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteMessageSessionsBulkInputObject)">
            <summary>
            Delete sessions (bulk) Delete message sessions, together with all nested messages, by given ID(s) or delete all message sessions.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteMessageSessionsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteOutboundMessage(System.Nullable{System.Int32})">
            <summary>
            Delete message Delete a single message.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteOutboundMessageWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete message Delete a single message.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteOutboundMessageAsync(System.Nullable{System.Int32})">
            <summary>
            Delete message Delete a single message.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteOutboundMessageAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete message Delete a single message.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteOutboundMessagesBulk(TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject)">
            <summary>
            Delete messages (bulk) Delete outbound messages by the given ID(s) or delete all outbound messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteOutboundMessagesBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteOutboundMessagesBulkWithHttpInfo(TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject)">
            <summary>
            Delete messages (bulk) Delete outbound messages by the given ID(s) or delete all outbound messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteOutboundMessagesBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteOutboundMessagesBulkAsync(TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject)">
            <summary>
            Delete messages (bulk) Delete outbound messages by the given ID(s) or delete all outbound messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteOutboundMessagesBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteOutboundMessagesBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject)">
            <summary>
            Delete messages (bulk) Delete outbound messages by the given ID(s) or delete all outbound messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteOutboundMessagesBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteScheduledMessage(System.Nullable{System.Int32})">
            <summary>
            Delete a single scheduled message 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteScheduledMessageWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a single scheduled message 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteScheduledMessageAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a single scheduled message 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteScheduledMessageAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a single scheduled message 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteScheduledMessagesBulk(TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject)">
            <summary>
            Delete scheduled messages (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteScheduledMessagesBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteScheduledMessagesBulkWithHttpInfo(TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject)">
            <summary>
            Delete scheduled messages (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteScheduledMessagesBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteScheduledMessagesBulkAsync(TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject)">
            <summary>
            Delete scheduled messages (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteScheduledMessagesBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteScheduledMessagesBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject)">
            <summary>
            Delete scheduled messages (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteScheduledMessagesBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteSenderId(System.Nullable{System.Int32})">
            <summary>
            Delete a Sender ID 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteSenderIdWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a Sender ID 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteSenderIdAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a Sender ID 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteSenderIdAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a Sender ID 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteTemplate(System.Nullable{System.Int32})">
            <summary>
            Delete a template 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteTemplateWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a template 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteTemplateAsync(System.Nullable{System.Int32})">
            <summary>
            Delete a template 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteTemplateAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Delete a template 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteTemplatesBulk(TextMagicClient.Model.DeleteTemplatesBulkInputObject)">
            <summary>
            Delete templates (bulk) Delete templates by given IDs or delete all templates.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteTemplatesBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteTemplatesBulkWithHttpInfo(TextMagicClient.Model.DeleteTemplatesBulkInputObject)">
            <summary>
            Delete templates (bulk) Delete templates by given IDs or delete all templates.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteTemplatesBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteTemplatesBulkAsync(TextMagicClient.Model.DeleteTemplatesBulkInputObject)">
            <summary>
            Delete templates (bulk) Delete templates by given IDs or delete all templates.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteTemplatesBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DeleteTemplatesBulkAsyncWithHttpInfo(TextMagicClient.Model.DeleteTemplatesBulkInputObject)">
            <summary>
            Delete templates (bulk) Delete templates by given IDs or delete all templates.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="deleteTemplatesBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DoCarrierLookup(System.String,System.String)">
            <summary>
            Carrier Lookup This API call allows you to retrieve additional information about a phone number: region-specific phone number formatting, carrier, phone type (landline/mobile) and country information.  &gt; Numbers must be checked one by one. You cannot check multiple numbers in one request.   
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164) or in [National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers). </param>
            <param name="country">This option must be specified only if the phone number is in a **[National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers)**.  (optional)</param>
            <returns>DoCarrierLookupResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DoCarrierLookupWithHttpInfo(System.String,System.String)">
            <summary>
            Carrier Lookup This API call allows you to retrieve additional information about a phone number: region-specific phone number formatting, carrier, phone type (landline/mobile) and country information.  &gt; Numbers must be checked one by one. You cannot check multiple numbers in one request.   
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164) or in [National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers). </param>
            <param name="country">This option must be specified only if the phone number is in a **[National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers)**.  (optional)</param>
            <returns>ApiResponse of DoCarrierLookupResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DoCarrierLookupAsync(System.String,System.String)">
            <summary>
            Carrier Lookup This API call allows you to retrieve additional information about a phone number: region-specific phone number formatting, carrier, phone type (landline/mobile) and country information.  &gt; Numbers must be checked one by one. You cannot check multiple numbers in one request.   
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164) or in [National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers). </param>
            <param name="country">This option must be specified only if the phone number is in a **[National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers)**.  (optional)</param>
            <returns>Task of DoCarrierLookupResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DoCarrierLookupAsyncWithHttpInfo(System.String,System.String)">
            <summary>
            Carrier Lookup This API call allows you to retrieve additional information about a phone number: region-specific phone number formatting, carrier, phone type (landline/mobile) and country information.  &gt; Numbers must be checked one by one. You cannot check multiple numbers in one request.   
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164) or in [National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers). </param>
            <param name="country">This option must be specified only if the phone number is in a **[National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers)**.  (optional)</param>
            <returns>Task of ApiResponse (DoCarrierLookupResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DoEmailLookup(System.String)">
            <summary>
            Email Lookup To get more details about an email address or to check whether it is a valid email or not, you can use the Email Lookup command. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).  This API call allows you to retrieve additional information about an email address, such as mailbox detection, syntax checks, DNS validation, deliverability status, and many more helpful values (see the table below).  &gt; Emails must be checked one by one. You cannot check multiple emails in one request. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="email">Email address.</param>
            <returns>DoEmailLookupResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DoEmailLookupWithHttpInfo(System.String)">
            <summary>
            Email Lookup To get more details about an email address or to check whether it is a valid email or not, you can use the Email Lookup command. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).  This API call allows you to retrieve additional information about an email address, such as mailbox detection, syntax checks, DNS validation, deliverability status, and many more helpful values (see the table below).  &gt; Emails must be checked one by one. You cannot check multiple emails in one request. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="email">Email address.</param>
            <returns>ApiResponse of DoEmailLookupResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DoEmailLookupAsync(System.String)">
            <summary>
            Email Lookup To get more details about an email address or to check whether it is a valid email or not, you can use the Email Lookup command. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).  This API call allows you to retrieve additional information about an email address, such as mailbox detection, syntax checks, DNS validation, deliverability status, and many more helpful values (see the table below).  &gt; Emails must be checked one by one. You cannot check multiple emails in one request. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="email">Email address.</param>
            <returns>Task of DoEmailLookupResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.DoEmailLookupAsyncWithHttpInfo(System.String)">
            <summary>
            Email Lookup To get more details about an email address or to check whether it is a valid email or not, you can use the Email Lookup command. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).  This API call allows you to retrieve additional information about an email address, such as mailbox detection, syntax checks, DNS validation, deliverability status, and many more helpful values (see the table below).  &gt; Emails must be checked one by one. You cannot check multiple emails in one request. To upload and check emails in bulk, please use our [Web app](https://my.textmagic.com/online/email-lookup/).
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="email">Email address.</param>
            <returns>Task of ApiResponse (DoEmailLookupResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllBulkSessions(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all bulk sessions 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetAllBulkSessionsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllBulkSessionsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all bulk sessions 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetAllBulkSessionsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllBulkSessionsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all bulk sessions 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetAllBulkSessionsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllBulkSessionsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all bulk sessions 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetAllBulkSessionsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllChats(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all chats 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="status">Fetch only (a)ctive, (c)losed or (d)eleted chats. (optional)</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <param name="flat">Should additional contact info be included? (optional, default to 0)</param>
            <returns>GetAllChatsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllChatsWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all chats 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="status">Fetch only (a)ctive, (c)losed or (d)eleted chats. (optional)</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <param name="flat">Should additional contact info be included? (optional, default to 0)</param>
            <returns>ApiResponse of GetAllChatsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllChatsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all chats 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="status">Fetch only (a)ctive, (c)losed or (d)eleted chats. (optional)</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <param name="flat">Should additional contact info be included? (optional, default to 0)</param>
            <returns>Task of GetAllChatsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllChatsAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all chats 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="status">Fetch only (a)ctive, (c)losed or (d)eleted chats. (optional)</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <param name="flat">Should additional contact info be included? (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetAllChatsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllInboundMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all inbound messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>GetAllInboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllInboundMessagesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all inbound messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of GetAllInboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllInboundMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all inbound messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of GetAllInboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllInboundMessagesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all inbound messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (GetAllInboundMessagesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllMessageSessions(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all sessions Get all message sending sessions. &gt; This list contains all of your sessions, including those which were sent but not via API 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetAllMessageSessionsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllMessageSessionsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all sessions Get all message sending sessions. &gt; This list contains all of your sessions, including those which were sent but not via API 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetAllMessageSessionsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllMessageSessionsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all sessions Get all message sending sessions. &gt; This list contains all of your sessions, including those which were sent but not via API 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetAllMessageSessionsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllMessageSessionsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all sessions Get all message sending sessions. &gt; This list contains all of your sessions, including those which were sent but not via API 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetAllMessageSessionsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllOutboundMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all messages Get all user oubound messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <returns>GetAllOutboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllOutboundMessagesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all messages Get all user oubound messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <returns>ApiResponse of GetAllOutboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllOutboundMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all messages Get all user oubound messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <returns>Task of GetAllOutboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllOutboundMessagesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all messages Get all user oubound messages.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <returns>Task of ApiResponse (GetAllOutboundMessagesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllScheduledMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get all scheduled messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>GetAllScheduledMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllScheduledMessagesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get all scheduled messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of GetAllScheduledMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllScheduledMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get all scheduled messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of GetAllScheduledMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllScheduledMessagesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get all scheduled messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (GetAllScheduledMessagesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllTemplates(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all templates 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional)</param>
            <param name="limit">The number of results per page. (optional)</param>
            <returns>GetAllTemplatesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllTemplatesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all templates 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional)</param>
            <param name="limit">The number of results per page. (optional)</param>
            <returns>ApiResponse of GetAllTemplatesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllTemplatesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all templates 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional)</param>
            <param name="limit">The number of results per page. (optional)</param>
            <returns>Task of GetAllTemplatesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAllTemplatesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all templates 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional)</param>
            <param name="limit">The number of results per page. (optional)</param>
            <returns>Task of ApiResponse (GetAllTemplatesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAvailableDedicatedNumbers(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find dedicated numbers available for purchase 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter dedicated number country ISO code.</param>
            <param name="prefix">Desired number prefix. Should include the country code (i.e. 447 for UK phone number format). Leave blank to get all the available numbers for the specified country. (optional)</param>
            <param name="tollfree">Should we show only tollfree numbers (tollfree available only for US). (optional, default to 0)</param>
            <returns>GetAvailableDedicatedNumbersResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAvailableDedicatedNumbersWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find dedicated numbers available for purchase 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter dedicated number country ISO code.</param>
            <param name="prefix">Desired number prefix. Should include the country code (i.e. 447 for UK phone number format). Leave blank to get all the available numbers for the specified country. (optional)</param>
            <param name="tollfree">Should we show only tollfree numbers (tollfree available only for US). (optional, default to 0)</param>
            <returns>ApiResponse of GetAvailableDedicatedNumbersResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAvailableDedicatedNumbersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find dedicated numbers available for purchase 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter dedicated number country ISO code.</param>
            <param name="prefix">Desired number prefix. Should include the country code (i.e. 447 for UK phone number format). Leave blank to get all the available numbers for the specified country. (optional)</param>
            <param name="tollfree">Should we show only tollfree numbers (tollfree available only for US). (optional, default to 0)</param>
            <returns>Task of GetAvailableDedicatedNumbersResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAvailableDedicatedNumbersAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find dedicated numbers available for purchase 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter dedicated number country ISO code.</param>
            <param name="prefix">Desired number prefix. Should include the country code (i.e. 447 for UK phone number format). Leave blank to get all the available numbers for the specified country. (optional)</param>
            <param name="tollfree">Should we show only tollfree numbers (tollfree available only for US). (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetAvailableDedicatedNumbersResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAvailableSenderSettingOptions(System.String)">
            <summary>
            Get available sender settings Get all available sender setting options which can be used in the \"from\" parameter of the POST messages method.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter ISO country ID. If not specified, it returns all the available sender settings. (optional)</param>
            <returns>GetAvailableSenderSettingOptionsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAvailableSenderSettingOptionsWithHttpInfo(System.String)">
            <summary>
            Get available sender settings Get all available sender setting options which can be used in the \"from\" parameter of the POST messages method.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter ISO country ID. If not specified, it returns all the available sender settings. (optional)</param>
            <returns>ApiResponse of GetAvailableSenderSettingOptionsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAvailableSenderSettingOptionsAsync(System.String)">
            <summary>
            Get available sender settings Get all available sender setting options which can be used in the \"from\" parameter of the POST messages method.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter ISO country ID. If not specified, it returns all the available sender settings. (optional)</param>
            <returns>Task of GetAvailableSenderSettingOptionsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetAvailableSenderSettingOptionsAsyncWithHttpInfo(System.String)">
            <summary>
            Get available sender settings Get all available sender setting options which can be used in the \"from\" parameter of the POST messages method.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">The 2-letter ISO country ID. If not specified, it returns all the available sender settings. (optional)</param>
            <returns>Task of ApiResponse (GetAvailableSenderSettingOptionsResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBalanceNotificationOptions">
            <summary>
            Returns the list of available balance options which can be used as a bound to determine when to send email to user with low balance notification. See https://my.textmagic.com/online/account/notifications/balance 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GetBalanceNotificationOptionsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBalanceNotificationOptionsWithHttpInfo">
            <summary>
            Returns the list of available balance options which can be used as a bound to determine when to send email to user with low balance notification. See https://my.textmagic.com/online/account/notifications/balance 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GetBalanceNotificationOptionsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBalanceNotificationOptionsAsync">
            <summary>
            Returns the list of available balance options which can be used as a bound to determine when to send email to user with low balance notification. See https://my.textmagic.com/online/account/notifications/balance 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GetBalanceNotificationOptionsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBalanceNotificationOptionsAsyncWithHttpInfo">
            <summary>
            Returns the list of available balance options which can be used as a bound to determine when to send email to user with low balance notification. See https://my.textmagic.com/online/account/notifications/balance 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GetBalanceNotificationOptionsResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBalanceNotificationSettings">
            <summary>
            Get balance notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GetBalanceNotificationSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBalanceNotificationSettingsWithHttpInfo">
            <summary>
            Get balance notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GetBalanceNotificationSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBalanceNotificationSettingsAsync">
            <summary>
            Get balance notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GetBalanceNotificationSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBalanceNotificationSettingsAsyncWithHttpInfo">
            <summary>
            Get balance notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GetBalanceNotificationSettingsResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBlockedContacts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get blocked contacts 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find blocked contacts by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>GetBlockedContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBlockedContactsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get blocked contacts 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find blocked contacts by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of GetBlockedContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBlockedContactsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get blocked contacts 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find blocked contacts by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of GetBlockedContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBlockedContactsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get blocked contacts 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find blocked contacts by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (GetBlockedContactsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBulkSession(System.Nullable{System.Int32})">
            <summary>
            Get bulk session status 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>BulkSession</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBulkSessionWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get bulk session status 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of BulkSession</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBulkSessionAsync(System.Nullable{System.Int32})">
            <summary>
            Get bulk session status 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of BulkSession</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetBulkSessionAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get bulk session status 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (BulkSession)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCallbackSettings">
            <summary>
            Fetch callback URL settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GetCallbackSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCallbackSettingsWithHttpInfo">
            <summary>
            Fetch callback URL settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GetCallbackSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCallbackSettingsAsync">
            <summary>
            Fetch callback URL settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GetCallbackSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCallbackSettingsAsyncWithHttpInfo">
            <summary>
            Fetch callback URL settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GetCallbackSettingsResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetChat(System.Nullable{System.Int32})">
            <summary>
            Get a single chat 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Chat</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetChatWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single chat 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of Chat</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetChatAsync(System.Nullable{System.Int32})">
            <summary>
            Get a single chat 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of Chat</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetChatAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single chat 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (Chat)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetChatByPhone(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find chats by phone 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <param name="upsert">Create a new chat if not found. (optional, default to 0)</param>
            <param name="reopen">Reopen chat if found or do not change status. (optional, default to 0)</param>
            <returns>Chat</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetChatByPhoneWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find chats by phone 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <param name="upsert">Create a new chat if not found. (optional, default to 0)</param>
            <param name="reopen">Reopen chat if found or do not change status. (optional, default to 0)</param>
            <returns>ApiResponse of Chat</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetChatByPhoneAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find chats by phone 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <param name="upsert">Create a new chat if not found. (optional, default to 0)</param>
            <param name="reopen">Reopen chat if found or do not change status. (optional, default to 0)</param>
            <returns>Task of Chat</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetChatByPhoneAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find chats by phone 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <param name="upsert">Create a new chat if not found. (optional, default to 0)</param>
            <param name="reopen">Reopen chat if found or do not change status. (optional, default to 0)</param>
            <returns>Task of ApiResponse (Chat)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetChatMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Get chat messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="start">Return messages since specified timestamp only. Required when `end` parameter specified. (optional)</param>
            <param name="end">Return messages up to specified timestamp only. Required when `start` parameter specified. (optional)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <returns>GetChatMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetChatMessagesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Get chat messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="start">Return messages since specified timestamp only. Required when `end` parameter specified. (optional)</param>
            <param name="end">Return messages up to specified timestamp only. Required when `start` parameter specified. (optional)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <returns>ApiResponse of GetChatMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetChatMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Get chat messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="start">Return messages since specified timestamp only. Required when `end` parameter specified. (optional)</param>
            <param name="end">Return messages up to specified timestamp only. Required when `start` parameter specified. (optional)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <returns>Task of GetChatMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetChatMessagesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Get chat messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="start">Return messages since specified timestamp only. Required when `end` parameter specified. (optional)</param>
            <param name="end">Return messages up to specified timestamp only. Required when `start` parameter specified. (optional)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="voice">Fetch results with voice calls. (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetChatMessagesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContact(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Contact ID.</param>
            <returns>Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Contact ID.</param>
            <returns>ApiResponse of Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactAsync(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Contact ID.</param>
            <returns>Task of Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Contact ID.</param>
            <returns>Task of ApiResponse (Contact)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactByPhone(System.String)">
            <summary>
            Get the details of a specific contact by phone number 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <returns>Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactByPhoneWithHttpInfo(System.String)">
            <summary>
            Get the details of a specific contact by phone number 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <returns>ApiResponse of Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactByPhoneAsync(System.String)">
            <summary>
            Get the details of a specific contact by phone number 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <returns>Task of Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactByPhoneAsyncWithHttpInfo(System.String)">
            <summary>
            Get the details of a specific contact by phone number 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone"></param>
            <returns>Task of ApiResponse (Contact)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactIfBlocked(System.String)">
            <summary>
            Check if a phone number is blocked 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number to check.</param>
            <returns>Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactIfBlockedWithHttpInfo(System.String)">
            <summary>
            Check if a phone number is blocked 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number to check.</param>
            <returns>ApiResponse of Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactIfBlockedAsync(System.String)">
            <summary>
            Check if a phone number is blocked 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number to check.</param>
            <returns>Task of Contact</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactIfBlockedAsyncWithHttpInfo(System.String)">
            <summary>
            Check if a phone number is blocked 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="phone">Phone number to check.</param>
            <returns>Task of ApiResponse (Contact)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactImportSessionProgress(System.Nullable{System.Int32})">
            <summary>
            Check import progress Get contact import session progress.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>GetContactImportSessionProgressResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactImportSessionProgressWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Check import progress Get contact import session progress.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of GetContactImportSessionProgressResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactImportSessionProgressAsync(System.Nullable{System.Int32})">
            <summary>
            Check import progress Get contact import session progress.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of GetContactImportSessionProgressResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactImportSessionProgressAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Check import progress Get contact import session progress.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (GetContactImportSessionProgressResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactNote(System.Nullable{System.Int32})">
            <summary>
            Get a contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ContactNote</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactNoteWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of ContactNote</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactNoteAsync(System.Nullable{System.Int32})">
            <summary>
            Get a contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ContactNote</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactNoteAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (ContactNote)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactNotes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Fetch notes assigned to a given contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetContactNotesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactNotesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Fetch notes assigned to a given contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetContactNotesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactNotesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Fetch notes assigned to a given contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetContactNotesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactNotesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Fetch notes assigned to a given contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetContactNotesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContacts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>GetContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of GetContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of GetContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (GetContactsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactsAutocomplete(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get contacts autocomplete suggestions Get contacts autocomplete suggestions by given search terms.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="query">Find recipients by specified search query.</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lists">Should lists be returned or not? (optional, default to 0)</param>
            <returns>GetContactsAutocompleteResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactsAutocompleteWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get contacts autocomplete suggestions Get contacts autocomplete suggestions by given search terms.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="query">Find recipients by specified search query.</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lists">Should lists be returned or not? (optional, default to 0)</param>
            <returns>ApiResponse of GetContactsAutocompleteResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactsAutocompleteAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get contacts autocomplete suggestions Get contacts autocomplete suggestions by given search terms.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="query">Find recipients by specified search query.</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lists">Should lists be returned or not? (optional, default to 0)</param>
            <returns>Task of GetContactsAutocompleteResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactsAutocompleteAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get contacts autocomplete suggestions Get contacts autocomplete suggestions by given search terms.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="query">Find recipients by specified search query.</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lists">Should lists be returned or not? (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetContactsAutocompleteResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactsByListId(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts in a list A useful synonym for the \"contacts/search\" command with the provided \"listId\" parameter.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Given group ID.</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>GetContactsByListIdPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactsByListIdWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts in a list A useful synonym for the \"contacts/search\" command with the provided \"listId\" parameter.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Given group ID.</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of GetContactsByListIdPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactsByListIdAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts in a list A useful synonym for the \"contacts/search\" command with the provided \"listId\" parameter.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Given group ID.</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of GetContactsByListIdPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetContactsByListIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get all contacts in a list A useful synonym for the \"contacts/search\" command with the provided \"listId\" parameter.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Given group ID.</param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (GetContactsByListIdPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCountries">
            <summary>
            Get countries 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GetCountriesResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCountriesWithHttpInfo">
            <summary>
            Get countries 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GetCountriesResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCountriesAsync">
            <summary>
            Get countries 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GetCountriesResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCountriesAsyncWithHttpInfo">
            <summary>
            Get countries 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GetCountriesResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCurrentUser">
            <summary>
            Get current account information 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>User</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCurrentUserWithHttpInfo">
            <summary>
            Get current account information 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCurrentUserAsync">
            <summary>
            Get current account information 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCurrentUserAsyncWithHttpInfo">
            <summary>
            Get current account information 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCustomField(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific custom field 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>UserCustomField</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCustomFieldWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific custom field 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of UserCustomField</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCustomFieldAsync(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific custom field 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of UserCustomField</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCustomFieldAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific custom field 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (UserCustomField)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCustomFields(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all custom fields 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetCustomFieldsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCustomFieldsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all custom fields 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetCustomFieldsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCustomFieldsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all custom fields 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetCustomFieldsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetCustomFieldsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all custom fields 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetCustomFieldsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetDedicatedNumber(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific dedicated number 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>UsersInbound</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetDedicatedNumberWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific dedicated number 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of UsersInbound</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetDedicatedNumberAsync(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific dedicated number 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of UsersInbound</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetDedicatedNumberAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific dedicated number 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (UsersInbound)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetFavorites(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get favorite contacts and lists 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find contacts or lists by specified search query. (optional)</param>
            <returns>GetFavoritesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetFavoritesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get favorite contacts and lists 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find contacts or lists by specified search query. (optional)</param>
            <returns>ApiResponse of GetFavoritesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetFavoritesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get favorite contacts and lists 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find contacts or lists by specified search query. (optional)</param>
            <returns>Task of GetFavoritesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetFavoritesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get favorite contacts and lists 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find contacts or lists by specified search query. (optional)</param>
            <returns>Task of ApiResponse (GetFavoritesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetInboundMessage(System.Nullable{System.Int32})">
            <summary>
            Get a single inbound message 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns>MessageIn</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetInboundMessageWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single inbound message 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns>ApiResponse of MessageIn</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetInboundMessageAsync(System.Nullable{System.Int32})">
            <summary>
            Get a single inbound message 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns>Task of MessageIn</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetInboundMessageAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single inbound message 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The unique numeric ID for the inbound message.</param>
            <returns>Task of ApiResponse (MessageIn)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetInboundMessagesNotificationSettings">
            <summary>
            Get inbound messages notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GetInboundMessagesNotificationSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetInboundMessagesNotificationSettingsWithHttpInfo">
            <summary>
            Get inbound messages notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GetInboundMessagesNotificationSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetInboundMessagesNotificationSettingsAsync">
            <summary>
            Get inbound messages notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GetInboundMessagesNotificationSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetInboundMessagesNotificationSettingsAsyncWithHttpInfo">
            <summary>
            Get inbound messages notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GetInboundMessagesNotificationSettingsResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetInvoices(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all invoices With the TextMagic API, you can check the invoices and transactions for your account.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetInvoicesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetInvoicesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all invoices With the TextMagic API, you can check the invoices and transactions for your account.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetInvoicesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetInvoicesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all invoices With the TextMagic API, you can check the invoices and transactions for your account.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetInvoicesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetInvoicesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all invoices With the TextMagic API, you can check the invoices and transactions for your account.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetInvoicesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetList(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>List</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetListWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of List</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetListAsync(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of List</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetListAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (List)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetListContactsIds(System.Nullable{System.Int32})">
            <summary>
            Get all contact IDs in a list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>GetListContactsIdsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetListContactsIdsWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get all contact IDs in a list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of GetListContactsIdsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetListContactsIdsAsync(System.Nullable{System.Int32})">
            <summary>
            Get all contact IDs in a list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of GetListContactsIdsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetListContactsIdsAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get all contact IDs in a list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (GetListContactsIdsResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetLists(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all lists 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">The current fetched page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="favoriteOnly">Return only favorited lists. (optional, default to 0)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <returns>GetListsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetListsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all lists 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">The current fetched page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="favoriteOnly">Return only favorited lists. (optional, default to 0)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <returns>ApiResponse of GetListsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetListsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all lists 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">The current fetched page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="favoriteOnly">Return only favorited lists. (optional, default to 0)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <returns>Task of GetListsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetListsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all lists 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">The current fetched page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="favoriteOnly">Return only favorited lists. (optional, default to 0)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetListsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetListsOfContact(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a contact's lists Get all the lists in which a contact is included.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetListsOfContactPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetListsOfContactWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a contact's lists Get all the lists in which a contact is included.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetListsOfContactPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetListsOfContactAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a contact's lists Get all the lists in which a contact is included.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetListsOfContactPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetListsOfContactAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a contact's lists Get all the lists in which a contact is included.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetListsOfContactPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagePreview(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Preview message Get a messages preview (with tags merged) of up to 100 messages per session.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="text">Message text. Required if **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using sendingDateTime and sendingTimezone parameters instead: Optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when the sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending of 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat(if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>GetMessagePreviewResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagePreviewWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Preview message Get a messages preview (with tags merged) of up to 100 messages per session.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="text">Message text. Required if **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using sendingDateTime and sendingTimezone parameters instead: Optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when the sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending of 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat(if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>ApiResponse of GetMessagePreviewResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagePreviewAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Preview message Get a messages preview (with tags merged) of up to 100 messages per session.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="text">Message text. Required if **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using sendingDateTime and sendingTimezone parameters instead: Optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when the sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending of 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat(if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>Task of GetMessagePreviewResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagePreviewAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Preview message Get a messages preview (with tags merged) of up to 100 messages per session.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="text">Message text. Required if **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using sendingDateTime and sendingTimezone parameters instead: Optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when the sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending of 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat(if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>Task of ApiResponse (GetMessagePreviewResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagePrice(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Check message price Check pricing for a new outbound message.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="includeBlocked">Should we show the pricing for blocked contacts? (optional, default to 0)</param>
            <param name="text">Message text. Required if the **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if the **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using the sendingDateTime and sendingTimezone parameters instead: optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat (if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send a Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>GetMessagePriceResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagePriceWithHttpInfo(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Check message price Check pricing for a new outbound message.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="includeBlocked">Should we show the pricing for blocked contacts? (optional, default to 0)</param>
            <param name="text">Message text. Required if the **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if the **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using the sendingDateTime and sendingTimezone parameters instead: optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat (if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send a Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>ApiResponse of GetMessagePriceResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagePriceAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Check message price Check pricing for a new outbound message.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="includeBlocked">Should we show the pricing for blocked contacts? (optional, default to 0)</param>
            <param name="text">Message text. Required if the **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if the **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using the sendingDateTime and sendingTimezone parameters instead: optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat (if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send a Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>Task of GetMessagePriceResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagePriceAsyncWithHttpInfo(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Check message price Check pricing for a new outbound message.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="includeBlocked">Should we show the pricing for blocked contacts? (optional, default to 0)</param>
            <param name="text">Message text. Required if the **template_id** is not set. (optional)</param>
            <param name="templateId">Template used instead of message text. Required if the **text** is not set. (optional)</param>
            <param name="sendingTime">DEPRECATED, consider using the sendingDateTime and sendingTimezone parameters instead: optional (required with rrule set). Message sending time is in unix timestamp format. Default is now. (optional)</param>
            <param name="sendingDateTime">Sending time is in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to the sendingTimezone. (optional)</param>
            <param name="sendingTimezone">The ID or ISO-name of the timezone used for sending when sendingDateTime parameter is set, e.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent on May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is the account timezone. (optional)</param>
            <param name="contacts">Comma-separated array of contact resources id message will be sent to. (optional)</param>
            <param name="lists">Comma-separated array of list resources id message will be sent to. (optional)</param>
            <param name="phones">Comma-separated array of E.164 phone numbers message will be sent to. (optional)</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (optional, default to 0)</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending 1 to 6 message parts). (optional, default to 6)</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure. (optional)</param>
            <param name="from">One of the allowed Sender ID (phone number or alphanumeric sender ID). If the specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs). (optional)</param>
            <param name="rule">An iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as the start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details. (optional)</param>
            <param name="createChat">Should the sending method try to create new Chat (if not exist) with specified recipients? (optional, default to 0)</param>
            <param name="tts">Send a Text-to-Speech message. (optional, default to 0)</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (optional, default to 0)</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country. (optional)</param>
            <returns>Task of ApiResponse (GetMessagePriceResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessageSession(System.Nullable{System.Int32})">
            <summary>
            Get a session`s details Get a specific session’s details.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Session ID.</param>
            <returns>MessageSession</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessageSessionWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a session`s details Get a specific session’s details.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Session ID.</param>
            <returns>ApiResponse of MessageSession</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessageSessionAsync(System.Nullable{System.Int32})">
            <summary>
            Get a session`s details Get a specific session’s details.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Session ID.</param>
            <returns>Task of MessageSession</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessageSessionAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a session`s details Get a specific session’s details.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Session ID.</param>
            <returns>Task of ApiResponse (MessageSession)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessageSessionStat(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a session`s statistics 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>GetMessageSessionStatResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessageSessionStatWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a session`s statistics 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>ApiResponse of GetMessageSessionStatResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessageSessionStatAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a session`s statistics 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>Task of GetMessageSessionStatResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessageSessionStatAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a session`s statistics 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetMessageSessionStatResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagesBySessionId(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get a session`s messages A useful synonym for the \"messages/search\" command with the provided \"sessionId\" parameter.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>GetMessagesBySessionIdPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagesBySessionIdWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get a session`s messages A useful synonym for the \"messages/search\" command with the provided \"sessionId\" parameter.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>ApiResponse of GetMessagesBySessionIdPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagesBySessionIdAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get a session`s messages A useful synonym for the \"messages/search\" command with the provided \"sessionId\" parameter.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>Task of GetMessagesBySessionIdPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagesBySessionIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Get a session`s messages A useful synonym for the \"messages/search\" command with the provided \"sessionId\" parameter.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetMessagesBySessionIdPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagingCounters">
            <summary>
            Get sent/received messages counters values Get total contacts, sent messages and received messages counters values.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GetMessagingCountersResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagingCountersWithHttpInfo">
            <summary>
            Get sent/received messages counters values Get total contacts, sent messages and received messages counters values.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GetMessagingCountersResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagingCountersAsync">
            <summary>
            Get sent/received messages counters values Get total contacts, sent messages and received messages counters values.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GetMessagingCountersResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagingCountersAsyncWithHttpInfo">
            <summary>
            Get sent/received messages counters values Get total contacts, sent messages and received messages counters values.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GetMessagingCountersResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagingStat(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get messaging statistics 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="by">*   **off** - to get total values per specified time interval; *   **day** - to show values grouped by day; *   **month** - to show values grouped by month; *   **year** - to show values grouped by year.  (optional, default to off)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>GetMessagingStatResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagingStatWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get messaging statistics 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="by">*   **off** - to get total values per specified time interval; *   **day** - to show values grouped by day; *   **month** - to show values grouped by month; *   **year** - to show values grouped by year.  (optional, default to off)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>ApiResponse of GetMessagingStatResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagingStatAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get messaging statistics 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="by">*   **off** - to get total values per specified time interval; *   **day** - to show values grouped by day; *   **month** - to show values grouped by month; *   **year** - to show values grouped by year.  (optional, default to off)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>Task of GetMessagingStatResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetMessagingStatAsyncWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get messaging statistics 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="by">*   **off** - to get total values per specified time interval; *   **day** - to show values grouped by day; *   **month** - to show values grouped by month; *   **year** - to show values grouped by year.  (optional, default to off)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>Task of ApiResponse (GetMessagingStatResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetOutboundMessage(System.Nullable{System.Int32})">
            <summary>
            Get a single message Get a single outgoing message.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>MessageOut</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetOutboundMessageWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single message Get a single outgoing message.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of MessageOut</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetOutboundMessageAsync(System.Nullable{System.Int32})">
            <summary>
            Get a single message Get a single outgoing message.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of MessageOut</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetOutboundMessageAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single message Get a single outgoing message.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (MessageOut)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetOutboundMessagesHistory(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get history Get the outbound messages history.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. (optional)</param>
            <param name="query">Find message by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>GetOutboundMessagesHistoryPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetOutboundMessagesHistoryWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get history Get the outbound messages history.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. (optional)</param>
            <param name="query">Find message by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of GetOutboundMessagesHistoryPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetOutboundMessagesHistoryAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get history Get the outbound messages history.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. (optional)</param>
            <param name="query">Find message by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of GetOutboundMessagesHistoryPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetOutboundMessagesHistoryAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get history Get the outbound messages history.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. (optional)</param>
            <param name="query">Find message by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (GetOutboundMessagesHistoryPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetScheduledMessage(System.Nullable{System.Int32})">
            <summary>
            Get a single scheduled message 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>MessagesIcs</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetScheduledMessageWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single scheduled message 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of MessagesIcs</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetScheduledMessageAsync(System.Nullable{System.Int32})">
            <summary>
            Get a single scheduled message 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of MessagesIcs</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetScheduledMessageAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a single scheduled message 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (MessagesIcs)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSenderId(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific Sender ID 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>SenderId</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSenderIdWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific Sender ID 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of SenderId</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSenderIdAsync(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific Sender ID 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of SenderId</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSenderIdAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific Sender ID 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (SenderId)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSenderIds(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your approved Sender IDs 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetSenderIdsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSenderIdsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your approved Sender IDs 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetSenderIdsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSenderIdsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your approved Sender IDs 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetSenderIdsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSenderIdsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your approved Sender IDs 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetSenderIdsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSenderSettings(System.String)">
            <summary>
            Get current sender settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">Return sender settings enabled for sending to a specified country. Should be 2 upper-case characters. (optional)</param>
            <returns>GetSenderSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSenderSettingsWithHttpInfo(System.String)">
            <summary>
            Get current sender settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">Return sender settings enabled for sending to a specified country. Should be 2 upper-case characters. (optional)</param>
            <returns>ApiResponse of GetSenderSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSenderSettingsAsync(System.String)">
            <summary>
            Get current sender settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">Return sender settings enabled for sending to a specified country. Should be 2 upper-case characters. (optional)</param>
            <returns>Task of GetSenderSettingsResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSenderSettingsAsyncWithHttpInfo(System.String)">
            <summary>
            Get current sender settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="country">Return sender settings enabled for sending to a specified country. Should be 2 upper-case characters. (optional)</param>
            <returns>Task of ApiResponse (GetSenderSettingsResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSpendingStat(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get spending statistics 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>GetSpendingStatPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSpendingStatWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get spending statistics 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>ApiResponse of GetSpendingStatPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSpendingStatAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get spending statistics 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>Task of GetSpendingStatPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSpendingStatAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get spending statistics 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="start">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is 7 days prior.  (optional)</param>
            <param name="end">Time period start in [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time) format. The default is today.  (optional)</param>
            <returns>Task of ApiResponse (GetSpendingStatPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSubaccount(System.Nullable{System.Int32})">
            <summary>
            Get sub-account information 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>User</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSubaccountWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get sub-account information 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSubaccountAsync(System.Nullable{System.Int32})">
            <summary>
            Get sub-account information 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSubaccountAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get sub-account information 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSubaccounts(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a sub-accounts list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>User</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSubaccountsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a sub-accounts list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSubaccountsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a sub-accounts list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSubaccountsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get a sub-accounts list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSubaccountsWithTokens(TextMagicClient.Model.GetSubaccountsWithTokensInputObject,System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            Get all sub-accounts with their REST API tokens associated with a specified app name Get all sub-accounts with their REST API tokens associated with specified app name. When more than one token related to app name, last key will be returned.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="getSubaccountsWithTokensInputObject"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetSubaccountsWithTokensResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSubaccountsWithTokensWithHttpInfo(TextMagicClient.Model.GetSubaccountsWithTokensInputObject,System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            Get all sub-accounts with their REST API tokens associated with a specified app name Get all sub-accounts with their REST API tokens associated with specified app name. When more than one token related to app name, last key will be returned.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="getSubaccountsWithTokensInputObject"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetSubaccountsWithTokensResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSubaccountsWithTokensAsync(TextMagicClient.Model.GetSubaccountsWithTokensInputObject,System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            Get all sub-accounts with their REST API tokens associated with a specified app name Get all sub-accounts with their REST API tokens associated with specified app name. When more than one token related to app name, last key will be returned.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="getSubaccountsWithTokensInputObject"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetSubaccountsWithTokensResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetSubaccountsWithTokensAsyncWithHttpInfo(TextMagicClient.Model.GetSubaccountsWithTokensInputObject,System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            Get all sub-accounts with their REST API tokens associated with a specified app name Get all sub-accounts with their REST API tokens associated with specified app name. When more than one token related to app name, last key will be returned.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="getSubaccountsWithTokensInputObject"></param>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetSubaccountsWithTokensResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetTemplate(System.Nullable{System.Int32})">
            <summary>
            Get a template`s details Get a single template.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>MessageTemplate</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetTemplateWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a template`s details Get a single template.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of MessageTemplate</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetTemplateAsync(System.Nullable{System.Int32})">
            <summary>
            Get a template`s details Get a single template.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of MessageTemplate</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetTemplateAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get a template`s details Get a single template.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (MessageTemplate)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetTimezones(System.Nullable{System.Int32})">
            <summary>
            Get timezones Return all available timezone IDs
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="full">Return full info about timezones in array (0 or 1). Default is 0. (optional, default to 0)</param>
            <returns>GetTimezonesResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetTimezonesWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get timezones Return all available timezone IDs
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="full">Return full info about timezones in array (0 or 1). Default is 0. (optional, default to 0)</param>
            <returns>ApiResponse of GetTimezonesResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetTimezonesAsync(System.Nullable{System.Int32})">
            <summary>
            Get timezones Return all available timezone IDs
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="full">Return full info about timezones in array (0 or 1). Default is 0. (optional, default to 0)</param>
            <returns>Task of GetTimezonesResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetTimezonesAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get timezones Return all available timezone IDs
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="full">Return full info about timezones in array (0 or 1). Default is 0. (optional, default to 0)</param>
            <returns>Task of ApiResponse (GetTimezonesResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUnreadMessagesTotal">
            <summary>
            Get unread messages number Get the total amount of unread messages in the current user chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>GetUnreadMessagesTotalResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUnreadMessagesTotalWithHttpInfo">
            <summary>
            Get unread messages number Get the total amount of unread messages in the current user chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of GetUnreadMessagesTotalResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUnreadMessagesTotalAsync">
            <summary>
            Get unread messages number Get the total amount of unread messages in the current user chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of GetUnreadMessagesTotalResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUnreadMessagesTotalAsyncWithHttpInfo">
            <summary>
            Get unread messages number Get the total amount of unread messages in the current user chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (GetUnreadMessagesTotalResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUnsubscribedContact(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific unsubscribed contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>UnsubscribedContact</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUnsubscribedContactWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific unsubscribed contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>ApiResponse of UnsubscribedContact</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUnsubscribedContactAsync(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific unsubscribed contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of UnsubscribedContact</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUnsubscribedContactAsyncWithHttpInfo(System.Nullable{System.Int32})">
            <summary>
            Get the details of a specific unsubscribed contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <returns>Task of ApiResponse (UnsubscribedContact)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUnsubscribers(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all unsubscribed contacts When one of your message recipients sends a request with one of the [STOP-words](https://www.textmagic.com/sms-stop-command/), they will be immediately opted-out of your send lists and their contact status will change to an unsubscribed contact. To retrieve information on all contacts who have unsubscribed status, use: 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>GetUnsubscribersPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUnsubscribersWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all unsubscribed contacts When one of your message recipients sends a request with one of the [STOP-words](https://www.textmagic.com/sms-stop-command/), they will be immediately opted-out of your send lists and their contact status will change to an unsubscribed contact. To retrieve information on all contacts who have unsubscribed status, use: 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>ApiResponse of GetUnsubscribersPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUnsubscribersAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all unsubscribed contacts When one of your message recipients sends a request with one of the [STOP-words](https://www.textmagic.com/sms-stop-command/), they will be immediately opted-out of your send lists and their contact status will change to an unsubscribed contact. To retrieve information on all contacts who have unsubscribed status, use: 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of GetUnsubscribersPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUnsubscribersAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all unsubscribed contacts When one of your message recipients sends a request with one of the [STOP-words](https://www.textmagic.com/sms-stop-command/), they will be immediately opted-out of your send lists and their contact status will change to an unsubscribed contact. To retrieve information on all contacts who have unsubscribed status, use: 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <returns>Task of ApiResponse (GetUnsubscribersPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUserDedicatedNumbers(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your dedicated numbers 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="surveyId">Fetch only those numbers that are ready for the survey. (optional)</param>
            <returns>GetUserDedicatedNumbersPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUserDedicatedNumbersWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your dedicated numbers 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="surveyId">Fetch only those numbers that are ready for the survey. (optional)</param>
            <returns>ApiResponse of GetUserDedicatedNumbersPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUserDedicatedNumbersAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your dedicated numbers 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="surveyId">Fetch only those numbers that are ready for the survey. (optional)</param>
            <returns>Task of GetUserDedicatedNumbersPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.GetUserDedicatedNumbersAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get all your dedicated numbers 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="surveyId">Fetch only those numbers that are ready for the survey. (optional)</param>
            <returns>Task of ApiResponse (GetUserDedicatedNumbersPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.ImportContacts(System.IO.Stream,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Import contacts Import contacts from the CSV, XLS or XLSX file.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">File containing contacts in csv or xls(x) formats.</param>
            <param name="column">Import file column mapping. The string must contain sub-strings of mapping in format `columnNumber:field` glued by `;`. For example: `0:firstName;1:lastName;3:phone;4:email` where the value before `:` is a number of the column in the file, and the value after `:` is a field of the newly created contact or the ID of a custom field. Numbers of columns begin from zero. Allowed built-in contact fields are: `firstName`, `lastName`, `phone`, `email`. Existing of `phone` mapping is required. </param>
            <param name="listId">List that ID contacts will be imported to. Ignored if `listName` is specified.  (optional)</param>
            <param name="listName">List name. This list will be created during import. If such name is already taken, an ordinal (1, 2, ...) will be added to the end. Ignored if `listId` is specified.  (optional)</param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.ImportContactsWithHttpInfo(System.IO.Stream,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Import contacts Import contacts from the CSV, XLS or XLSX file.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">File containing contacts in csv or xls(x) formats.</param>
            <param name="column">Import file column mapping. The string must contain sub-strings of mapping in format `columnNumber:field` glued by `;`. For example: `0:firstName;1:lastName;3:phone;4:email` where the value before `:` is a number of the column in the file, and the value after `:` is a field of the newly created contact or the ID of a custom field. Numbers of columns begin from zero. Allowed built-in contact fields are: `firstName`, `lastName`, `phone`, `email`. Existing of `phone` mapping is required. </param>
            <param name="listId">List that ID contacts will be imported to. Ignored if `listName` is specified.  (optional)</param>
            <param name="listName">List name. This list will be created during import. If such name is already taken, an ordinal (1, 2, ...) will be added to the end. Ignored if `listId` is specified.  (optional)</param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.ImportContactsAsync(System.IO.Stream,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Import contacts Import contacts from the CSV, XLS or XLSX file.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">File containing contacts in csv or xls(x) formats.</param>
            <param name="column">Import file column mapping. The string must contain sub-strings of mapping in format `columnNumber:field` glued by `;`. For example: `0:firstName;1:lastName;3:phone;4:email` where the value before `:` is a number of the column in the file, and the value after `:` is a field of the newly created contact or the ID of a custom field. Numbers of columns begin from zero. Allowed built-in contact fields are: `firstName`, `lastName`, `phone`, `email`. Existing of `phone` mapping is required. </param>
            <param name="listId">List that ID contacts will be imported to. Ignored if `listName` is specified.  (optional)</param>
            <param name="listName">List name. This list will be created during import. If such name is already taken, an ordinal (1, 2, ...) will be added to the end. Ignored if `listId` is specified.  (optional)</param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.ImportContactsAsyncWithHttpInfo(System.IO.Stream,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Import contacts Import contacts from the CSV, XLS or XLSX file.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">File containing contacts in csv or xls(x) formats.</param>
            <param name="column">Import file column mapping. The string must contain sub-strings of mapping in format `columnNumber:field` glued by `;`. For example: `0:firstName;1:lastName;3:phone;4:email` where the value before `:` is a number of the column in the file, and the value after `:` is a field of the newly created contact or the ID of a custom field. Numbers of columns begin from zero. Allowed built-in contact fields are: `firstName`, `lastName`, `phone`, `email`. Existing of `phone` mapping is required. </param>
            <param name="listId">List that ID contacts will be imported to. Ignored if `listName` is specified.  (optional)</param>
            <param name="listName">List name. This list will be created during import. If such name is already taken, an ordinal (1, 2, ...) will be added to the end. Ignored if `listId` is specified.  (optional)</param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.InviteSubaccount(TextMagicClient.Model.InviteSubaccountInputObject)">
            <summary>
            Invite a new sub-account 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="inviteSubaccountInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.InviteSubaccountWithHttpInfo(TextMagicClient.Model.InviteSubaccountInputObject)">
            <summary>
            Invite a new sub-account 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="inviteSubaccountInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.InviteSubaccountAsync(TextMagicClient.Model.InviteSubaccountInputObject)">
            <summary>
            Invite a new sub-account 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="inviteSubaccountInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.InviteSubaccountAsyncWithHttpInfo(TextMagicClient.Model.InviteSubaccountInputObject)">
            <summary>
            Invite a new sub-account 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="inviteSubaccountInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MarkChatsReadBulk(TextMagicClient.Model.MarkChatsReadBulkInputObject)">
            <summary>
            Mark chats as read (bulk) Mark several chats as read by chat IDs or mark all chats as read
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsReadBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MarkChatsReadBulkWithHttpInfo(TextMagicClient.Model.MarkChatsReadBulkInputObject)">
            <summary>
            Mark chats as read (bulk) Mark several chats as read by chat IDs or mark all chats as read
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsReadBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MarkChatsReadBulkAsync(TextMagicClient.Model.MarkChatsReadBulkInputObject)">
            <summary>
            Mark chats as read (bulk) Mark several chats as read by chat IDs or mark all chats as read
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsReadBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MarkChatsReadBulkAsyncWithHttpInfo(TextMagicClient.Model.MarkChatsReadBulkInputObject)">
            <summary>
            Mark chats as read (bulk) Mark several chats as read by chat IDs or mark all chats as read
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsReadBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MarkChatsUnreadBulk(TextMagicClient.Model.MarkChatsUnreadBulkInputObject)">
            <summary>
            Mark chats as unread (bulk) Mark several chats as UNread by chat IDs or mark all chats as UNread
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsUnreadBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MarkChatsUnreadBulkWithHttpInfo(TextMagicClient.Model.MarkChatsUnreadBulkInputObject)">
            <summary>
            Mark chats as unread (bulk) Mark several chats as UNread by chat IDs or mark all chats as UNread
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsUnreadBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MarkChatsUnreadBulkAsync(TextMagicClient.Model.MarkChatsUnreadBulkInputObject)">
            <summary>
            Mark chats as unread (bulk) Mark several chats as UNread by chat IDs or mark all chats as UNread
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsUnreadBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MarkChatsUnreadBulkAsyncWithHttpInfo(TextMagicClient.Model.MarkChatsUnreadBulkInputObject)">
            <summary>
            Mark chats as unread (bulk) Mark several chats as UNread by chat IDs or mark all chats as UNread
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="markChatsUnreadBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MuteChat(TextMagicClient.Model.MuteChatInputObject)">
            <summary>
            Mute chat sounds 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MuteChatWithHttpInfo(TextMagicClient.Model.MuteChatInputObject)">
            <summary>
            Mute chat sounds 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MuteChatAsync(TextMagicClient.Model.MuteChatInputObject)">
            <summary>
            Mute chat sounds 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MuteChatAsyncWithHttpInfo(TextMagicClient.Model.MuteChatInputObject)">
            <summary>
            Mute chat sounds 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MuteChatsBulk(TextMagicClient.Model.MuteChatsBulkInputObject)">
            <summary>
            Mute chats (bulk) Mute several chats by chat ids or mute all chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MuteChatsBulkWithHttpInfo(TextMagicClient.Model.MuteChatsBulkInputObject)">
            <summary>
            Mute chats (bulk) Mute several chats by chat ids or mute all chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MuteChatsBulkAsync(TextMagicClient.Model.MuteChatsBulkInputObject)">
            <summary>
            Mute chats (bulk) Mute several chats by chat ids or mute all chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.MuteChatsBulkAsyncWithHttpInfo(TextMagicClient.Model.MuteChatsBulkInputObject)">
            <summary>
            Mute chats (bulk) Mute several chats by chat ids or mute all chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="muteChatsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.Ping">
            <summary>
            Ping Make a simple ping request.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>PingResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.PingWithHttpInfo">
            <summary>
            Ping Make a simple ping request.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of PingResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.PingAsync">
            <summary>
            Ping Make a simple ping request.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of PingResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.PingAsyncWithHttpInfo">
            <summary>
            Ping Make a simple ping request.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Task of ApiResponse (PingResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.ReopenChatsBulk(TextMagicClient.Model.ReopenChatsBulkInputObject)">
            <summary>
            Reopen chats (bulk) Reopen chats by chat IDs or reopen all chats
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="reopenChatsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.ReopenChatsBulkWithHttpInfo(TextMagicClient.Model.ReopenChatsBulkInputObject)">
            <summary>
            Reopen chats (bulk) Reopen chats by chat IDs or reopen all chats
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="reopenChatsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.ReopenChatsBulkAsync(TextMagicClient.Model.ReopenChatsBulkInputObject)">
            <summary>
            Reopen chats (bulk) Reopen chats by chat IDs or reopen all chats
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="reopenChatsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.ReopenChatsBulkAsyncWithHttpInfo(TextMagicClient.Model.ReopenChatsBulkInputObject)">
            <summary>
            Reopen chats (bulk) Reopen chats by chat IDs or reopen all chats
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="reopenChatsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.RequestNewSubaccountToken(TextMagicClient.Model.RequestNewSubaccountTokenInputObject)">
            <summary>
            Request a new REST API token for sub-account Returning user object, key and app name.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestNewSubaccountTokenInputObject"></param>
            <returns>User</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.RequestNewSubaccountTokenWithHttpInfo(TextMagicClient.Model.RequestNewSubaccountTokenInputObject)">
            <summary>
            Request a new REST API token for sub-account Returning user object, key and app name.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestNewSubaccountTokenInputObject"></param>
            <returns>ApiResponse of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.RequestNewSubaccountTokenAsync(TextMagicClient.Model.RequestNewSubaccountTokenInputObject)">
            <summary>
            Request a new REST API token for sub-account Returning user object, key and app name.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestNewSubaccountTokenInputObject"></param>
            <returns>Task of User</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.RequestNewSubaccountTokenAsyncWithHttpInfo(TextMagicClient.Model.RequestNewSubaccountTokenInputObject)">
            <summary>
            Request a new REST API token for sub-account Returning user object, key and app name.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestNewSubaccountTokenInputObject"></param>
            <returns>Task of ApiResponse (User)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.RequestSenderId(TextMagicClient.Model.RequestSenderIdInputObject)">
            <summary>
            Apply for a new Sender ID &gt; Sender IDs are shared among all of your sub-accounts.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestSenderIdInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.RequestSenderIdWithHttpInfo(TextMagicClient.Model.RequestSenderIdInputObject)">
            <summary>
            Apply for a new Sender ID &gt; Sender IDs are shared among all of your sub-accounts.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestSenderIdInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.RequestSenderIdAsync(TextMagicClient.Model.RequestSenderIdInputObject)">
            <summary>
            Apply for a new Sender ID &gt; Sender IDs are shared among all of your sub-accounts.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestSenderIdInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.RequestSenderIdAsyncWithHttpInfo(TextMagicClient.Model.RequestSenderIdInputObject)">
            <summary>
            Apply for a new Sender ID &gt; Sender IDs are shared among all of your sub-accounts.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="requestSenderIdInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchChats(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats by message text 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <returns>SearchChatsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchChatsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats by message text 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <returns>ApiResponse of SearchChatsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchChatsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats by message text 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <returns>Task of SearchChatsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchChatsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats by message text 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <returns>Task of ApiResponse (SearchChatsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchChatsByIds(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find chats by ID(s). (optional)</param>
            <returns>SearchChatsByIdsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchChatsByIdsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find chats by ID(s). (optional)</param>
            <returns>ApiResponse of SearchChatsByIdsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchChatsByIdsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find chats by ID(s). (optional)</param>
            <returns>Task of SearchChatsByIdsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchChatsByIdsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find chats (bulk) 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find chats by ID(s). (optional)</param>
            <returns>Task of ApiResponse (SearchChatsByIdsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchChatsByReceipent(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find chats by recipient Find chats by recipient (contact, list name or phone number).
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <returns>SearchChatsByReceipentPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchChatsByReceipentWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find chats by recipient Find chats by recipient (contact, list name or phone number).
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <returns>ApiResponse of SearchChatsByReceipentPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchChatsByReceipentAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find chats by recipient Find chats by recipient (contact, list name or phone number).
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <returns>Task of SearchChatsByReceipentPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchChatsByReceipentAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find chats by recipient Find chats by recipient (contact, list name or phone number).
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find chats by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <returns>Task of ApiResponse (SearchChatsByReceipentPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchContacts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find contacts by given criteria 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="ids">Find contacts by IDs. (optional)</param>
            <param name="listId">Find contacts by List ID. (optional)</param>
            <param name="includeBlocked">Should blocked contacts be included? (optional)</param>
            <param name="query">Find contacts by specified search query. (optional)</param>
            <param name="local">Treat phone number passed in the \"query\" field as local. Default is 0. (optional, default to 0)</param>
            <param name="exactMatch">Return only exactly matching contacts. Default is 0. (optional, default to 0)</param>
            <param name="country">The 2-letter ISO country code for local phone numbers, used when \"local\" is set to true. Default is the account country. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>SearchContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchContactsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find contacts by given criteria 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="ids">Find contacts by IDs. (optional)</param>
            <param name="listId">Find contacts by List ID. (optional)</param>
            <param name="includeBlocked">Should blocked contacts be included? (optional)</param>
            <param name="query">Find contacts by specified search query. (optional)</param>
            <param name="local">Treat phone number passed in the \"query\" field as local. Default is 0. (optional, default to 0)</param>
            <param name="exactMatch">Return only exactly matching contacts. Default is 0. (optional, default to 0)</param>
            <param name="country">The 2-letter ISO country code for local phone numbers, used when \"local\" is set to true. Default is the account country. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of SearchContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchContactsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find contacts by given criteria 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="ids">Find contacts by IDs. (optional)</param>
            <param name="listId">Find contacts by List ID. (optional)</param>
            <param name="includeBlocked">Should blocked contacts be included? (optional)</param>
            <param name="query">Find contacts by specified search query. (optional)</param>
            <param name="local">Treat phone number passed in the \"query\" field as local. Default is 0. (optional, default to 0)</param>
            <param name="exactMatch">Return only exactly matching contacts. Default is 0. (optional, default to 0)</param>
            <param name="country">The 2-letter ISO country code for local phone numbers, used when \"local\" is set to true. Default is the account country. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of SearchContactsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchContactsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find contacts by given criteria 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="shared">Should shared contacts be included? (optional, default to 0)</param>
            <param name="ids">Find contacts by IDs. (optional)</param>
            <param name="listId">Find contacts by List ID. (optional)</param>
            <param name="includeBlocked">Should blocked contacts be included? (optional)</param>
            <param name="query">Find contacts by specified search query. (optional)</param>
            <param name="local">Treat phone number passed in the \"query\" field as local. Default is 0. (optional, default to 0)</param>
            <param name="exactMatch">Return only exactly matching contacts. Default is 0. (optional, default to 0)</param>
            <param name="country">The 2-letter ISO country code for local phone numbers, used when \"local\" is set to true. Default is the account country. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (SearchContactsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchInboundMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Find inbound messages Find inbound messages by given parameters.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="query">Find recipients by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="expand">Expand by adding firstName, lastName and contactId. (optional, default to 0)</param>
            <returns>SearchInboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchInboundMessagesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Find inbound messages Find inbound messages by given parameters.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="query">Find recipients by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="expand">Expand by adding firstName, lastName and contactId. (optional, default to 0)</param>
            <returns>ApiResponse of SearchInboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchInboundMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Find inbound messages Find inbound messages by given parameters.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="query">Find recipients by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="expand">Expand by adding firstName, lastName and contactId. (optional, default to 0)</param>
            <returns>Task of SearchInboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchInboundMessagesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Find inbound messages Find inbound messages by given parameters.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="query">Find recipients by specified search query. (optional)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <param name="expand">Expand by adding firstName, lastName and contactId. (optional, default to 0)</param>
            <returns>Task of ApiResponse (SearchInboundMessagesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchLists(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find lists by given criteria 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find lists by IDs. (optional)</param>
            <param name="query">Find lists by specified search query. (optional)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <param name="onlyDefault">Return only default lists. (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>SearchListsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchListsWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find lists by given criteria 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find lists by IDs. (optional)</param>
            <param name="query">Find lists by specified search query. (optional)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <param name="onlyDefault">Return only default lists. (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of SearchListsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchListsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find lists by given criteria 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find lists by IDs. (optional)</param>
            <param name="query">Find lists by specified search query. (optional)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <param name="onlyDefault">Return only default lists. (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of SearchListsPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchListsAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Find lists by given criteria 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find lists by IDs. (optional)</param>
            <param name="query">Find lists by specified search query. (optional)</param>
            <param name="onlyMine">Return only current user lists. (optional, default to 0)</param>
            <param name="onlyDefault">Return only default lists. (optional, default to 0)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (SearchListsPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchOutboundMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Find messages Find outbound messages by given parameters.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="sessionId">Find messages by session ID. (optional)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <returns>SearchOutboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchOutboundMessagesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Find messages Find outbound messages by given parameters.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="sessionId">Find messages by session ID. (optional)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <returns>ApiResponse of SearchOutboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchOutboundMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Find messages Find outbound messages by given parameters.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="sessionId">Find messages by session ID. (optional)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <returns>Task of SearchOutboundMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchOutboundMessagesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Find messages Find outbound messages by given parameters.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="lastId">Filter results by ID, selecting all values lesser than the specified ID. Note that the \\'page\\' parameter is ignored when \\'lastId\\' is specified. (optional)</param>
            <param name="ids">Find message by ID(s). (optional)</param>
            <param name="sessionId">Find messages by session ID. (optional)</param>
            <param name="statuses">Find messages by status. (optional)</param>
            <param name="includeDeleted">Search also in deleted messages. (optional, default to 0)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <returns>Task of ApiResponse (SearchOutboundMessagesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchScheduledMessages(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Find scheduled messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="ids">Find schedules by ID(s). (optional)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>SearchScheduledMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchScheduledMessagesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Find scheduled messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="ids">Find schedules by ID(s). (optional)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>ApiResponse of SearchScheduledMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchScheduledMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Find scheduled messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="ids">Find schedules by ID(s). (optional)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of SearchScheduledMessagesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchScheduledMessagesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Find scheduled messages 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="query">Find messages by specified search query. (optional)</param>
            <param name="ids">Find schedules by ID(s). (optional)</param>
            <param name="status">Fetch schedules with a specific status: a - actual, c - completed, x - all. (optional, default to x)</param>
            <param name="orderBy">Order results by some field. Default is id. (optional, default to id)</param>
            <param name="direction">Order direction. Default is desc. (optional, default to desc)</param>
            <returns>Task of ApiResponse (SearchScheduledMessagesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchTemplates(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find templates by criteria Find user templates by given parameters.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find template by ID(s). (optional)</param>
            <param name="name">Find template by name. (optional)</param>
            <param name="content">Find template by content. (optional)</param>
            <returns>SearchTemplatesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchTemplatesWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find templates by criteria Find user templates by given parameters.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find template by ID(s). (optional)</param>
            <param name="name">Find template by name. (optional)</param>
            <param name="content">Find template by content. (optional)</param>
            <returns>ApiResponse of SearchTemplatesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchTemplatesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find templates by criteria Find user templates by given parameters.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find template by ID(s). (optional)</param>
            <param name="name">Find template by name. (optional)</param>
            <param name="content">Find template by content. (optional)</param>
            <returns>Task of SearchTemplatesPaginatedResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SearchTemplatesAsyncWithHttpInfo(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Find templates by criteria Find user templates by given parameters.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="page">Fetch specified results page. (optional, default to 1)</param>
            <param name="limit">The number of results per page. (optional, default to 10)</param>
            <param name="ids">Find template by ID(s). (optional)</param>
            <param name="name">Find template by name. (optional)</param>
            <param name="content">Find template by content. (optional)</param>
            <returns>Task of ApiResponse (SearchTemplatesPaginatedResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SendMessage(TextMagicClient.Model.SendMessageInputObject)">
            <summary>
            Send message This is the main entrypoint to send messages. See the examples above for the reference.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendMessageInputObject"></param>
            <returns>SendMessageResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SendMessageWithHttpInfo(TextMagicClient.Model.SendMessageInputObject)">
            <summary>
            Send message This is the main entrypoint to send messages. See the examples above for the reference.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendMessageInputObject"></param>
            <returns>ApiResponse of SendMessageResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SendMessageAsync(TextMagicClient.Model.SendMessageInputObject)">
            <summary>
            Send message This is the main entrypoint to send messages. See the examples above for the reference.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendMessageInputObject"></param>
            <returns>Task of SendMessageResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SendMessageAsyncWithHttpInfo(TextMagicClient.Model.SendMessageInputObject)">
            <summary>
            Send message This is the main entrypoint to send messages. See the examples above for the reference.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendMessageInputObject"></param>
            <returns>Task of ApiResponse (SendMessageResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SendPhoneVerificationCodeTFA(TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 1: Send a verification code  Sends a verification code to a specified phone number.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendPhoneVerificationCodeTFAInputObject"></param>
            <returns>SendPhoneVerificationCodeResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SendPhoneVerificationCodeTFAWithHttpInfo(TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 1: Send a verification code  Sends a verification code to a specified phone number.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendPhoneVerificationCodeTFAInputObject"></param>
            <returns>ApiResponse of SendPhoneVerificationCodeResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SendPhoneVerificationCodeTFAAsync(TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 1: Send a verification code  Sends a verification code to a specified phone number.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendPhoneVerificationCodeTFAInputObject"></param>
            <returns>Task of SendPhoneVerificationCodeResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SendPhoneVerificationCodeTFAAsyncWithHttpInfo(TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject)">
            <summary>
            Step 1: Send a verification code  Sends a verification code to a specified phone number.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sendPhoneVerificationCodeTFAInputObject"></param>
            <returns>Task of ApiResponse (SendPhoneVerificationCodeResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SetChatStatus(TextMagicClient.Model.SetChatStatusInputObject)">
            <summary>
            Change chat status Set the status of the chat given by ID.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="setChatStatusInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SetChatStatusWithHttpInfo(TextMagicClient.Model.SetChatStatusInputObject)">
            <summary>
            Change chat status Set the status of the chat given by ID.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="setChatStatusInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SetChatStatusAsync(TextMagicClient.Model.SetChatStatusInputObject)">
            <summary>
            Change chat status Set the status of the chat given by ID.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="setChatStatusInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.SetChatStatusAsyncWithHttpInfo(TextMagicClient.Model.SetChatStatusInputObject)">
            <summary>
            Change chat status Set the status of the chat given by ID.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="setChatStatusInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnblockContact(TextMagicClient.Model.UnblockContactInputObject)">
            <summary>
            Unblock a contact by phone number Unblock a contact by phone number
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnblockContactWithHttpInfo(TextMagicClient.Model.UnblockContactInputObject)">
            <summary>
            Unblock a contact by phone number Unblock a contact by phone number
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnblockContactAsync(TextMagicClient.Model.UnblockContactInputObject)">
            <summary>
            Unblock a contact by phone number Unblock a contact by phone number
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnblockContactAsyncWithHttpInfo(TextMagicClient.Model.UnblockContactInputObject)">
            <summary>
            Unblock a contact by phone number Unblock a contact by phone number
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnblockContactsBulk(TextMagicClient.Model.UnblockContactsBulkInputObject)">
            <summary>
            Unblock contacts (bulk) Unblock several contacts by blocked contact IDs or unblock all contacts.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnblockContactsBulkWithHttpInfo(TextMagicClient.Model.UnblockContactsBulkInputObject)">
            <summary>
            Unblock contacts (bulk) Unblock several contacts by blocked contact IDs or unblock all contacts.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnblockContactsBulkAsync(TextMagicClient.Model.UnblockContactsBulkInputObject)">
            <summary>
            Unblock contacts (bulk) Unblock several contacts by blocked contact IDs or unblock all contacts.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnblockContactsBulkAsyncWithHttpInfo(TextMagicClient.Model.UnblockContactsBulkInputObject)">
            <summary>
            Unblock contacts (bulk) Unblock several contacts by blocked contact IDs or unblock all contacts.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unblockContactsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnmuteChatsBulk(TextMagicClient.Model.UnmuteChatsBulkInputObject)">
            <summary>
            Unmute chats (bulk) Unmute several chats by chat ids or unmute all chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unmuteChatsBulkInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnmuteChatsBulkWithHttpInfo(TextMagicClient.Model.UnmuteChatsBulkInputObject)">
            <summary>
            Unmute chats (bulk) Unmute several chats by chat ids or unmute all chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unmuteChatsBulkInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnmuteChatsBulkAsync(TextMagicClient.Model.UnmuteChatsBulkInputObject)">
            <summary>
            Unmute chats (bulk) Unmute several chats by chat ids or unmute all chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unmuteChatsBulkInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnmuteChatsBulkAsyncWithHttpInfo(TextMagicClient.Model.UnmuteChatsBulkInputObject)">
            <summary>
            Unmute chats (bulk) Unmute several chats by chat ids or unmute all chats.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unmuteChatsBulkInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnsubscribeContact(TextMagicClient.Model.UnsubscribeContactInputObject)">
            <summary>
            Manually unsubscribe a contact &gt; Please note, if you unsubscribe a contact, this action cannot be reversed. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unsubscribeContactInputObject"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnsubscribeContactWithHttpInfo(TextMagicClient.Model.UnsubscribeContactInputObject)">
            <summary>
            Manually unsubscribe a contact &gt; Please note, if you unsubscribe a contact, this action cannot be reversed. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unsubscribeContactInputObject"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnsubscribeContactAsync(TextMagicClient.Model.UnsubscribeContactInputObject)">
            <summary>
            Manually unsubscribe a contact &gt; Please note, if you unsubscribe a contact, this action cannot be reversed. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unsubscribeContactInputObject"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UnsubscribeContactAsyncWithHttpInfo(TextMagicClient.Model.UnsubscribeContactInputObject)">
            <summary>
            Manually unsubscribe a contact &gt; Please note, if you unsubscribe a contact, this action cannot be reversed. 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="unsubscribeContactInputObject"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateBalanceNotificationSettings(TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject)">
            <summary>
            Update balance notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateBalanceNotificationSettingsInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateBalanceNotificationSettingsWithHttpInfo(TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject)">
            <summary>
            Update balance notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateBalanceNotificationSettingsInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateBalanceNotificationSettingsAsync(TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject)">
            <summary>
            Update balance notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateBalanceNotificationSettingsInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateBalanceNotificationSettingsAsyncWithHttpInfo(TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject)">
            <summary>
            Update balance notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateBalanceNotificationSettingsInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCallbackSettings(TextMagicClient.Model.UpdateCallbackSettingsInputObject)">
            <summary>
            Update callback URL settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCallbackSettingsInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCallbackSettingsWithHttpInfo(TextMagicClient.Model.UpdateCallbackSettingsInputObject)">
            <summary>
            Update callback URL settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCallbackSettingsInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCallbackSettingsAsync(TextMagicClient.Model.UpdateCallbackSettingsInputObject)">
            <summary>
            Update callback URL settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCallbackSettingsInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCallbackSettingsAsyncWithHttpInfo(TextMagicClient.Model.UpdateCallbackSettingsInputObject)">
            <summary>
            Update callback URL settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCallbackSettingsInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateChatDesktopNotificationSettings(TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject)">
            <summary>
            Update chat desktop notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateChatDesktopNotificationSettingsInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateChatDesktopNotificationSettingsWithHttpInfo(TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject)">
            <summary>
            Update chat desktop notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateChatDesktopNotificationSettingsInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateChatDesktopNotificationSettingsAsync(TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject)">
            <summary>
            Update chat desktop notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateChatDesktopNotificationSettingsInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateChatDesktopNotificationSettingsAsyncWithHttpInfo(TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject)">
            <summary>
            Update chat desktop notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateChatDesktopNotificationSettingsInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateContact(TextMagicClient.Model.UpdateContactInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateContactWithHttpInfo(TextMagicClient.Model.UpdateContactInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateContactAsync(TextMagicClient.Model.UpdateContactInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateContactAsyncWithHttpInfo(TextMagicClient.Model.UpdateContactInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateContactNote(TextMagicClient.Model.UpdateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateContactNoteWithHttpInfo(TextMagicClient.Model.UpdateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateContactNoteAsync(TextMagicClient.Model.UpdateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateContactNoteAsyncWithHttpInfo(TextMagicClient.Model.UpdateContactNoteInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a contact note 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateContactNoteInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCurrentUser(TextMagicClient.Model.UpdateCurrentUserInputObject)">
            <summary>
            Edit current account info 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCurrentUserInputObject"></param>
            <returns>UpdateCurrentUserResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCurrentUserWithHttpInfo(TextMagicClient.Model.UpdateCurrentUserInputObject)">
            <summary>
            Edit current account info 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCurrentUserInputObject"></param>
            <returns>ApiResponse of UpdateCurrentUserResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCurrentUserAsync(TextMagicClient.Model.UpdateCurrentUserInputObject)">
            <summary>
            Edit current account info 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCurrentUserInputObject"></param>
            <returns>Task of UpdateCurrentUserResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCurrentUserAsyncWithHttpInfo(TextMagicClient.Model.UpdateCurrentUserInputObject)">
            <summary>
            Edit current account info 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCurrentUserInputObject"></param>
            <returns>Task of ApiResponse (UpdateCurrentUserResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCustomField(TextMagicClient.Model.UpdateCustomFieldInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a custom field 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCustomFieldWithHttpInfo(TextMagicClient.Model.UpdateCustomFieldInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a custom field 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCustomFieldAsync(TextMagicClient.Model.UpdateCustomFieldInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a custom field 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCustomFieldAsyncWithHttpInfo(TextMagicClient.Model.UpdateCustomFieldInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit a custom field 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCustomFieldValue(TextMagicClient.Model.UpdateCustomFieldValueInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit the custom field value of a specified contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldValueInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCustomFieldValueWithHttpInfo(TextMagicClient.Model.UpdateCustomFieldValueInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit the custom field value of a specified contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldValueInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCustomFieldValueAsync(TextMagicClient.Model.UpdateCustomFieldValueInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit the custom field value of a specified contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldValueInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateCustomFieldValueAsyncWithHttpInfo(TextMagicClient.Model.UpdateCustomFieldValueInputObject,System.Nullable{System.Int32})">
            <summary>
            Edit the custom field value of a specified contact 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateCustomFieldValueInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateInboundMessagesNotificationSettings(TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject)">
            <summary>
            Update inbound messages notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateInboundMessagesNotificationSettingsInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateInboundMessagesNotificationSettingsWithHttpInfo(TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject)">
            <summary>
            Update inbound messages notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateInboundMessagesNotificationSettingsInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateInboundMessagesNotificationSettingsAsync(TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject)">
            <summary>
            Update inbound messages notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateInboundMessagesNotificationSettingsInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateInboundMessagesNotificationSettingsAsyncWithHttpInfo(TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject)">
            <summary>
            Update inbound messages notification settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateInboundMessagesNotificationSettingsInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateList(System.Nullable{System.Int32},TextMagicClient.Model.UpdateListObject)">
            <summary>
            Edit a list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="updateListObject"> (optional)</param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateListWithHttpInfo(System.Nullable{System.Int32},TextMagicClient.Model.UpdateListObject)">
            <summary>
            Edit a list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="updateListObject"> (optional)</param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateListAsync(System.Nullable{System.Int32},TextMagicClient.Model.UpdateListObject)">
            <summary>
            Edit a list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="updateListObject"> (optional)</param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateListAsyncWithHttpInfo(System.Nullable{System.Int32},TextMagicClient.Model.UpdateListObject)">
            <summary>
            Edit a list 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id"></param>
            <param name="updateListObject"> (optional)</param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateSenderSetting(TextMagicClient.Model.UpdateSenderSettingInputObject)">
            <summary>
            Change sender settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateSenderSettingInputObject"></param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateSenderSettingWithHttpInfo(TextMagicClient.Model.UpdateSenderSettingInputObject)">
            <summary>
            Change sender settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateSenderSettingInputObject"></param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateSenderSettingAsync(TextMagicClient.Model.UpdateSenderSettingInputObject)">
            <summary>
            Change sender settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateSenderSettingInputObject"></param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateSenderSettingAsyncWithHttpInfo(TextMagicClient.Model.UpdateSenderSettingInputObject)">
            <summary>
            Change sender settings 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateSenderSettingInputObject"></param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateTemplate(TextMagicClient.Model.UpdateTemplateInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a template 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateTemplateInputObject"></param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateTemplateWithHttpInfo(TextMagicClient.Model.UpdateTemplateInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a template 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateTemplateInputObject"></param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateTemplateAsync(TextMagicClient.Model.UpdateTemplateInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a template 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateTemplateInputObject"></param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UpdateTemplateAsyncWithHttpInfo(TextMagicClient.Model.UpdateTemplateInputObject,System.Nullable{System.Int32})">
            <summary>
            Update a template 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="updateTemplateInputObject"></param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadAvatar(System.IO.Stream)">
            <summary>
            Upload an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">User avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadAvatarWithHttpInfo(System.IO.Stream)">
            <summary>
            Upload an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">User avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadAvatarAsync(System.IO.Stream)">
            <summary>
            Upload an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">User avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <returns>Task of void</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadAvatarAsyncWithHttpInfo(System.IO.Stream)">
            <summary>
            Upload an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">User avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <returns>Task of ApiResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadContactAvatar(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Upload an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">Contact avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadContactAvatarWithHttpInfo(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Upload an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">Contact avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadContactAvatarAsync(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Upload an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">Contact avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadContactAvatarAsyncWithHttpInfo(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Upload an avatar 
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">Contact avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadListAvatar(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Add an avatar for a list Add an avatar for a list
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">List avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadListAvatarWithHttpInfo(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Add an avatar for a list Add an avatar for a list
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">List avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>ApiResponse of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadListAvatarAsync(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Add an avatar for a list Add an avatar for a list
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">List avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>Task of ResourceLinkResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadListAvatarAsyncWithHttpInfo(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Add an avatar for a list Add an avatar for a list
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="image">List avatar. Should be a PNG or JPG file not more than 10 MB.</param>
            <param name="id"></param>
            <returns>Task of ApiResponse (ResourceLinkResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadMessageAttachment(System.IO.Stream)">
            <summary>
            Upload message attachment Upload a new file to insert it as a link.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>UploadMessageAttachmentResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadMessageAttachmentWithHttpInfo(System.IO.Stream)">
            <summary>
            Upload message attachment Upload a new file to insert it as a link.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>ApiResponse of UploadMessageAttachmentResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadMessageAttachmentAsync(System.IO.Stream)">
            <summary>
            Upload message attachment Upload a new file to insert it as a link.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>Task of UploadMessageAttachmentResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadMessageAttachmentAsyncWithHttpInfo(System.IO.Stream)">
            <summary>
            Upload message attachment Upload a new file to insert it as a link.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>Task of ApiResponse (UploadMessageAttachmentResponse)</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadMessageMMSAttachment(System.IO.Stream)">
            <summary>
            Upload message mms attachment Upload a new file to mms.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>UploadMessageAttachmentResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadMessageMMSAttachmentWithHttpInfo(System.IO.Stream)">
            <summary>
            Upload message mms attachment Upload a new file to mms.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>ApiResponse of UploadMessageAttachmentResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadMessageMMSAttachmentAsync(System.IO.Stream)">
            <summary>
            Upload message mms attachment Upload a new file to mms.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>Task of UploadMessageAttachmentResponse</returns>
        </member>
        <member name="M:TextMagicClient.Api.TextMagicApi.UploadMessageMMSAttachmentAsyncWithHttpInfo(System.IO.Stream)">
            <summary>
            Upload message mms attachment Upload a new file to mms.
            </summary>
            <exception cref="T:TextMagicClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="file">Attachment. Supports .jpg, .gif, .png, .pdf, .txt, .csv, .doc, .docx, .xls, .xlsx, .ppt, .pptx &amp; .vcf file formats.</param>
            <returns>Task of ApiResponse (UploadMessageAttachmentResponse)</returns>
        </member>
        <member name="P:TextMagicClient.Api.TextMagicApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:TextMagicClient.Api.TextMagicApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:TextMagicClient.Client.ApiClient">
            <summary>
            API client is mainly responsible for making the HTTP call to the API backend.
            </summary>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Client.ApiClient"/> class
            with default configuration.
            </summary>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.#ctor(TextMagicClient.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Client.ApiClient"/> class
            with default base path (https://rest.textmagic.com).
            </summary>
            <param name="config">An instance of Configuration.</param>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Client.ApiClient"/> class
            with default configuration.
            </summary>
            <param name="basePath">The base path.</param>
        </member>
        <member name="F:TextMagicClient.Client.ApiClient.Default">
            <summary>
            Gets or sets the default API client for making HTTP calls.
            </summary>
            <value>The default API client.</value>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the HTTP request (Sync).
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content Type of the request</param>
            <returns>Object</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the asynchronous HTTP request.
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content type.</param>
            <returns>The Task instance.</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.EscapeString(System.String)">
            <summary>
            Escape string (url-encoded).
            </summary>
            <param name="str">String to be escaped.</param>
            <returns>Escaped string.</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)">
            <summary>
            Create FileParameter based on Stream.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="stream">Input stream.</param>
            <returns>FileParameter.</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.ParameterToString(System.Object)">
            <summary>
            If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime.
            If parameter is a list, join the list with ",".
            Otherwise just return the string.
            </summary>
            <param name="obj">The parameter (header, path, query, form).</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.Deserialize(RestSharp.IRestResponse,System.Type)">
            <summary>
            Deserialize the JSON string into a proper object.
            </summary>
            <param name="response">The HTTP response.</param>
            <param name="type">Object type.</param>
            <returns>Object representation of the JSON string.</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.Serialize(System.Object)">
            <summary>
            Serialize an input (model) into JSON string
            </summary>
            <param name="obj">Object.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.IsJsonMime(System.String)">
             <summary>
            Check if the given MIME is a JSON MIME.
            JSON MIME examples:
                application/json
                application/json; charset=UTF8
                APPLICATION/JSON
                application/vnd.company+json
             </summary>
             <param name="mime">MIME</param>
             <returns>Returns True if MIME type is json.</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.SelectHeaderContentType(System.String[])">
            <summary>
            Select the Content-Type header's value from the given content-type array:
            if JSON type exists in the given array, use it;
            otherwise use the first one defined in 'consumes'
            </summary>
            <param name="contentTypes">The Content-Type array to select from.</param>
            <returns>The Content-Type header to use.</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.SelectHeaderAccept(System.String[])">
            <summary>
            Select the Accept header's value from the given accepts array:
            if JSON exists in the given array, use it;
            otherwise use all of them (joining into a string)
            </summary>
            <param name="accepts">The accepts array to select from.</param>
            <returns>The Accept header to use.</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.Base64Encode(System.String)">
            <summary>
            Encode string in base64 format.
            </summary>
            <param name="text">String to be encoded.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.ConvertType(System.Object,System.Type)">
            <summary>
            Dynamically cast the object into target type.
            </summary>
            <param name="fromObject">Object to be casted</param>
            <param name="toObject">Target type</param>
            <returns>Casted object</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.ReadAsBytes(System.IO.Stream)">
            <summary>
            Convert stream to byte array
            </summary>
            <param name="inputStream">Input stream to be converted</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.UrlEncode(System.String)">
            <summary>
            URL encode a string
            Credit/Ref: https://github.com/restsharp/RestSharp/blob/master/RestSharp/Extensions/StringExtensions.cs#L50
            </summary>
            <param name="input">String to be URL encoded</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.SanitizeFilename(System.String)">
            <summary>
            Sanitize filename by removing the path
            </summary>
            <param name="filename">Filename</param>
            <returns>Filename</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.ParameterToKeyValuePairs(System.String,System.String,System.Object)">
            <summary>
            Convert params to key/value pairs. 
            Use collectionFormat to properly format lists and collections.
            </summary>
            <param name="name">Key name.</param>
            <param name="value">Value object.</param>
            <returns>A list of KeyValuePairs</returns>
        </member>
        <member name="M:TextMagicClient.Client.ApiClient.IsCollection(System.Object)">
            <summary>
            Check if generic object is a collection.
            </summary>
            <param name="value"></param>
            <returns>True if object is a collection type</returns>
        </member>
        <member name="P:TextMagicClient.Client.ApiClient.Configuration">
            <summary>
            Gets or sets an instance of the IReadableConfiguration.
            </summary>
            <value>An instance of the IReadableConfiguration.</value>
            <remarks>
            <see cref="T:TextMagicClient.Client.IReadableConfiguration"/> helps us to avoid modifying possibly global
            configuration values from within a given client. It does not guarantee thread-safety
            of the <see cref="P:TextMagicClient.Client.ApiClient.Configuration"/> instance in any way.
            </remarks>
        </member>
        <member name="P:TextMagicClient.Client.ApiClient.RestClient">
            <summary>
            Gets or sets the RestClient.
            </summary>
            <value>An instance of the RestClient</value>
        </member>
        <member name="T:TextMagicClient.Client.ApiException">
            <summary>
            API Exception
            </summary>
        </member>
        <member name="M:TextMagicClient.Client.ApiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Client.ApiException"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Client.ApiException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
        </member>
        <member name="M:TextMagicClient.Client.ApiException.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
            <param name="errorContent">Error content.</param>
        </member>
        <member name="P:TextMagicClient.Client.ApiException.ErrorCode">
            <summary>
            Gets or sets the error code (HTTP status code)
            </summary>
            <value>The error code (HTTP status code).</value>
        </member>
        <member name="P:TextMagicClient.Client.ApiException.ErrorContent">
            <summary>
            Gets or sets the error content (body json object)
            </summary>
            <value>The error content (Http response body).</value>
        </member>
        <member name="T:TextMagicClient.Client.ApiResponse`1">
            <summary>
            API Response
            </summary>
        </member>
        <member name="M:TextMagicClient.Client.ApiResponse`1.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Client.ApiResponse`1"/> class.
            </summary>
            <param name="statusCode">HTTP status code.</param>
            <param name="headers">HTTP headers.</param>
            <param name="data">Data (parsed HTTP body)</param>
        </member>
        <member name="P:TextMagicClient.Client.ApiResponse`1.StatusCode">
            <summary>
            Gets or sets the status code (HTTP status code)
            </summary>
            <value>The status code.</value>
        </member>
        <member name="P:TextMagicClient.Client.ApiResponse`1.Headers">
            <summary>
            Gets or sets the HTTP headers
            </summary>
            <value>HTTP headers</value>
        </member>
        <member name="P:TextMagicClient.Client.ApiResponse`1.Data">
            <summary>
            Gets or sets the data (parsed HTTP body)
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:TextMagicClient.Client.Configuration">
            <summary>
            Represents a set of configuration settings
            </summary>
        </member>
        <member name="T:TextMagicClient.Client.IReadableConfiguration">
            <summary>
            Represents a readable-only configuration contract.
            </summary>
        </member>
        <member name="M:TextMagicClient.Client.IReadableConfiguration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="P:TextMagicClient.Client.IReadableConfiguration.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>Access token.</value>
        </member>
        <member name="P:TextMagicClient.Client.IReadableConfiguration.ApiKey">
            <summary>
            Gets the API key.
            </summary>
            <value>API key.</value>
        </member>
        <member name="P:TextMagicClient.Client.IReadableConfiguration.ApiKeyPrefix">
            <summary>
            Gets the API key prefix.
            </summary>
            <value>API key prefix.</value>
        </member>
        <member name="P:TextMagicClient.Client.IReadableConfiguration.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>Base path.</value>
        </member>
        <member name="P:TextMagicClient.Client.IReadableConfiguration.DateTimeFormat">
            <summary>
            Gets the date time format.
            </summary>
            <value>Date time foramt.</value>
        </member>
        <member name="P:TextMagicClient.Client.IReadableConfiguration.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <value>Default header.</value>
        </member>
        <member name="P:TextMagicClient.Client.IReadableConfiguration.TempFolderPath">
            <summary>
            Gets the temp folder path.
            </summary>
            <value>Temp folder path.</value>
        </member>
        <member name="P:TextMagicClient.Client.IReadableConfiguration.Timeout">
            <summary>
            Gets the HTTP connection timeout (in milliseconds)
            </summary>
            <value>HTTP connection timeout.</value>
        </member>
        <member name="P:TextMagicClient.Client.IReadableConfiguration.UserAgent">
            <summary>
            Gets the user agent.
            </summary>
            <value>User agent.</value>
        </member>
        <member name="P:TextMagicClient.Client.IReadableConfiguration.Username">
            <summary>
            Gets the username.
            </summary>
            <value>Username.</value>
        </member>
        <member name="P:TextMagicClient.Client.IReadableConfiguration.Password">
            <summary>
            Gets the password.
            </summary>
            <value>Password.</value>
        </member>
        <member name="F:TextMagicClient.Client.Configuration.Version">
            <summary>
            Version of the package.
            </summary>
            <value>Version of the package.</value>
        </member>
        <member name="F:TextMagicClient.Client.Configuration.ISO8601_DATETIME_FORMAT">
            <summary>
            Identifier for ISO 8601 DateTime Format
            </summary>
            <remarks>See https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8 for more information.</remarks>
        </member>
        <member name="F:TextMagicClient.Client.Configuration.DefaultExceptionFactory">
            <summary>
            Default creation of exceptions for a given method name and response object
            </summary>
        </member>
        <member name="F:TextMagicClient.Client.Configuration._apiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="F:TextMagicClient.Client.Configuration._apiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="M:TextMagicClient.Client.Configuration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Client.Configuration"/> class
            </summary>
        </member>
        <member name="M:TextMagicClient.Client.Configuration.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Client.Configuration"/> class
            </summary>
        </member>
        <member name="M:TextMagicClient.Client.Configuration.#ctor(TextMagicClient.Client.ApiClient,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Client.Configuration"/> class with different settings
            </summary>
            <param name="apiClient">Api client</param>
            <param name="defaultHeader">Dictionary of default HTTP header</param>
            <param name="username">Username</param>
            <param name="password">Password</param>
            <param name="accessToken">accessToken</param>
            <param name="apiKey">Dictionary of API key</param>
            <param name="apiKeyPrefix">Dictionary of API key prefix</param>
            <param name="tempFolderPath">Temp folder path</param>
            <param name="dateTimeFormat">DateTime format string</param>
            <param name="timeout">HTTP connection timeout (in milliseconds)</param>
            <param name="userAgent">HTTP user agent</param>
        </member>
        <member name="M:TextMagicClient.Client.Configuration.#ctor(TextMagicClient.Client.ApiClient)">
            <summary>
            Initializes a new instance of the Configuration class.
            </summary>
            <param name="apiClient">Api client.</param>
        </member>
        <member name="M:TextMagicClient.Client.Configuration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="M:TextMagicClient.Client.Configuration.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Client.Configuration.CreateApiClient">
            <summary>
            Creates a new <see cref="P:TextMagicClient.Client.Configuration.ApiClient"/> based on this <see cref="T:TextMagicClient.Client.Configuration"/> instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Client.Configuration.ToDebugReport">
            <summary>
            Returns a string with essential information for debugging.
            </summary>
        </member>
        <member name="M:TextMagicClient.Client.Configuration.AddApiKey(System.String,System.String)">
            <summary>
            Add Api Key Header.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
            <returns></returns>
        </member>
        <member name="M:TextMagicClient.Client.Configuration.AddApiKeyPrefix(System.String,System.String)">
            <summary>
            Sets the API key prefix.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
        </member>
        <member name="P:TextMagicClient.Client.Configuration.Default">
            <summary>
            Gets or sets the default Configuration.
            </summary>
            <value>Configuration.</value>
        </member>
        <member name="P:TextMagicClient.Client.Configuration.ApiClient">
            <summary>
            Gets an instance of an ApiClient for this configuration
            </summary>
        </member>
        <member name="P:TextMagicClient.Client.Configuration.BasePath">
            <summary>
            Gets or sets the base path for API access.
            </summary>
        </member>
        <member name="P:TextMagicClient.Client.Configuration.DefaultHeader">
            <summary>
            Gets or sets the default header.
            </summary>
        </member>
        <member name="P:TextMagicClient.Client.Configuration.Timeout">
            <summary>
            Gets or sets the HTTP timeout (milliseconds) of ApiClient. Default to 100000 milliseconds.
            </summary>
        </member>
        <member name="P:TextMagicClient.Client.Configuration.UserAgent">
            <summary>
            Gets or sets the HTTP user agent.
            </summary>
            <value>Http user agent.</value>
        </member>
        <member name="P:TextMagicClient.Client.Configuration.Username">
            <summary>
            Gets or sets the username (HTTP basic authentication).
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:TextMagicClient.Client.Configuration.Password">
            <summary>
            Gets or sets the password (HTTP basic authentication).
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:TextMagicClient.Client.Configuration.AccessToken">
            <summary>
            Gets or sets the access token for OAuth2 authentication.
            </summary>
            <value>The access token.</value>
        </member>
        <member name="P:TextMagicClient.Client.Configuration.TempFolderPath">
            <summary>
            Gets or sets the temporary folder path to store the files downloaded from the server.
            </summary>
            <value>Folder path.</value>
        </member>
        <member name="P:TextMagicClient.Client.Configuration.DateTimeFormat">
            <summary>
            Gets or sets the the date time format used when serializing in the ApiClient
            By default, it's set to ISO 8601 - "o", for others see:
            https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx
            and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx
            No validation is done to ensure that the string you're providing is valid
            </summary>
            <value>The DateTimeFormat string</value>
        </member>
        <member name="P:TextMagicClient.Client.Configuration.ApiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="P:TextMagicClient.Client.Configuration.ApiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="T:TextMagicClient.Client.ExceptionFactory">
            <summary>
            A delegate to ExceptionFactory method
            </summary>
            <param name="methodName">Method name</param>
            <param name="response">Response</param>
            <returns>Exceptions</returns>
        </member>
        <member name="T:TextMagicClient.Client.GlobalConfiguration">
            <summary>
            <see cref="T:TextMagicClient.Client.GlobalConfiguration"/> provides a compile-time extension point for globally configuring
            API Clients.
            </summary>
            <remarks>
            A customized implementation via partial class may reside in another file and may
            be excluded from automatic generation via a .swagger-codegen-ignore file.
            </remarks>
        </member>
        <member name="T:TextMagicClient.Client.SwaggerDateConverter">
            <summary>
            Formatter for 'date' swagger formats ss defined by full-date - RFC3339
            see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
            </summary>
        </member>
        <member name="M:TextMagicClient.Client.SwaggerDateConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Client.SwaggerDateConverter"/> class.
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.AssignContactsToListInputObject">
            <summary>
            AssignContactsToListInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.AssignContactsToListInputObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.AssignContactsToListInputObject"/> class.
            </summary>
            <param name="contacts">Comma-separated array of [Contacts](https://docs.textmagic.com/#tag/Contacts) IDs..</param>
        </member>
        <member name="M:TextMagicClient.Model.AssignContactsToListInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.AssignContactsToListInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.AssignContactsToListInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.AssignContactsToListInputObject.Equals(TextMagicClient.Model.AssignContactsToListInputObject)">
            <summary>
            Returns true if AssignContactsToListInputObject instances are equal
            </summary>
            <param name="input">Instance of AssignContactsToListInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.AssignContactsToListInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.AssignContactsToListInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.AssignContactsToListInputObject.Contacts">
            <summary>
            Comma-separated array of [Contacts](https://docs.textmagic.com/#tag/Contacts) IDs.
            </summary>
            <value>Comma-separated array of [Contacts](https://docs.textmagic.com/#tag/Contacts) IDs.</value>
        </member>
        <member name="T:TextMagicClient.Model.BadRequestResponse">
            <summary>
            Returned when input data validation process has been failed.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.BadRequestResponse.#ctor(System.Nullable{System.Int32},System.String,TextMagicClient.Model.BadRequestResponseErrors)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.BadRequestResponse"/> class.
            </summary>
            <param name="code">Error code. Meanings of error codes are similar to [HTTP response codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes)..</param>
            <param name="message">Brief error message. You could display this message to your user or save it in a log..</param>
            <param name="errors">errors.</param>
        </member>
        <member name="M:TextMagicClient.Model.BadRequestResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.BadRequestResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.BadRequestResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.BadRequestResponse.Equals(TextMagicClient.Model.BadRequestResponse)">
            <summary>
            Returns true if BadRequestResponse instances are equal
            </summary>
            <param name="input">Instance of BadRequestResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.BadRequestResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.BadRequestResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.BadRequestResponse.Code">
            <summary>
            Error code. Meanings of error codes are similar to [HTTP response codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes).
            </summary>
            <value>Error code. Meanings of error codes are similar to [HTTP response codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes).</value>
        </member>
        <member name="P:TextMagicClient.Model.BadRequestResponse.Message">
            <summary>
            Brief error message. You could display this message to your user or save it in a log.
            </summary>
            <value>Brief error message. You could display this message to your user or save it in a log.</value>
        </member>
        <member name="P:TextMagicClient.Model.BadRequestResponse.Errors">
            <summary>
            Gets or Sets Errors
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.BadRequestResponseErrors">
            <summary>
            If it was a **POST** or **PUT** request (and the **message** returned is &#x60;Validation Failed&#x60;), this field may contain **errors** that describe the errors grouped by the input parameter name. 
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.BadRequestResponseErrors.#ctor(System.Collections.Generic.List{System.String},System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.BadRequestResponseErrors"/> class.
            </summary>
            <param name="common">Array of messages with errors related to the entire request. For example, you did not specify either the **text** or the **templateId** when [sending the message](https://docs.textmagic.com/#tag/Outbound-Messages). .</param>
            <param name="fields">Associative array. The keys are the POST/PUT parameter names and the values are arrays with error messages for these parameters. .</param>
        </member>
        <member name="M:TextMagicClient.Model.BadRequestResponseErrors.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.BadRequestResponseErrors.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.BadRequestResponseErrors.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.BadRequestResponseErrors.Equals(TextMagicClient.Model.BadRequestResponseErrors)">
            <summary>
            Returns true if BadRequestResponseErrors instances are equal
            </summary>
            <param name="input">Instance of BadRequestResponseErrors to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.BadRequestResponseErrors.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.BadRequestResponseErrors.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.BadRequestResponseErrors.Common">
            <summary>
            Array of messages with errors related to the entire request. For example, you did not specify either the **text** or the **templateId** when [sending the message](https://docs.textmagic.com/#tag/Outbound-Messages). 
            </summary>
            <value>Array of messages with errors related to the entire request. For example, you did not specify either the **text** or the **templateId** when [sending the message](https://docs.textmagic.com/#tag/Outbound-Messages). </value>
        </member>
        <member name="P:TextMagicClient.Model.BadRequestResponseErrors.Fields">
            <summary>
            Associative array. The keys are the POST/PUT parameter names and the values are arrays with error messages for these parameters. 
            </summary>
            <value>Associative array. The keys are the POST/PUT parameter names and the values are arrays with error messages for these parameters. </value>
        </member>
        <member name="T:TextMagicClient.Model.BlockContactInputObject">
            <summary>
            BlockContactInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.BlockContactInputObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.BlockContactInputObject"/> class.
            </summary>
            <param name="phone">Contact phone number..</param>
        </member>
        <member name="M:TextMagicClient.Model.BlockContactInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.BlockContactInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.BlockContactInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.BlockContactInputObject.Equals(TextMagicClient.Model.BlockContactInputObject)">
            <summary>
            Returns true if BlockContactInputObject instances are equal
            </summary>
            <param name="input">Instance of BlockContactInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.BlockContactInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.BlockContactInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.BlockContactInputObject.Phone">
            <summary>
            Contact phone number.
            </summary>
            <value>Contact phone number.</value>
        </member>
        <member name="T:TextMagicClient.Model.BulkSession">
            <summary>
            BulkSession
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.BulkSession.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.BulkSession"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.BulkSession.#ctor(System.Nullable{System.Int32},TextMagicClient.Model.BulkSession.StatusEnum,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},TextMagicClient.Model.MessageSession,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.BulkSession"/> class.
            </summary>
            <param name="id">Bulk Session ID. (required).</param>
            <param name="status">* **n** – bulk session is just created * **w** - work in progress * **f** - failed * **c** - completed with success * **s** - suspended  (required).</param>
            <param name="itemsProcessed">Amount of messages already processed. (required).</param>
            <param name="itemsTotal">Total amount of messages to be processed. (required).</param>
            <param name="createdAt">Creation date and time of a Bulk Session. (required).</param>
            <param name="session">session (required).</param>
            <param name="text">Message text of a Bulk Session. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.BulkSession.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.BulkSession.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.BulkSession.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.BulkSession.Equals(TextMagicClient.Model.BulkSession)">
            <summary>
            Returns true if BulkSession instances are equal
            </summary>
            <param name="input">Instance of BulkSession to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.BulkSession.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.BulkSession.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.BulkSession.Status">
            <summary>
            * **n** – bulk session is just created * **w** - work in progress * **f** - failed * **c** - completed with success * **s** - suspended 
            </summary>
            <value>* **n** – bulk session is just created * **w** - work in progress * **f** - failed * **c** - completed with success * **s** - suspended </value>
        </member>
        <member name="P:TextMagicClient.Model.BulkSession.Id">
            <summary>
            Bulk Session ID.
            </summary>
            <value>Bulk Session ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.BulkSession.ItemsProcessed">
            <summary>
            Amount of messages already processed.
            </summary>
            <value>Amount of messages already processed.</value>
        </member>
        <member name="P:TextMagicClient.Model.BulkSession.ItemsTotal">
            <summary>
            Total amount of messages to be processed.
            </summary>
            <value>Total amount of messages to be processed.</value>
        </member>
        <member name="P:TextMagicClient.Model.BulkSession.CreatedAt">
            <summary>
            Creation date and time of a Bulk Session.
            </summary>
            <value>Creation date and time of a Bulk Session.</value>
        </member>
        <member name="P:TextMagicClient.Model.BulkSession.Session">
            <summary>
            Gets or Sets Session
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.BulkSession.Text">
            <summary>
            Message text of a Bulk Session.
            </summary>
            <value>Message text of a Bulk Session.</value>
        </member>
        <member name="T:TextMagicClient.Model.BulkSession.StatusEnum">
            <summary>
            * **n** – bulk session is just created * **w** - work in progress * **f** - failed * **c** - completed with success * **s** - suspended 
            </summary>
            <value>* **n** – bulk session is just created * **w** - work in progress * **f** - failed * **c** - completed with success * **s** - suspended </value>
        </member>
        <member name="F:TextMagicClient.Model.BulkSession.StatusEnum.N">
            <summary>
            Enum N for value: n
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.BulkSession.StatusEnum.W">
            <summary>
            Enum W for value: w
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.BulkSession.StatusEnum.F">
            <summary>
            Enum F for value: f
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.BulkSession.StatusEnum.C">
            <summary>
            Enum C for value: c
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.BulkSession.StatusEnum.S">
            <summary>
            Enum S for value: s
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.BuyDedicatedNumberInputObject">
            <summary>
            BuyDedicatedNumberInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.BuyDedicatedNumberInputObject.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.BuyDedicatedNumberInputObject"/> class.
            </summary>
            <param name="phone">Dedicated phone number..</param>
            <param name="country">Country code phone number..</param>
            <param name="userId">Assigned dedicated number. This number will be available for this account only. You cannot transfer numbers between sub-accounts. .</param>
        </member>
        <member name="M:TextMagicClient.Model.BuyDedicatedNumberInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.BuyDedicatedNumberInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.BuyDedicatedNumberInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.BuyDedicatedNumberInputObject.Equals(TextMagicClient.Model.BuyDedicatedNumberInputObject)">
            <summary>
            Returns true if BuyDedicatedNumberInputObject instances are equal
            </summary>
            <param name="input">Instance of BuyDedicatedNumberInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.BuyDedicatedNumberInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.BuyDedicatedNumberInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.BuyDedicatedNumberInputObject.Phone">
            <summary>
            Dedicated phone number.
            </summary>
            <value>Dedicated phone number.</value>
        </member>
        <member name="P:TextMagicClient.Model.BuyDedicatedNumberInputObject.Country">
            <summary>
            Country code phone number.
            </summary>
            <value>Country code phone number.</value>
        </member>
        <member name="P:TextMagicClient.Model.BuyDedicatedNumberInputObject.UserId">
            <summary>
            Assigned dedicated number. This number will be available for this account only. You cannot transfer numbers between sub-accounts. 
            </summary>
            <value>Assigned dedicated number. This number will be available for this account only. You cannot transfer numbers between sub-accounts. </value>
        </member>
        <member name="T:TextMagicClient.Model.CallPriceResponse">
            <summary>
            CallPriceResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.CallPriceResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.CallPriceResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.CallPriceResponse.#ctor(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.CallPriceResponse"/> class.
            </summary>
            <param name="outbound">Price for outbound message. (required).</param>
            <param name="inbound">Price for inbound message. (required).</param>
            <param name="forward">Price for forward. (required).</param>
            <param name="country">The 2-letter ISO country code for local phone numbers, used when local is  set to true. Default is account country. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.CallPriceResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CallPriceResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CallPriceResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CallPriceResponse.Equals(TextMagicClient.Model.CallPriceResponse)">
            <summary>
            Returns true if CallPriceResponse instances are equal
            </summary>
            <param name="input">Instance of CallPriceResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CallPriceResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.CallPriceResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.CallPriceResponse.Outbound">
            <summary>
            Price for outbound message.
            </summary>
            <value>Price for outbound message.</value>
        </member>
        <member name="P:TextMagicClient.Model.CallPriceResponse.Inbound">
            <summary>
            Price for inbound message.
            </summary>
            <value>Price for inbound message.</value>
        </member>
        <member name="P:TextMagicClient.Model.CallPriceResponse.Forward">
            <summary>
            Price for forward.
            </summary>
            <value>Price for forward.</value>
        </member>
        <member name="P:TextMagicClient.Model.CallPriceResponse.Country">
            <summary>
            The 2-letter ISO country code for local phone numbers, used when local is  set to true. Default is account country.
            </summary>
            <value>The 2-letter ISO country code for local phone numbers, used when local is  set to true. Default is account country.</value>
        </member>
        <member name="T:TextMagicClient.Model.Chat">
            <summary>
            Chat
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Chat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Chat"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Chat.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,TextMagicClient.Model.Contact,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},TextMagicClient.Model.Chat.StatusEnum,System.Nullable{System.Int32},System.String,TextMagicClient.Model.Chat.DirectionEnum,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},TextMagicClient.Model.Country,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Chat"/> class.
            </summary>
            <param name="id">Chat ID. (required).</param>
            <param name="originalId">originalId (required).</param>
            <param name="phone">Chat partner's phone number. (required).</param>
            <param name="contact">contact (required).</param>
            <param name="unsubscribedContactId">If this field has a value, it means that the chat phone number has been unsubscribed from you and this value is an ID of an Unsubscribed contact entity. See [Get all unsubscribed contacts](https://docs.textmagic.com/#operation/getUnsubscribers). (required).</param>
            <param name="unread">Total unread incoming messages. (required).</param>
            <param name="updatedAt">Time when the last incoming message arrived at this chat. (required).</param>
            <param name="status">Chat status:   * **a** - Active;   * **c** - Closed;   * **d** - Deleted.  (required).</param>
            <param name="mute">Indicates when the chat is muted. (required).</param>
            <param name="lastMessage">The last message content of a chat. (required).</param>
            <param name="direction">Last message type: * **ci** - incoming call; * **co** - outgoing call; * **i** - incoming message; * **o** - outgoing message.  (required).</param>
            <param name="from">If filled, the value will be used as a sender number for all outgoing messages of a chat. (required).</param>
            <param name="mutedUntil">Date and time until the chat will be muted. (required).</param>
            <param name="timeLeftMute">Time left untill the chat will be unmuted (seconds). (required).</param>
            <param name="country">country (required).</param>
            <param name="pinned">Indicates when the chat is pinned. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.Chat.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Chat.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Chat.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Chat.Equals(TextMagicClient.Model.Chat)">
            <summary>
            Returns true if Chat instances are equal
            </summary>
            <param name="input">Instance of Chat to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Chat.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.Chat.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.Chat.Status">
            <summary>
            Chat status:   * **a** - Active;   * **c** - Closed;   * **d** - Deleted. 
            </summary>
            <value>Chat status:   * **a** - Active;   * **c** - Closed;   * **d** - Deleted. </value>
        </member>
        <member name="P:TextMagicClient.Model.Chat.Direction">
            <summary>
            Last message type: * **ci** - incoming call; * **co** - outgoing call; * **i** - incoming message; * **o** - outgoing message. 
            </summary>
            <value>Last message type: * **ci** - incoming call; * **co** - outgoing call; * **i** - incoming message; * **o** - outgoing message. </value>
        </member>
        <member name="P:TextMagicClient.Model.Chat.Id">
            <summary>
            Chat ID.
            </summary>
            <value>Chat ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.Chat.OriginalId">
            <summary>
            Gets or Sets OriginalId
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.Chat.Phone">
            <summary>
            Chat partner&#39;s phone number.
            </summary>
            <value>Chat partner&#39;s phone number.</value>
        </member>
        <member name="P:TextMagicClient.Model.Chat.Contact">
            <summary>
            Gets or Sets Contact
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.Chat.UnsubscribedContactId">
            <summary>
            If this field has a value, it means that the chat phone number has been unsubscribed from you and this value is an ID of an Unsubscribed contact entity. See [Get all unsubscribed contacts](https://docs.textmagic.com/#operation/getUnsubscribers).
            </summary>
            <value>If this field has a value, it means that the chat phone number has been unsubscribed from you and this value is an ID of an Unsubscribed contact entity. See [Get all unsubscribed contacts](https://docs.textmagic.com/#operation/getUnsubscribers).</value>
        </member>
        <member name="P:TextMagicClient.Model.Chat.Unread">
            <summary>
            Total unread incoming messages.
            </summary>
            <value>Total unread incoming messages.</value>
        </member>
        <member name="P:TextMagicClient.Model.Chat.UpdatedAt">
            <summary>
            Time when the last incoming message arrived at this chat.
            </summary>
            <value>Time when the last incoming message arrived at this chat.</value>
        </member>
        <member name="P:TextMagicClient.Model.Chat.Mute">
            <summary>
            Indicates when the chat is muted.
            </summary>
            <value>Indicates when the chat is muted.</value>
        </member>
        <member name="P:TextMagicClient.Model.Chat.LastMessage">
            <summary>
            The last message content of a chat.
            </summary>
            <value>The last message content of a chat.</value>
        </member>
        <member name="P:TextMagicClient.Model.Chat.From">
            <summary>
            If filled, the value will be used as a sender number for all outgoing messages of a chat.
            </summary>
            <value>If filled, the value will be used as a sender number for all outgoing messages of a chat.</value>
        </member>
        <member name="P:TextMagicClient.Model.Chat.MutedUntil">
            <summary>
            Date and time until the chat will be muted.
            </summary>
            <value>Date and time until the chat will be muted.</value>
        </member>
        <member name="P:TextMagicClient.Model.Chat.TimeLeftMute">
            <summary>
            Time left untill the chat will be unmuted (seconds).
            </summary>
            <value>Time left untill the chat will be unmuted (seconds).</value>
        </member>
        <member name="P:TextMagicClient.Model.Chat.Country">
            <summary>
            Gets or Sets Country
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.Chat.Pinned">
            <summary>
            Indicates when the chat is pinned.
            </summary>
            <value>Indicates when the chat is pinned.</value>
        </member>
        <member name="T:TextMagicClient.Model.Chat.StatusEnum">
            <summary>
            Chat status:   * **a** - Active;   * **c** - Closed;   * **d** - Deleted. 
            </summary>
            <value>Chat status:   * **a** - Active;   * **c** - Closed;   * **d** - Deleted. </value>
        </member>
        <member name="F:TextMagicClient.Model.Chat.StatusEnum.A">
            <summary>
            Enum A for value: a
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.Chat.StatusEnum.C">
            <summary>
            Enum C for value: c
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.Chat.StatusEnum.D">
            <summary>
            Enum D for value: d
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.Chat.DirectionEnum">
            <summary>
            Last message type: * **ci** - incoming call; * **co** - outgoing call; * **i** - incoming message; * **o** - outgoing message. 
            </summary>
            <value>Last message type: * **ci** - incoming call; * **co** - outgoing call; * **i** - incoming message; * **o** - outgoing message. </value>
        </member>
        <member name="F:TextMagicClient.Model.Chat.DirectionEnum.Ci">
            <summary>
            Enum Ci for value: ci
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.Chat.DirectionEnum.Co">
            <summary>
            Enum Co for value: co
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.Chat.DirectionEnum.I">
            <summary>
            Enum I for value: i
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.Chat.DirectionEnum.O">
            <summary>
            Enum O for value: o
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject">
            <summary>
            CheckPhoneVerificationCodeTFAInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject"/> class.
            </summary>
            <param name="code">Verification code received by the user and entered into the form field..</param>
            <param name="verifyId">VerifyId from Step 1 to match both requests together..</param>
        </member>
        <member name="M:TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject.Equals(TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject)">
            <summary>
            Returns true if CheckPhoneVerificationCodeTFAInputObject instances are equal
            </summary>
            <param name="input">Instance of CheckPhoneVerificationCodeTFAInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject.Code">
            <summary>
            Verification code received by the user and entered into the form field.
            </summary>
            <value>Verification code received by the user and entered into the form field.</value>
        </member>
        <member name="P:TextMagicClient.Model.CheckPhoneVerificationCodeTFAInputObject.VerifyId">
            <summary>
            VerifyId from Step 1 to match both requests together.
            </summary>
            <value>VerifyId from Step 1 to match both requests together.</value>
        </member>
        <member name="T:TextMagicClient.Model.ClearAndAssignContactsToListInputObject">
            <summary>
            ClearAndAssignContactsToListInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.ClearAndAssignContactsToListInputObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.ClearAndAssignContactsToListInputObject"/> class.
            </summary>
            <param name="contacts">Contact ID(s), separated by a comma or \"all\" to add all contacts belonging to the current user..</param>
        </member>
        <member name="M:TextMagicClient.Model.ClearAndAssignContactsToListInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.ClearAndAssignContactsToListInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.ClearAndAssignContactsToListInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.ClearAndAssignContactsToListInputObject.Equals(TextMagicClient.Model.ClearAndAssignContactsToListInputObject)">
            <summary>
            Returns true if ClearAndAssignContactsToListInputObject instances are equal
            </summary>
            <param name="input">Instance of ClearAndAssignContactsToListInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.ClearAndAssignContactsToListInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.ClearAndAssignContactsToListInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.ClearAndAssignContactsToListInputObject.Contacts">
            <summary>
            Contact ID(s), separated by a comma or \&quot;all\&quot; to add all contacts belonging to the current user.
            </summary>
            <value>Contact ID(s), separated by a comma or \&quot;all\&quot; to add all contacts belonging to the current user.</value>
        </member>
        <member name="T:TextMagicClient.Model.CloseChatsBulkInputObject">
            <summary>
            CloseChatsBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.CloseChatsBulkInputObject.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.CloseChatsBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Entity ID(s), separated by comma..</param>
        </member>
        <member name="M:TextMagicClient.Model.CloseChatsBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CloseChatsBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CloseChatsBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CloseChatsBulkInputObject.Equals(TextMagicClient.Model.CloseChatsBulkInputObject)">
            <summary>
            Returns true if CloseChatsBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of CloseChatsBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CloseChatsBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.CloseChatsBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.CloseChatsBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.CloseChatsBulkInputObject.All">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="T:TextMagicClient.Model.Contact">
            <summary>
            Contact
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Contact.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Contact"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Contact.#ctor(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,TextMagicClient.Model.Country,System.Collections.Generic.List{TextMagicClient.Model.ContactCustomField},TextMagicClient.Model.User,System.Collections.Generic.List{TextMagicClient.Model.List},System.String,TextMagicClient.Model.ContactImage,System.Collections.Generic.List{TextMagicClient.Model.ContactNote})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Contact"/> class.
            </summary>
            <param name="id">Contact ID. (required).</param>
            <param name="favorited">Is the Contact favorite? [Favorite list](https://docs.textmagic.com/#operation/getFavorites). (required).</param>
            <param name="blocked">Is the Contact blocked? [Blocked contacts](https://docs.textmagic.com/#operation/getBlockedContacts). (required).</param>
            <param name="firstName">Contact first name. (required).</param>
            <param name="lastName">Contact last name. (required).</param>
            <param name="companyName">Company name. (required).</param>
            <param name="phone">Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164). (required).</param>
            <param name="email">Contact email address. (required).</param>
            <param name="country">Contact country. (required).</param>
            <param name="customFields">See the [Custom Fields](https://docs.textmagic.com/#tag/Custom-Fields) section. (required).</param>
            <param name="user">user (required).</param>
            <param name="lists">lists (required).</param>
            <param name="phoneType">Phone number type: * **0** if it is fixed-line; * **1** if it is mobile; * **2** if it is mobile or fixed-line (in case we cannot distingush between fixed-line or mobile); * **3** if it is toll-free; * **4** if it is a premium rate phone; * **5** if it is a shared cost phone; * **6** if it is a VoIP; * **7** if it is a [Personal Number](); * **8** if it is a pager; * **9** if it is a Universal Access Number; * **10** if the phone type is unknown; * **-1** if the phone type is not yet processed or cannot be determined.  (required).</param>
            <param name="avatar">avatar (required).</param>
            <param name="notes">notes (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.Contact.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Contact.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Contact.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Contact.Equals(TextMagicClient.Model.Contact)">
            <summary>
            Returns true if Contact instances are equal
            </summary>
            <param name="input">Instance of Contact to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Contact.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.Contact.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.Contact.Id">
            <summary>
            Contact ID.
            </summary>
            <value>Contact ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.Contact.Favorited">
            <summary>
            Is the Contact favorite? [Favorite list](https://docs.textmagic.com/#operation/getFavorites).
            </summary>
            <value>Is the Contact favorite? [Favorite list](https://docs.textmagic.com/#operation/getFavorites).</value>
        </member>
        <member name="P:TextMagicClient.Model.Contact.Blocked">
            <summary>
            Is the Contact blocked? [Blocked contacts](https://docs.textmagic.com/#operation/getBlockedContacts).
            </summary>
            <value>Is the Contact blocked? [Blocked contacts](https://docs.textmagic.com/#operation/getBlockedContacts).</value>
        </member>
        <member name="P:TextMagicClient.Model.Contact.FirstName">
            <summary>
            Contact first name.
            </summary>
            <value>Contact first name.</value>
        </member>
        <member name="P:TextMagicClient.Model.Contact.LastName">
            <summary>
            Contact last name.
            </summary>
            <value>Contact last name.</value>
        </member>
        <member name="P:TextMagicClient.Model.Contact.CompanyName">
            <summary>
            Company name.
            </summary>
            <value>Company name.</value>
        </member>
        <member name="P:TextMagicClient.Model.Contact.Phone">
            <summary>
            Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
            </summary>
            <value>Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).</value>
        </member>
        <member name="P:TextMagicClient.Model.Contact.Email">
            <summary>
            Contact email address.
            </summary>
            <value>Contact email address.</value>
        </member>
        <member name="P:TextMagicClient.Model.Contact.Country">
            <summary>
            Contact country.
            </summary>
            <value>Contact country.</value>
        </member>
        <member name="P:TextMagicClient.Model.Contact.CustomFields">
            <summary>
            See the [Custom Fields](https://docs.textmagic.com/#tag/Custom-Fields) section.
            </summary>
            <value>See the [Custom Fields](https://docs.textmagic.com/#tag/Custom-Fields) section.</value>
        </member>
        <member name="P:TextMagicClient.Model.Contact.User">
            <summary>
            Gets or Sets User
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.Contact.Lists">
            <summary>
            Gets or Sets Lists
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.Contact.PhoneType">
            <summary>
            Phone number type: * **0** if it is fixed-line; * **1** if it is mobile; * **2** if it is mobile or fixed-line (in case we cannot distingush between fixed-line or mobile); * **3** if it is toll-free; * **4** if it is a premium rate phone; * **5** if it is a shared cost phone; * **6** if it is a VoIP; * **7** if it is a [Personal Number](); * **8** if it is a pager; * **9** if it is a Universal Access Number; * **10** if the phone type is unknown; * **-1** if the phone type is not yet processed or cannot be determined. 
            </summary>
            <value>Phone number type: * **0** if it is fixed-line; * **1** if it is mobile; * **2** if it is mobile or fixed-line (in case we cannot distingush between fixed-line or mobile); * **3** if it is toll-free; * **4** if it is a premium rate phone; * **5** if it is a shared cost phone; * **6** if it is a VoIP; * **7** if it is a [Personal Number](); * **8** if it is a pager; * **9** if it is a Universal Access Number; * **10** if the phone type is unknown; * **-1** if the phone type is not yet processed or cannot be determined. </value>
        </member>
        <member name="P:TextMagicClient.Model.Contact.Avatar">
            <summary>
            Gets or Sets Avatar
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.Contact.Notes">
            <summary>
            Gets or Sets Notes
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.ContactCustomField">
            <summary>
            ContactCustomField
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.ContactCustomField.#ctor(System.String,TextMagicClient.Model.UserCustomField)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.ContactCustomField"/> class.
            </summary>
            <param name="value">value.</param>
            <param name="userCustomField">userCustomField.</param>
        </member>
        <member name="M:TextMagicClient.Model.ContactCustomField.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.ContactCustomField.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.ContactCustomField.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.ContactCustomField.Equals(TextMagicClient.Model.ContactCustomField)">
            <summary>
            Returns true if ContactCustomField instances are equal
            </summary>
            <param name="input">Instance of ContactCustomField to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.ContactCustomField.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.ContactCustomField.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.ContactCustomField.Value">
            <summary>
            Gets or Sets Value
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.ContactCustomField.UserCustomField">
            <summary>
            Gets or Sets UserCustomField
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.ContactImage">
            <summary>
            ContactImage
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.ContactImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.ContactImage"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.ContactImage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.ContactImage"/> class.
            </summary>
            <param name="href">The URI of a contact avatar. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.ContactImage.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.ContactImage.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.ContactImage.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.ContactImage.Equals(TextMagicClient.Model.ContactImage)">
            <summary>
            Returns true if ContactImage instances are equal
            </summary>
            <param name="input">Instance of ContactImage to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.ContactImage.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.ContactImage.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.ContactImage.Href">
            <summary>
            The URI of a contact avatar.
            </summary>
            <value>The URI of a contact avatar.</value>
        </member>
        <member name="T:TextMagicClient.Model.ContactNote">
            <summary>
            ContactNote
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.ContactNote.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.ContactNote"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.ContactNote.#ctor(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,TextMagicClient.Model.User)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.ContactNote"/> class.
            </summary>
            <param name="id">Contact note ID. (required).</param>
            <param name="createdAt">Contact note creation time. (required).</param>
            <param name="note">Contact note text. (required).</param>
            <param name="user">user (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.ContactNote.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.ContactNote.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.ContactNote.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.ContactNote.Equals(TextMagicClient.Model.ContactNote)">
            <summary>
            Returns true if ContactNote instances are equal
            </summary>
            <param name="input">Instance of ContactNote to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.ContactNote.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.ContactNote.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.ContactNote.Id">
            <summary>
            Contact note ID.
            </summary>
            <value>Contact note ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.ContactNote.CreatedAt">
            <summary>
            Contact note creation time.
            </summary>
            <value>Contact note creation time.</value>
        </member>
        <member name="P:TextMagicClient.Model.ContactNote.Note">
            <summary>
            Contact note text.
            </summary>
            <value>Contact note text.</value>
        </member>
        <member name="P:TextMagicClient.Model.ContactNote.User">
            <summary>
            Gets or Sets User
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.Conversation">
            <summary>
            Conversation
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Conversation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Conversation"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Conversation.#ctor(System.Nullable{System.Int32},TextMagicClient.Model.Conversation.DirectionEnum,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Conversation"/> class.
            </summary>
            <param name="id">id (required).</param>
            <param name="direction">Message type: inbound or outbound.  (required).</param>
            <param name="sender">Sender phone number. (required).</param>
            <param name="messageTime">Time when  the message arrived at TextMagic. (required).</param>
            <param name="text">Message text. (required).</param>
            <param name="receiver">Receiver's phone number. (required).</param>
            <param name="status">Message status (for chats outbound only). See [message delivery statuses](https://docs.textmagic.com/#section/Delivery-status-codes) for details. (required).</param>
            <param name="firstName">Contact first name. (required).</param>
            <param name="lastName">Contact last name. (required).</param>
            <param name="sessionId">Session ID of a message. See [message sessions](https://docs.textmagic.com/#tag/Outbound-Message-Sessions) for details. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.Conversation.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Conversation.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Conversation.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Conversation.Equals(TextMagicClient.Model.Conversation)">
            <summary>
            Returns true if Conversation instances are equal
            </summary>
            <param name="input">Instance of Conversation to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Conversation.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.Conversation.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.Conversation.Direction">
            <summary>
            Message type: inbound or outbound. 
            </summary>
            <value>Message type: inbound or outbound. </value>
        </member>
        <member name="P:TextMagicClient.Model.Conversation.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.Conversation.Sender">
            <summary>
            Sender phone number.
            </summary>
            <value>Sender phone number.</value>
        </member>
        <member name="P:TextMagicClient.Model.Conversation.MessageTime">
            <summary>
            Time when  the message arrived at TextMagic.
            </summary>
            <value>Time when  the message arrived at TextMagic.</value>
        </member>
        <member name="P:TextMagicClient.Model.Conversation.Text">
            <summary>
            Message text.
            </summary>
            <value>Message text.</value>
        </member>
        <member name="P:TextMagicClient.Model.Conversation.Receiver">
            <summary>
            Receiver&#39;s phone number.
            </summary>
            <value>Receiver&#39;s phone number.</value>
        </member>
        <member name="P:TextMagicClient.Model.Conversation.Status">
            <summary>
            Message status (for chats outbound only). See [message delivery statuses](https://docs.textmagic.com/#section/Delivery-status-codes) for details.
            </summary>
            <value>Message status (for chats outbound only). See [message delivery statuses](https://docs.textmagic.com/#section/Delivery-status-codes) for details.</value>
        </member>
        <member name="P:TextMagicClient.Model.Conversation.FirstName">
            <summary>
            Contact first name.
            </summary>
            <value>Contact first name.</value>
        </member>
        <member name="P:TextMagicClient.Model.Conversation.LastName">
            <summary>
            Contact last name.
            </summary>
            <value>Contact last name.</value>
        </member>
        <member name="P:TextMagicClient.Model.Conversation.SessionId">
            <summary>
            Session ID of a message. See [message sessions](https://docs.textmagic.com/#tag/Outbound-Message-Sessions) for details.
            </summary>
            <value>Session ID of a message. See [message sessions](https://docs.textmagic.com/#tag/Outbound-Message-Sessions) for details.</value>
        </member>
        <member name="T:TextMagicClient.Model.Conversation.DirectionEnum">
            <summary>
            Message type: inbound or outbound. 
            </summary>
            <value>Message type: inbound or outbound. </value>
        </member>
        <member name="F:TextMagicClient.Model.Conversation.DirectionEnum.In">
            <summary>
            Enum In for value: in
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.Conversation.DirectionEnum.Out">
            <summary>
            Enum Out for value: out
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.Conversation.DirectionEnum.O">
            <summary>
            Enum O for value: o
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.Conversation.DirectionEnum.I">
            <summary>
            Enum I for value: i
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Country.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Country"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Country.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Country"/> class.
            </summary>
            <param name="id">The 2-letter ISO country ID. (required).</param>
            <param name="name">Full country name. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.Country.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Country.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Country.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Country.Equals(TextMagicClient.Model.Country)">
            <summary>
            Returns true if Country instances are equal
            </summary>
            <param name="input">Instance of Country to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Country.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.Country.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.Country.Id">
            <summary>
            The 2-letter ISO country ID.
            </summary>
            <value>The 2-letter ISO country ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.Country.Name">
            <summary>
            Full country name.
            </summary>
            <value>Full country name.</value>
        </member>
        <member name="T:TextMagicClient.Model.CreateContactInputObject">
            <summary>
            CreateContactInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.CreateContactInputObject.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.CustomFieldListItem},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.CreateContactInputObject"/> class.
            </summary>
            <param name="firstName">Contact first name..</param>
            <param name="lastName">Contact last name..</param>
            <param name="phone">Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164)..</param>
            <param name="email">Contact email address..</param>
            <param name="companyName">Company name..</param>
            <param name="lists">Contact [list](https://docs.textmagic.com/#tag/Lists) ID. Each contact must be assigned to at least one list..</param>
            <param name="favorited">Is the contact marked as favorite?.</param>
            <param name="blocked">Is the contact blocked for outgoing and incoming messaging?.</param>
            <param name="type">Force type of phone. Possible values: 0 is landline; 1 is mobile; default is -1 (auto-detection)..</param>
            <param name="customFieldValues">customFieldValues.</param>
            <param name="local">Treat phone numbers passed in the request body as local..</param>
            <param name="country">The 2-letter ISO country code for local phone numbers, used when local is  set to true. Default is the account country..</param>
        </member>
        <member name="M:TextMagicClient.Model.CreateContactInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateContactInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateContactInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateContactInputObject.Equals(TextMagicClient.Model.CreateContactInputObject)">
            <summary>
            Returns true if CreateContactInputObject instances are equal
            </summary>
            <param name="input">Instance of CreateContactInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateContactInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateContactInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.CreateContactInputObject.FirstName">
            <summary>
            Contact first name.
            </summary>
            <value>Contact first name.</value>
        </member>
        <member name="P:TextMagicClient.Model.CreateContactInputObject.LastName">
            <summary>
            Contact last name.
            </summary>
            <value>Contact last name.</value>
        </member>
        <member name="P:TextMagicClient.Model.CreateContactInputObject.Phone">
            <summary>
            Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
            </summary>
            <value>Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).</value>
        </member>
        <member name="P:TextMagicClient.Model.CreateContactInputObject.Email">
            <summary>
            Contact email address.
            </summary>
            <value>Contact email address.</value>
        </member>
        <member name="P:TextMagicClient.Model.CreateContactInputObject.CompanyName">
            <summary>
            Company name.
            </summary>
            <value>Company name.</value>
        </member>
        <member name="P:TextMagicClient.Model.CreateContactInputObject.Lists">
            <summary>
            Contact [list](https://docs.textmagic.com/#tag/Lists) ID. Each contact must be assigned to at least one list.
            </summary>
            <value>Contact [list](https://docs.textmagic.com/#tag/Lists) ID. Each contact must be assigned to at least one list.</value>
        </member>
        <member name="P:TextMagicClient.Model.CreateContactInputObject.Favorited">
            <summary>
            Is the contact marked as favorite?
            </summary>
            <value>Is the contact marked as favorite?</value>
        </member>
        <member name="P:TextMagicClient.Model.CreateContactInputObject.Blocked">
            <summary>
            Is the contact blocked for outgoing and incoming messaging?
            </summary>
            <value>Is the contact blocked for outgoing and incoming messaging?</value>
        </member>
        <member name="P:TextMagicClient.Model.CreateContactInputObject.Type">
            <summary>
            Force type of phone. Possible values: 0 is landline; 1 is mobile; default is -1 (auto-detection).
            </summary>
            <value>Force type of phone. Possible values: 0 is landline; 1 is mobile; default is -1 (auto-detection).</value>
        </member>
        <member name="P:TextMagicClient.Model.CreateContactInputObject.CustomFieldValues">
            <summary>
            Gets or Sets CustomFieldValues
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.CreateContactInputObject.Local">
            <summary>
            Treat phone numbers passed in the request body as local.
            </summary>
            <value>Treat phone numbers passed in the request body as local.</value>
        </member>
        <member name="P:TextMagicClient.Model.CreateContactInputObject.Country">
            <summary>
            The 2-letter ISO country code for local phone numbers, used when local is  set to true. Default is the account country.
            </summary>
            <value>The 2-letter ISO country code for local phone numbers, used when local is  set to true. Default is the account country.</value>
        </member>
        <member name="T:TextMagicClient.Model.CreateContactNoteInputObject">
            <summary>
            CreateContactNoteInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.CreateContactNoteInputObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.CreateContactNoteInputObject"/> class.
            </summary>
            <param name="note">Contact Note text..</param>
        </member>
        <member name="M:TextMagicClient.Model.CreateContactNoteInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateContactNoteInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateContactNoteInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateContactNoteInputObject.Equals(TextMagicClient.Model.CreateContactNoteInputObject)">
            <summary>
            Returns true if CreateContactNoteInputObject instances are equal
            </summary>
            <param name="input">Instance of CreateContactNoteInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateContactNoteInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateContactNoteInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.CreateContactNoteInputObject.Note">
            <summary>
            Contact Note text.
            </summary>
            <value>Contact Note text.</value>
        </member>
        <member name="T:TextMagicClient.Model.CreateCustomFieldInputObject">
            <summary>
            CreateCustomFieldInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.CreateCustomFieldInputObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.CreateCustomFieldInputObject"/> class.
            </summary>
            <param name="name">Custom field name..</param>
        </member>
        <member name="M:TextMagicClient.Model.CreateCustomFieldInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateCustomFieldInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateCustomFieldInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateCustomFieldInputObject.Equals(TextMagicClient.Model.CreateCustomFieldInputObject)">
            <summary>
            Returns true if CreateCustomFieldInputObject instances are equal
            </summary>
            <param name="input">Instance of CreateCustomFieldInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateCustomFieldInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateCustomFieldInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.CreateCustomFieldInputObject.Name">
            <summary>
            Custom field name.
            </summary>
            <value>Custom field name.</value>
        </member>
        <member name="T:TextMagicClient.Model.CreateListInputObject">
            <summary>
            CreateListInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.CreateListInputObject.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.CreateListInputObject"/> class.
            </summary>
            <param name="name">List name..</param>
            <param name="shared">Should the new list be **shared** among all the sub-accounts? (default to false).</param>
            <param name="favorited">Is the list favorited? Default is false. (default to false).</param>
            <param name="isDefault">Is the list default for new contacts (web only)? (default to false).</param>
        </member>
        <member name="M:TextMagicClient.Model.CreateListInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateListInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateListInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateListInputObject.Equals(TextMagicClient.Model.CreateListInputObject)">
            <summary>
            Returns true if CreateListInputObject instances are equal
            </summary>
            <param name="input">Instance of CreateListInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateListInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateListInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.CreateListInputObject.Name">
            <summary>
            List name.
            </summary>
            <value>List name.</value>
        </member>
        <member name="P:TextMagicClient.Model.CreateListInputObject.Shared">
            <summary>
            Should the new list be **shared** among all the sub-accounts?
            </summary>
            <value>Should the new list be **shared** among all the sub-accounts?</value>
        </member>
        <member name="P:TextMagicClient.Model.CreateListInputObject.Favorited">
            <summary>
            Is the list favorited? Default is false.
            </summary>
            <value>Is the list favorited? Default is false.</value>
        </member>
        <member name="P:TextMagicClient.Model.CreateListInputObject.IsDefault">
            <summary>
            Is the list default for new contacts (web only)?
            </summary>
            <value>Is the list default for new contacts (web only)?</value>
        </member>
        <member name="T:TextMagicClient.Model.CreateTemplateInputObject">
            <summary>
            CreateTemplateInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.CreateTemplateInputObject.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.CreateTemplateInputObject"/> class.
            </summary>
            <param name="name">Template name..</param>
            <param name="content">Template text. May contain tags inside braces. See [Get timezones](https://docs.textmagic.com/#section/Custom-fields-list-(Merge-tags))..</param>
        </member>
        <member name="M:TextMagicClient.Model.CreateTemplateInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateTemplateInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateTemplateInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateTemplateInputObject.Equals(TextMagicClient.Model.CreateTemplateInputObject)">
            <summary>
            Returns true if CreateTemplateInputObject instances are equal
            </summary>
            <param name="input">Instance of CreateTemplateInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateTemplateInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.CreateTemplateInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.CreateTemplateInputObject.Name">
            <summary>
            Template name.
            </summary>
            <value>Template name.</value>
        </member>
        <member name="P:TextMagicClient.Model.CreateTemplateInputObject.Content">
            <summary>
            Template text. May contain tags inside braces. See [Get timezones](https://docs.textmagic.com/#section/Custom-fields-list-(Merge-tags)).
            </summary>
            <value>Template text. May contain tags inside braces. See [Get timezones](https://docs.textmagic.com/#section/Custom-fields-list-(Merge-tags)).</value>
        </member>
        <member name="T:TextMagicClient.Model.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Currency.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Currency"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Currency.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Currency"/> class.
            </summary>
            <param name="id">The 3-letter ISO currency ID. (required).</param>
            <param name="unicodeSymbol">Unicode-compatible currency symbol. (required).</param>
            <param name="htmlSymbol">HTML-compatible currency symbol. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.Currency.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Currency.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Currency.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Currency.Equals(TextMagicClient.Model.Currency)">
            <summary>
            Returns true if Currency instances are equal
            </summary>
            <param name="input">Instance of Currency to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Currency.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.Currency.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.Currency.Id">
            <summary>
            The 3-letter ISO currency ID.
            </summary>
            <value>The 3-letter ISO currency ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.Currency.UnicodeSymbol">
            <summary>
            Unicode-compatible currency symbol.
            </summary>
            <value>Unicode-compatible currency symbol.</value>
        </member>
        <member name="P:TextMagicClient.Model.Currency.HtmlSymbol">
            <summary>
            HTML-compatible currency symbol.
            </summary>
            <value>HTML-compatible currency symbol.</value>
        </member>
        <member name="T:TextMagicClient.Model.CustomFieldListItem">
            <summary>
            CustomFieldListItem
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.CustomFieldListItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.CustomFieldListItem"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.CustomFieldListItem.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.CustomFieldListItem"/> class.
            </summary>
            <param name="id">Custom Field ID. (required).</param>
            <param name="value">Custom Field value. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.CustomFieldListItem.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CustomFieldListItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.CustomFieldListItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CustomFieldListItem.Equals(TextMagicClient.Model.CustomFieldListItem)">
            <summary>
            Returns true if CustomFieldListItem instances are equal
            </summary>
            <param name="input">Instance of CustomFieldListItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.CustomFieldListItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.CustomFieldListItem.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.CustomFieldListItem.Id">
            <summary>
            Custom Field ID.
            </summary>
            <value>Custom Field ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.CustomFieldListItem.Value">
            <summary>
            Custom Field value.
            </summary>
            <value>Custom Field value.</value>
        </member>
        <member name="T:TextMagicClient.Model.DeleteChatMessagesBulkInputObject">
            <summary>
            DeleteChatMessagesBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DeleteChatMessagesBulkInputObject.#ctor(System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DeleteChatMessagesBulkInputObject"/> class.
            </summary>
            <param name="inboundIds">Inbound message IDs to delete. Require when \"all\" is equal to 0 (false)..</param>
            <param name="sentIds">Sent message IDs to delete. Require when \"all\" is equal to 0 (false)..</param>
            <param name="callsIds">Calls IDs to delete. Require when \"all\" is equal to 0 (false)..</param>
            <param name="all">Default is 0 (false). If set to 1, all the entities will be removed..</param>
        </member>
        <member name="M:TextMagicClient.Model.DeleteChatMessagesBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteChatMessagesBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteChatMessagesBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteChatMessagesBulkInputObject.Equals(TextMagicClient.Model.DeleteChatMessagesBulkInputObject)">
            <summary>
            Returns true if DeleteChatMessagesBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of DeleteChatMessagesBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteChatMessagesBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteChatMessagesBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DeleteChatMessagesBulkInputObject.InboundIds">
            <summary>
            Inbound message IDs to delete. Require when \&quot;all\&quot; is equal to 0 (false).
            </summary>
            <value>Inbound message IDs to delete. Require when \&quot;all\&quot; is equal to 0 (false).</value>
        </member>
        <member name="P:TextMagicClient.Model.DeleteChatMessagesBulkInputObject.SentIds">
            <summary>
            Sent message IDs to delete. Require when \&quot;all\&quot; is equal to 0 (false).
            </summary>
            <value>Sent message IDs to delete. Require when \&quot;all\&quot; is equal to 0 (false).</value>
        </member>
        <member name="P:TextMagicClient.Model.DeleteChatMessagesBulkInputObject.CallsIds">
            <summary>
            Calls IDs to delete. Require when \&quot;all\&quot; is equal to 0 (false).
            </summary>
            <value>Calls IDs to delete. Require when \&quot;all\&quot; is equal to 0 (false).</value>
        </member>
        <member name="P:TextMagicClient.Model.DeleteChatMessagesBulkInputObject.All">
            <summary>
            Default is 0 (false). If set to 1, all the entities will be removed.
            </summary>
            <value>Default is 0 (false). If set to 1, all the entities will be removed.</value>
        </member>
        <member name="T:TextMagicClient.Model.DeleteChatsBulkInputObject">
            <summary>
            DeleteChatsBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DeleteChatsBulkInputObject.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{TextMagicClient.Model.DeleteChatsBulkInputObject.StatusEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DeleteChatsBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Entity ID(s), separated by comma..</param>
            <param name="status">Default is an empty string. If set, all entities with specified status will be affected..</param>
        </member>
        <member name="M:TextMagicClient.Model.DeleteChatsBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteChatsBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteChatsBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteChatsBulkInputObject.Equals(TextMagicClient.Model.DeleteChatsBulkInputObject)">
            <summary>
            Returns true if DeleteChatsBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of DeleteChatsBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteChatsBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteChatsBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DeleteChatsBulkInputObject.Status">
            <summary>
            Default is an empty string. If set, all entities with specified status will be affected.
            </summary>
            <value>Default is an empty string. If set, all entities with specified status will be affected.</value>
        </member>
        <member name="P:TextMagicClient.Model.DeleteChatsBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.DeleteChatsBulkInputObject.All">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="T:TextMagicClient.Model.DeleteChatsBulkInputObject.StatusEnum">
            <summary>
            Default is an empty string. If set, all entities with specified status will be affected.
            </summary>
            <value>Default is an empty string. If set, all entities with specified status will be affected.</value>
        </member>
        <member name="F:TextMagicClient.Model.DeleteChatsBulkInputObject.StatusEnum.A">
            <summary>
            Enum A for value: a
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.DeleteChatsBulkInputObject.StatusEnum.C">
            <summary>
            Enum C for value: c
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.DeleteChatsBulkInputObject.StatusEnum.D">
            <summary>
            Enum D for value: d
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.DeleteContacsFromListObject">
            <summary>
            DeleteContacsFromListObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContacsFromListObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DeleteContacsFromListObject"/> class.
            </summary>
            <param name="contacts">Comma-separated array of [Contacts](https://docs.textmagic.com/#tag/Contacts) IDs. .</param>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContacsFromListObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContacsFromListObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContacsFromListObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContacsFromListObject.Equals(TextMagicClient.Model.DeleteContacsFromListObject)">
            <summary>
            Returns true if DeleteContacsFromListObject instances are equal
            </summary>
            <param name="input">Instance of DeleteContacsFromListObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContacsFromListObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContacsFromListObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DeleteContacsFromListObject.Contacts">
            <summary>
            Comma-separated array of [Contacts](https://docs.textmagic.com/#tag/Contacts) IDs. 
            </summary>
            <value>Comma-separated array of [Contacts](https://docs.textmagic.com/#tag/Contacts) IDs. </value>
        </member>
        <member name="T:TextMagicClient.Model.DeleteContactNotesBulkInputObject">
            <summary>
            DeleteContactNotesBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContactNotesBulkInputObject.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DeleteContactNotesBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Entity ID(s), separated by comma..</param>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContactNotesBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContactNotesBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContactNotesBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContactNotesBulkInputObject.Equals(TextMagicClient.Model.DeleteContactNotesBulkInputObject)">
            <summary>
            Returns true if DeleteContactNotesBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of DeleteContactNotesBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContactNotesBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContactNotesBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DeleteContactNotesBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.DeleteContactNotesBulkInputObject.All">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="T:TextMagicClient.Model.DeleteContactsByIdsInputObject">
            <summary>
            DeleteContactsByIdsInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContactsByIdsInputObject.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DeleteContactsByIdsInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Entity ID(s), separated by comma..</param>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContactsByIdsInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContactsByIdsInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContactsByIdsInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContactsByIdsInputObject.Equals(TextMagicClient.Model.DeleteContactsByIdsInputObject)">
            <summary>
            Returns true if DeleteContactsByIdsInputObject instances are equal
            </summary>
            <param name="input">Instance of DeleteContactsByIdsInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContactsByIdsInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteContactsByIdsInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DeleteContactsByIdsInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.DeleteContactsByIdsInputObject.All">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="T:TextMagicClient.Model.DeleteInboundMessagesBulkInputObject">
            <summary>
            DeleteInboundMessagesBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DeleteInboundMessagesBulkInputObject.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DeleteInboundMessagesBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Default is 0 (false). If set to 1, all the entities will be removed..</param>
        </member>
        <member name="M:TextMagicClient.Model.DeleteInboundMessagesBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteInboundMessagesBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteInboundMessagesBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteInboundMessagesBulkInputObject.Equals(TextMagicClient.Model.DeleteInboundMessagesBulkInputObject)">
            <summary>
            Returns true if DeleteInboundMessagesBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of DeleteInboundMessagesBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteInboundMessagesBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteInboundMessagesBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DeleteInboundMessagesBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.DeleteInboundMessagesBulkInputObject.All">
            <summary>
            Default is 0 (false). If set to 1, all the entities will be removed.
            </summary>
            <value>Default is 0 (false). If set to 1, all the entities will be removed.</value>
        </member>
        <member name="T:TextMagicClient.Model.DeleteListContactsBulkInputObject">
            <summary>
            DeleteListContactsBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DeleteListContactsBulkInputObject.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DeleteListContactsBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Default is 0 (false). If set to 1, all entities will be removed..</param>
        </member>
        <member name="M:TextMagicClient.Model.DeleteListContactsBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteListContactsBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteListContactsBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteListContactsBulkInputObject.Equals(TextMagicClient.Model.DeleteListContactsBulkInputObject)">
            <summary>
            Returns true if DeleteListContactsBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of DeleteListContactsBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteListContactsBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteListContactsBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DeleteListContactsBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.DeleteListContactsBulkInputObject.All">
            <summary>
            Default is 0 (false). If set to 1, all entities will be removed.
            </summary>
            <value>Default is 0 (false). If set to 1, all entities will be removed.</value>
        </member>
        <member name="T:TextMagicClient.Model.DeleteListsBulkInputObject">
            <summary>
            DeleteListsBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DeleteListsBulkInputObject.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DeleteListsBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Default is 0 (false). If set to 1, all the entities will be removed..</param>
        </member>
        <member name="M:TextMagicClient.Model.DeleteListsBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteListsBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteListsBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteListsBulkInputObject.Equals(TextMagicClient.Model.DeleteListsBulkInputObject)">
            <summary>
            Returns true if DeleteListsBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of DeleteListsBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteListsBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteListsBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DeleteListsBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.DeleteListsBulkInputObject.All">
            <summary>
            Default is 0 (false). If set to 1, all the entities will be removed.
            </summary>
            <value>Default is 0 (false). If set to 1, all the entities will be removed.</value>
        </member>
        <member name="T:TextMagicClient.Model.DeleteMessageSessionsBulkInputObject">
            <summary>
            DeleteMessageSessionsBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DeleteMessageSessionsBulkInputObject.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DeleteMessageSessionsBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Default is 0 (false). If set to 1, all the entities will be removed..</param>
        </member>
        <member name="M:TextMagicClient.Model.DeleteMessageSessionsBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteMessageSessionsBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteMessageSessionsBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteMessageSessionsBulkInputObject.Equals(TextMagicClient.Model.DeleteMessageSessionsBulkInputObject)">
            <summary>
            Returns true if DeleteMessageSessionsBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of DeleteMessageSessionsBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteMessageSessionsBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteMessageSessionsBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DeleteMessageSessionsBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.DeleteMessageSessionsBulkInputObject.All">
            <summary>
            Default is 0 (false). If set to 1, all the entities will be removed.
            </summary>
            <value>Default is 0 (false). If set to 1, all the entities will be removed.</value>
        </member>
        <member name="T:TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject">
            <summary>
            DeleteOutboundMessagesBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Default is 0 (false). If set to 1, all the entities will be removed..</param>
        </member>
        <member name="M:TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject.Equals(TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject)">
            <summary>
            Returns true if DeleteOutboundMessagesBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of DeleteOutboundMessagesBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.DeleteOutboundMessagesBulkInputObject.All">
            <summary>
            Default is 0 (false). If set to 1, all the entities will be removed.
            </summary>
            <value>Default is 0 (false). If set to 1, all the entities will be removed.</value>
        </member>
        <member name="T:TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject">
            <summary>
            DeleteScheduledMessagesBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject.#ctor(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Default is 0 (false). If set to 1, all the entities will be removed..</param>
            <param name="status">Default is an empty string (false). If set, all entities with specified status will be affected. (default to "").</param>
        </member>
        <member name="M:TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject.Equals(TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject)">
            <summary>
            Returns true if DeleteScheduledMessagesBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of DeleteScheduledMessagesBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject.All">
            <summary>
            Default is 0 (false). If set to 1, all the entities will be removed.
            </summary>
            <value>Default is 0 (false). If set to 1, all the entities will be removed.</value>
        </member>
        <member name="P:TextMagicClient.Model.DeleteScheduledMessagesBulkInputObject.Status">
            <summary>
            Default is an empty string (false). If set, all entities with specified status will be affected.
            </summary>
            <value>Default is an empty string (false). If set, all entities with specified status will be affected.</value>
        </member>
        <member name="T:TextMagicClient.Model.DeleteTemplatesBulkInputObject">
            <summary>
            DeleteTemplatesBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DeleteTemplatesBulkInputObject.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DeleteTemplatesBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Entity ID(s), separated by comma..</param>
        </member>
        <member name="M:TextMagicClient.Model.DeleteTemplatesBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteTemplatesBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteTemplatesBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteTemplatesBulkInputObject.Equals(TextMagicClient.Model.DeleteTemplatesBulkInputObject)">
            <summary>
            Returns true if DeleteTemplatesBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of DeleteTemplatesBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteTemplatesBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DeleteTemplatesBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DeleteTemplatesBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.DeleteTemplatesBulkInputObject.All">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="T:TextMagicClient.Model.DoAuthResponse">
            <summary>
            DoAuthResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DoAuthResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponse.#ctor(System.String,System.String,System.Nullable{System.DateTime},TextMagicClient.Model.DoAuthResponseMinVersions,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DoAuthResponse"/> class.
            </summary>
            <param name="username">username (required).</param>
            <param name="token">token (required).</param>
            <param name="expires">expires (required).</param>
            <param name="minVersions">minVersions (required).</param>
            <param name="disallowedRules">disallowedRules (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponse.Equals(TextMagicClient.Model.DoAuthResponse)">
            <summary>
            Returns true if DoAuthResponse instances are equal
            </summary>
            <param name="input">Instance of DoAuthResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DoAuthResponse.Username">
            <summary>
            Gets or Sets Username
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.DoAuthResponse.Token">
            <summary>
            Gets or Sets Token
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.DoAuthResponse.Expires">
            <summary>
            Gets or Sets Expires
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.DoAuthResponse.MinVersions">
            <summary>
            Gets or Sets MinVersions
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.DoAuthResponse.DisallowedRules">
            <summary>
            Gets or Sets DisallowedRules
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.DoAuthResponseMinVersions">
            <summary>
            DoAuthResponseMinVersions
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponseMinVersions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DoAuthResponseMinVersions"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponseMinVersions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DoAuthResponseMinVersions"/> class.
            </summary>
            <param name="ios">ios (required).</param>
            <param name="android">android (required).</param>
            <param name="desktop">desktop (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponseMinVersions.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponseMinVersions.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponseMinVersions.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponseMinVersions.Equals(TextMagicClient.Model.DoAuthResponseMinVersions)">
            <summary>
            Returns true if DoAuthResponseMinVersions instances are equal
            </summary>
            <param name="input">Instance of DoAuthResponseMinVersions to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponseMinVersions.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoAuthResponseMinVersions.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DoAuthResponseMinVersions.Ios">
            <summary>
            Gets or Sets Ios
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.DoAuthResponseMinVersions.Android">
            <summary>
            Gets or Sets Android
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.DoAuthResponseMinVersions.Desktop">
            <summary>
            Gets or Sets Desktop
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.DoCarrierLookupResponse">
            <summary>
            DoCarrierLookupResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DoCarrierLookupResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DoCarrierLookupResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DoCarrierLookupResponse.#ctor(System.Nullable{System.Decimal},TextMagicClient.Model.Country,System.String,TextMagicClient.Model.DoCarrierLookupResponse.TypeEnum,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DoCarrierLookupResponse"/> class.
            </summary>
            <param name="cost">The cost to check that one number is constant – 0.04 in your account currency. (required).</param>
            <param name="country">Phone number country..</param>
            <param name="local">Phone number in [National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers). (required).</param>
            <param name="type">Phone number type. (required).</param>
            <param name="carrier">Carrier name. (required).</param>
            <param name="number164">Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164). (required).</param>
            <param name="valid">This field shows whether the entered phone number is valid or not. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.DoCarrierLookupResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoCarrierLookupResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoCarrierLookupResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoCarrierLookupResponse.Equals(TextMagicClient.Model.DoCarrierLookupResponse)">
            <summary>
            Returns true if DoCarrierLookupResponse instances are equal
            </summary>
            <param name="input">Instance of DoCarrierLookupResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoCarrierLookupResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoCarrierLookupResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DoCarrierLookupResponse.Type">
            <summary>
            Phone number type.
            </summary>
            <value>Phone number type.</value>
        </member>
        <member name="P:TextMagicClient.Model.DoCarrierLookupResponse.Cost">
            <summary>
            The cost to check that one number is constant – 0.04 in your account currency.
            </summary>
            <value>The cost to check that one number is constant – 0.04 in your account currency.</value>
        </member>
        <member name="P:TextMagicClient.Model.DoCarrierLookupResponse.Country">
            <summary>
            Phone number country.
            </summary>
            <value>Phone number country.</value>
        </member>
        <member name="P:TextMagicClient.Model.DoCarrierLookupResponse.Local">
            <summary>
            Phone number in [National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers).
            </summary>
            <value>Phone number in [National format](https://en.wikipedia.org/wiki/National_conventions_for_writing_telephone_numbers).</value>
        </member>
        <member name="P:TextMagicClient.Model.DoCarrierLookupResponse.Carrier">
            <summary>
            Carrier name.
            </summary>
            <value>Carrier name.</value>
        </member>
        <member name="P:TextMagicClient.Model.DoCarrierLookupResponse.Number164">
            <summary>
            Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
            </summary>
            <value>Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).</value>
        </member>
        <member name="P:TextMagicClient.Model.DoCarrierLookupResponse.Valid">
            <summary>
            This field shows whether the entered phone number is valid or not.
            </summary>
            <value>This field shows whether the entered phone number is valid or not.</value>
        </member>
        <member name="T:TextMagicClient.Model.DoCarrierLookupResponse.TypeEnum">
            <summary>
            Phone number type.
            </summary>
            <value>Phone number type.</value>
        </member>
        <member name="F:TextMagicClient.Model.DoCarrierLookupResponse.TypeEnum.Mobile">
            <summary>
            Enum Mobile for value: mobile
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.DoCarrierLookupResponse.TypeEnum.Landline">
            <summary>
            Enum Landline for value: landline
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.DoCarrierLookupResponse.TypeEnum.Voip">
            <summary>
            Enum Voip for value: voip
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.DoEmailLookupResponse">
            <summary>
            DoEmailLookupResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DoEmailLookupResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DoEmailLookupResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.DoEmailLookupResponse.#ctor(System.String,TextMagicClient.Model.DoEmailLookupResponse.StatusEnum,System.String,System.String,TextMagicClient.Model.DoEmailLookupResponse.RiskEnum,TextMagicClient.Model.DoEmailLookupResponse.AddressTypeEnum,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.DoEmailLookupResponse"/> class.
            </summary>
            <param name="address">The email address passed to the call. (required).</param>
            <param name="status">The email is `valid` or `invalid`. (required).</param>
            <param name="deliverability">The delivery status of the email address is`deliverable`, `undeliverable`. or `unknown`. (required).</param>
            <param name="reason">The reason why the checked email is invalid/undeliverable. (required).</param>
            <param name="risk">The risk score of the email is`high`, `medium`, `low` or `null`. (required).</param>
            <param name="addressType">The email address type (domain) is `free` or `corporate`. (required).</param>
            <param name="isDisposableAddress">This is `true` if the domain is in the list of disposable email addresses; otherwise, it returns as `false`. (required).</param>
            <param name="suggestion">Null if nothing is suggested; however, if there is a potential typo in the email address, the closest suggestion is provided. (required).</param>
            <param name="emailRole">Checks the mailbox part of the email to see whether it matches a specific role type (‘admin’, ‘sales’, ‘webmaster’). (required).</param>
            <param name="localPart">The local part of the email address. (required).</param>
            <param name="domainPart">The domain part of the email address. (required).</param>
            <param name="exchange">Email exchange server domain name (MX record value). (required).</param>
            <param name="preference">MX record preference. (required).</param>
            <param name="isInWhiteList">`true` if the email address exists in the TextMagic whitelist.  (required).</param>
            <param name="isInBlackList">`true` if the email address exists in the TextMagic blacklist.  (required).</param>
            <param name="hasMx">`true` if the email address domain has an MX record.  (required).</param>
            <param name="hasAa">`true` if the email address domain has an A record (IPv4).  (required).</param>
            <param name="hasAaaa">`true` if the email address domain has an AAAA record (IPv6).  (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.DoEmailLookupResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoEmailLookupResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoEmailLookupResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoEmailLookupResponse.Equals(TextMagicClient.Model.DoEmailLookupResponse)">
            <summary>
            Returns true if DoEmailLookupResponse instances are equal
            </summary>
            <param name="input">Instance of DoEmailLookupResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoEmailLookupResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.DoEmailLookupResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.Status">
            <summary>
            The email is &#x60;valid&#x60; or &#x60;invalid&#x60;.
            </summary>
            <value>The email is &#x60;valid&#x60; or &#x60;invalid&#x60;.</value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.Risk">
            <summary>
            The risk score of the email is&#x60;high&#x60;, &#x60;medium&#x60;, &#x60;low&#x60; or &#x60;null&#x60;.
            </summary>
            <value>The risk score of the email is&#x60;high&#x60;, &#x60;medium&#x60;, &#x60;low&#x60; or &#x60;null&#x60;.</value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.AddressType">
            <summary>
            The email address type (domain) is &#x60;free&#x60; or &#x60;corporate&#x60;.
            </summary>
            <value>The email address type (domain) is &#x60;free&#x60; or &#x60;corporate&#x60;.</value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.Address">
            <summary>
            The email address passed to the call.
            </summary>
            <value>The email address passed to the call.</value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.Deliverability">
            <summary>
            The delivery status of the email address is&#x60;deliverable&#x60;, &#x60;undeliverable&#x60;. or &#x60;unknown&#x60;.
            </summary>
            <value>The delivery status of the email address is&#x60;deliverable&#x60;, &#x60;undeliverable&#x60;. or &#x60;unknown&#x60;.</value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.Reason">
            <summary>
            The reason why the checked email is invalid/undeliverable.
            </summary>
            <value>The reason why the checked email is invalid/undeliverable.</value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.IsDisposableAddress">
            <summary>
            This is &#x60;true&#x60; if the domain is in the list of disposable email addresses; otherwise, it returns as &#x60;false&#x60;.
            </summary>
            <value>This is &#x60;true&#x60; if the domain is in the list of disposable email addresses; otherwise, it returns as &#x60;false&#x60;.</value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.Suggestion">
            <summary>
            Null if nothing is suggested; however, if there is a potential typo in the email address, the closest suggestion is provided.
            </summary>
            <value>Null if nothing is suggested; however, if there is a potential typo in the email address, the closest suggestion is provided.</value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.EmailRole">
            <summary>
            Checks the mailbox part of the email to see whether it matches a specific role type (‘admin’, ‘sales’, ‘webmaster’).
            </summary>
            <value>Checks the mailbox part of the email to see whether it matches a specific role type (‘admin’, ‘sales’, ‘webmaster’).</value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.LocalPart">
            <summary>
            The local part of the email address.
            </summary>
            <value>The local part of the email address.</value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.DomainPart">
            <summary>
            The domain part of the email address.
            </summary>
            <value>The domain part of the email address.</value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.Exchange">
            <summary>
            Email exchange server domain name (MX record value).
            </summary>
            <value>Email exchange server domain name (MX record value).</value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.Preference">
            <summary>
            MX record preference.
            </summary>
            <value>MX record preference.</value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.IsInWhiteList">
            <summary>
            &#x60;true&#x60; if the email address exists in the TextMagic whitelist. 
            </summary>
            <value>&#x60;true&#x60; if the email address exists in the TextMagic whitelist. </value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.IsInBlackList">
            <summary>
            &#x60;true&#x60; if the email address exists in the TextMagic blacklist. 
            </summary>
            <value>&#x60;true&#x60; if the email address exists in the TextMagic blacklist. </value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.HasMx">
            <summary>
            &#x60;true&#x60; if the email address domain has an MX record. 
            </summary>
            <value>&#x60;true&#x60; if the email address domain has an MX record. </value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.HasAa">
            <summary>
            &#x60;true&#x60; if the email address domain has an A record (IPv4). 
            </summary>
            <value>&#x60;true&#x60; if the email address domain has an A record (IPv4). </value>
        </member>
        <member name="P:TextMagicClient.Model.DoEmailLookupResponse.HasAaaa">
            <summary>
            &#x60;true&#x60; if the email address domain has an AAAA record (IPv6). 
            </summary>
            <value>&#x60;true&#x60; if the email address domain has an AAAA record (IPv6). </value>
        </member>
        <member name="T:TextMagicClient.Model.DoEmailLookupResponse.StatusEnum">
            <summary>
            The email is &#x60;valid&#x60; or &#x60;invalid&#x60;.
            </summary>
            <value>The email is &#x60;valid&#x60; or &#x60;invalid&#x60;.</value>
        </member>
        <member name="F:TextMagicClient.Model.DoEmailLookupResponse.StatusEnum.Valid">
            <summary>
            Enum Valid for value: valid
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.DoEmailLookupResponse.StatusEnum.Invalid">
            <summary>
            Enum Invalid for value: invalid
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.DoEmailLookupResponse.RiskEnum">
            <summary>
            The risk score of the email is&#x60;high&#x60;, &#x60;medium&#x60;, &#x60;low&#x60; or &#x60;null&#x60;.
            </summary>
            <value>The risk score of the email is&#x60;high&#x60;, &#x60;medium&#x60;, &#x60;low&#x60; or &#x60;null&#x60;.</value>
        </member>
        <member name="F:TextMagicClient.Model.DoEmailLookupResponse.RiskEnum.High">
            <summary>
            Enum High for value: high
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.DoEmailLookupResponse.RiskEnum.Medium">
            <summary>
            Enum Medium for value: medium
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.DoEmailLookupResponse.RiskEnum.Low">
            <summary>
            Enum Low for value: low
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.DoEmailLookupResponse.RiskEnum.Unknown">
            <summary>
            Enum Unknown for value: unknown
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.DoEmailLookupResponse.AddressTypeEnum">
            <summary>
            The email address type (domain) is &#x60;free&#x60; or &#x60;corporate&#x60;.
            </summary>
            <value>The email address type (domain) is &#x60;free&#x60; or &#x60;corporate&#x60;.</value>
        </member>
        <member name="F:TextMagicClient.Model.DoEmailLookupResponse.AddressTypeEnum.Corporate">
            <summary>
            Enum Corporate for value: corporate
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.DoEmailLookupResponse.AddressTypeEnum.Free">
            <summary>
            Enum Free for value: free
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.FavoriteContact">
            <summary>
            FavoriteContact
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.FavoriteContact.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.FavoriteContact"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.FavoriteContact.#ctor(System.Nullable{System.Int32},TextMagicClient.Model.FavoriteContact.EntityTypeEnum,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.FavoriteContact"/> class.
            </summary>
            <param name="entityId">List or Contact ID. (required).</param>
            <param name="entityType">Entity type which should be marked as **favorite**. (required).</param>
            <param name="primaryLabel">Contact first name/last name if entityType is **contact**; List name if entity type is **list**. (required).</param>
            <param name="secondaryLabel">Phone number if entityType is **contact**; List contacts number if entity type is **list**. (required).</param>
            <param name="tertiaryLabel">Contact country if entityType is **contact**; else, null. (required).</param>
            <param name="avatar">avatar (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.FavoriteContact.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.FavoriteContact.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.FavoriteContact.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.FavoriteContact.Equals(TextMagicClient.Model.FavoriteContact)">
            <summary>
            Returns true if FavoriteContact instances are equal
            </summary>
            <param name="input">Instance of FavoriteContact to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.FavoriteContact.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.FavoriteContact.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.FavoriteContact.EntityType">
            <summary>
            Entity type which should be marked as **favorite**.
            </summary>
            <value>Entity type which should be marked as **favorite**.</value>
        </member>
        <member name="P:TextMagicClient.Model.FavoriteContact.EntityId">
            <summary>
            List or Contact ID.
            </summary>
            <value>List or Contact ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.FavoriteContact.PrimaryLabel">
            <summary>
            Contact first name/last name if entityType is **contact**; List name if entity type is **list**.
            </summary>
            <value>Contact first name/last name if entityType is **contact**; List name if entity type is **list**.</value>
        </member>
        <member name="P:TextMagicClient.Model.FavoriteContact.SecondaryLabel">
            <summary>
            Phone number if entityType is **contact**; List contacts number if entity type is **list**.
            </summary>
            <value>Phone number if entityType is **contact**; List contacts number if entity type is **list**.</value>
        </member>
        <member name="P:TextMagicClient.Model.FavoriteContact.TertiaryLabel">
            <summary>
            Contact country if entityType is **contact**; else, null.
            </summary>
            <value>Contact country if entityType is **contact**; else, null.</value>
        </member>
        <member name="P:TextMagicClient.Model.FavoriteContact.Avatar">
            <summary>
            Gets or Sets Avatar
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.FavoriteContact.EntityTypeEnum">
            <summary>
            Entity type which should be marked as **favorite**.
            </summary>
            <value>Entity type which should be marked as **favorite**.</value>
        </member>
        <member name="F:TextMagicClient.Model.FavoriteContact.EntityTypeEnum.List">
            <summary>
            Enum List for value: list
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.FavoriteContact.EntityTypeEnum.Contact">
            <summary>
            Enum Contact for value: contact
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse">
            <summary>
            GetAllBulkSessionsPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.BulkSession})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse.Equals(TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse)">
            <summary>
            Returns true if GetAllBulkSessionsPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetAllBulkSessionsPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAllBulkSessionsPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetAllChatsPaginatedResponse">
            <summary>
            GetAllChatsPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAllChatsPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAllChatsPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAllChatsPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.Chat})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAllChatsPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetAllChatsPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllChatsPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllChatsPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllChatsPaginatedResponse.Equals(TextMagicClient.Model.GetAllChatsPaginatedResponse)">
            <summary>
            Returns true if GetAllChatsPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetAllChatsPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllChatsPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllChatsPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetAllChatsPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetAllChatsPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAllChatsPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAllChatsPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse">
            <summary>
            GetAllInboundMessagesPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.MessageIn})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse.Equals(TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse)">
            <summary>
            Returns true if GetAllInboundMessagesPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetAllInboundMessagesPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAllInboundMessagesPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse">
            <summary>
            GetAllMessageSessionsPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.MessageSession})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse.Equals(TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse)">
            <summary>
            Returns true if GetAllMessageSessionsPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetAllMessageSessionsPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAllMessageSessionsPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse">
            <summary>
            GetAllOutboundMessagesPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.MessageOut})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse.Equals(TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse)">
            <summary>
            Returns true if GetAllOutboundMessagesPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetAllOutboundMessagesPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAllOutboundMessagesPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse">
            <summary>
            GetAllScheduledMessagesPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.MessagesIcs})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse.Equals(TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse)">
            <summary>
            Returns true if GetAllScheduledMessagesPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetAllScheduledMessagesPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAllScheduledMessagesPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetAllTemplatesPaginatedResponse">
            <summary>
            GetAllTemplatesPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAllTemplatesPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAllTemplatesPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAllTemplatesPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.MessageTemplate})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAllTemplatesPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetAllTemplatesPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllTemplatesPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllTemplatesPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllTemplatesPaginatedResponse.Equals(TextMagicClient.Model.GetAllTemplatesPaginatedResponse)">
            <summary>
            Returns true if GetAllTemplatesPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetAllTemplatesPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllTemplatesPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAllTemplatesPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetAllTemplatesPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetAllTemplatesPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAllTemplatesPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAllTemplatesPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetAvailableDedicatedNumbersResponse">
            <summary>
            GetAvailableDedicatedNumbersResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableDedicatedNumbersResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAvailableDedicatedNumbersResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableDedicatedNumbersResponse.#ctor(System.Collections.Generic.List{System.String},System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAvailableDedicatedNumbersResponse"/> class.
            </summary>
            <param name="numbers">Array of phone numbers. (required).</param>
            <param name="price">Dedicated number monthly fee for this country. Returned in the current [account](https://docs.textmagic.com/#tag/User) currency. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableDedicatedNumbersResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableDedicatedNumbersResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableDedicatedNumbersResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableDedicatedNumbersResponse.Equals(TextMagicClient.Model.GetAvailableDedicatedNumbersResponse)">
            <summary>
            Returns true if GetAvailableDedicatedNumbersResponse instances are equal
            </summary>
            <param name="input">Instance of GetAvailableDedicatedNumbersResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableDedicatedNumbersResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableDedicatedNumbersResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetAvailableDedicatedNumbersResponse.Numbers">
            <summary>
            Array of phone numbers.
            </summary>
            <value>Array of phone numbers.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAvailableDedicatedNumbersResponse.Price">
            <summary>
            Dedicated number monthly fee for this country. Returned in the current [account](https://docs.textmagic.com/#tag/User) currency.
            </summary>
            <value>Dedicated number monthly fee for this country. Returned in the current [account](https://docs.textmagic.com/#tag/User) currency.</value>
        </member>
        <member name="T:TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse">
            <summary>
            GetAvailableSenderSettingOptionsResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse"/> class.
            </summary>
            <param name="dedicated">Array of dedicated number strings. (required).</param>
            <param name="user">Array of verified account phone numbers (currently only one). (required).</param>
            <param name="shared">Array of shared number strings. (required).</param>
            <param name="senderIds">Array of alphanumeric sender IDs. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse.Equals(TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse)">
            <summary>
            Returns true if GetAvailableSenderSettingOptionsResponse instances are equal
            </summary>
            <param name="input">Instance of GetAvailableSenderSettingOptionsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse.Dedicated">
            <summary>
            Array of dedicated number strings.
            </summary>
            <value>Array of dedicated number strings.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse.User">
            <summary>
            Array of verified account phone numbers (currently only one).
            </summary>
            <value>Array of verified account phone numbers (currently only one).</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse.Shared">
            <summary>
            Array of shared number strings.
            </summary>
            <value>Array of shared number strings.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetAvailableSenderSettingOptionsResponse.SenderIds">
            <summary>
            Array of alphanumeric sender IDs.
            </summary>
            <value>Array of alphanumeric sender IDs.</value>
        </member>
        <member name="T:TextMagicClient.Model.GetBalanceNotificationOptionsResponse">
            <summary>
            GetBalanceNotificationOptionsResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationOptionsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetBalanceNotificationOptionsResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationOptionsResponse.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetBalanceNotificationOptionsResponse"/> class.
            </summary>
            <param name="_1">Contains sign of currency in Unicode hex code. (required).</param>
            <param name="_2">Contains sign of currency in Unicode hex code. (required).</param>
            <param name="_3">Contains sign of currency in Unicode hex code. (required).</param>
            <param name="_5">Contains sign of currency in Unicode hex code. (required).</param>
            <param name="_10">Contains sign of currency in Unicode hex code. (required).</param>
            <param name="_20">Contains sign of currency in Unicode hex code. (required).</param>
            <param name="_30">Contains sign of currency in Unicode hex code. (required).</param>
            <param name="_50">Contains sign of currency in Unicode hex code. (required).</param>
            <param name="_100">Contains sign of currency in Unicode hex code. (required).</param>
            <param name="_500">Contains sign of currency in Unicode hex code. (required).</param>
            <param name="_1000">Contains sign of currency in Unicode hex code. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationOptionsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationOptionsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationOptionsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationOptionsResponse.Equals(TextMagicClient.Model.GetBalanceNotificationOptionsResponse)">
            <summary>
            Returns true if GetBalanceNotificationOptionsResponse instances are equal
            </summary>
            <param name="input">Instance of GetBalanceNotificationOptionsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationOptionsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationOptionsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationOptionsResponse._1">
            <summary>
            Contains sign of currency in Unicode hex code.
            </summary>
            <value>Contains sign of currency in Unicode hex code.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationOptionsResponse._2">
            <summary>
            Contains sign of currency in Unicode hex code.
            </summary>
            <value>Contains sign of currency in Unicode hex code.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationOptionsResponse._3">
            <summary>
            Contains sign of currency in Unicode hex code.
            </summary>
            <value>Contains sign of currency in Unicode hex code.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationOptionsResponse._5">
            <summary>
            Contains sign of currency in Unicode hex code.
            </summary>
            <value>Contains sign of currency in Unicode hex code.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationOptionsResponse._10">
            <summary>
            Contains sign of currency in Unicode hex code.
            </summary>
            <value>Contains sign of currency in Unicode hex code.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationOptionsResponse._20">
            <summary>
            Contains sign of currency in Unicode hex code.
            </summary>
            <value>Contains sign of currency in Unicode hex code.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationOptionsResponse._30">
            <summary>
            Contains sign of currency in Unicode hex code.
            </summary>
            <value>Contains sign of currency in Unicode hex code.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationOptionsResponse._50">
            <summary>
            Contains sign of currency in Unicode hex code.
            </summary>
            <value>Contains sign of currency in Unicode hex code.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationOptionsResponse._100">
            <summary>
            Contains sign of currency in Unicode hex code.
            </summary>
            <value>Contains sign of currency in Unicode hex code.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationOptionsResponse._500">
            <summary>
            Contains sign of currency in Unicode hex code.
            </summary>
            <value>Contains sign of currency in Unicode hex code.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationOptionsResponse._1000">
            <summary>
            Contains sign of currency in Unicode hex code.
            </summary>
            <value>Contains sign of currency in Unicode hex code.</value>
        </member>
        <member name="T:TextMagicClient.Model.GetBalanceNotificationSettingsResponse">
            <summary>
            GetBalanceNotificationSettingsResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationSettingsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetBalanceNotificationSettingsResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationSettingsResponse.#ctor(System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetBalanceNotificationSettingsResponse"/> class.
            </summary>
            <param name="lowBalanceNotification">Should user receive low balance notification. (required).</param>
            <param name="alertBalance">If balance is below this value, user receive low balance notification. (required).</param>
            <param name="alertPhone">Low balance notification phone number. (required).</param>
            <param name="alertEmail1">Low balance notification email 1. (required).</param>
            <param name="alertEmail2">Low balance notification email 2. (required).</param>
            <param name="alertEmail3">Low balance notification email 3. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationSettingsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationSettingsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationSettingsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationSettingsResponse.Equals(TextMagicClient.Model.GetBalanceNotificationSettingsResponse)">
            <summary>
            Returns true if GetBalanceNotificationSettingsResponse instances are equal
            </summary>
            <param name="input">Instance of GetBalanceNotificationSettingsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationSettingsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetBalanceNotificationSettingsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationSettingsResponse.LowBalanceNotification">
            <summary>
            Should user receive low balance notification.
            </summary>
            <value>Should user receive low balance notification.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationSettingsResponse.AlertBalance">
            <summary>
            If balance is below this value, user receive low balance notification.
            </summary>
            <value>If balance is below this value, user receive low balance notification.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationSettingsResponse.AlertPhone">
            <summary>
            Low balance notification phone number.
            </summary>
            <value>Low balance notification phone number.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationSettingsResponse.AlertEmail1">
            <summary>
            Low balance notification email 1.
            </summary>
            <value>Low balance notification email 1.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationSettingsResponse.AlertEmail2">
            <summary>
            Low balance notification email 2.
            </summary>
            <value>Low balance notification email 2.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBalanceNotificationSettingsResponse.AlertEmail3">
            <summary>
            Low balance notification email 3.
            </summary>
            <value>Low balance notification email 3.</value>
        </member>
        <member name="T:TextMagicClient.Model.GetBlockedContactsPaginatedResponse">
            <summary>
            GetBlockedContactsPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetBlockedContactsPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetBlockedContactsPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetBlockedContactsPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.Contact})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetBlockedContactsPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetBlockedContactsPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetBlockedContactsPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetBlockedContactsPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetBlockedContactsPaginatedResponse.Equals(TextMagicClient.Model.GetBlockedContactsPaginatedResponse)">
            <summary>
            Returns true if GetBlockedContactsPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetBlockedContactsPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetBlockedContactsPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetBlockedContactsPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetBlockedContactsPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetBlockedContactsPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBlockedContactsPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetBlockedContactsPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetCallbackSettingsResponse">
            <summary>
            GetCallbackSettingsResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetCallbackSettingsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetCallbackSettingsResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetCallbackSettingsResponse.#ctor(System.String,System.String,TextMagicClient.Model.GetCallbackSettingsResponse.FormatEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetCallbackSettingsResponse"/> class.
            </summary>
            <param name="outUrl">This URL is used to push message delivery status updates to your application. (required).</param>
            <param name="inUrl">This URL is used to push incoming SMS to your application. (required).</param>
            <param name="format">Desired callback data format. m - multipart/form-data, u - application/x-www-form-urlencoded, j - application/json. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetCallbackSettingsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCallbackSettingsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCallbackSettingsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCallbackSettingsResponse.Equals(TextMagicClient.Model.GetCallbackSettingsResponse)">
            <summary>
            Returns true if GetCallbackSettingsResponse instances are equal
            </summary>
            <param name="input">Instance of GetCallbackSettingsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCallbackSettingsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCallbackSettingsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetCallbackSettingsResponse.Format">
            <summary>
            Desired callback data format. m - multipart/form-data, u - application/x-www-form-urlencoded, j - application/json.
            </summary>
            <value>Desired callback data format. m - multipart/form-data, u - application/x-www-form-urlencoded, j - application/json.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetCallbackSettingsResponse.OutUrl">
            <summary>
            This URL is used to push message delivery status updates to your application.
            </summary>
            <value>This URL is used to push message delivery status updates to your application.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetCallbackSettingsResponse.InUrl">
            <summary>
            This URL is used to push incoming SMS to your application.
            </summary>
            <value>This URL is used to push incoming SMS to your application.</value>
        </member>
        <member name="T:TextMagicClient.Model.GetCallbackSettingsResponse.FormatEnum">
            <summary>
            Desired callback data format. m - multipart/form-data, u - application/x-www-form-urlencoded, j - application/json.
            </summary>
            <value>Desired callback data format. m - multipart/form-data, u - application/x-www-form-urlencoded, j - application/json.</value>
        </member>
        <member name="F:TextMagicClient.Model.GetCallbackSettingsResponse.FormatEnum.M">
            <summary>
            Enum M for value: m
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.GetCallbackSettingsResponse.FormatEnum.U">
            <summary>
            Enum U for value: u
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.GetCallbackSettingsResponse.FormatEnum.J">
            <summary>
            Enum J for value: j
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetCallsPricesResponse">
            <summary>
            GetCallsPricesResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetCallsPricesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetCallsPricesResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetCallsPricesResponse.#ctor(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetCallsPricesResponse"/> class.
            </summary>
            <param name="outbound">Price for outbound message. (required).</param>
            <param name="inbound">Price for inbound message. (required).</param>
            <param name="forward">Price for forward. (required).</param>
            <param name="country">2-letter ISO country code for local phone numbers, used when local is  set to true. Default is account country. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetCallsPricesResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCallsPricesResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCallsPricesResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCallsPricesResponse.Equals(TextMagicClient.Model.GetCallsPricesResponse)">
            <summary>
            Returns true if GetCallsPricesResponse instances are equal
            </summary>
            <param name="input">Instance of GetCallsPricesResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCallsPricesResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCallsPricesResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetCallsPricesResponse.Outbound">
            <summary>
            Price for outbound message.
            </summary>
            <value>Price for outbound message.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetCallsPricesResponse.Inbound">
            <summary>
            Price for inbound message.
            </summary>
            <value>Price for inbound message.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetCallsPricesResponse.Forward">
            <summary>
            Price for forward.
            </summary>
            <value>Price for forward.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetCallsPricesResponse.Country">
            <summary>
            2-letter ISO country code for local phone numbers, used when local is  set to true. Default is account country.
            </summary>
            <value>2-letter ISO country code for local phone numbers, used when local is  set to true. Default is account country.</value>
        </member>
        <member name="T:TextMagicClient.Model.GetChatMessagesPaginatedResponse">
            <summary>
            GetChatMessagesPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetChatMessagesPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetChatMessagesPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetChatMessagesPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.Conversation})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetChatMessagesPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetChatMessagesPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetChatMessagesPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetChatMessagesPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetChatMessagesPaginatedResponse.Equals(TextMagicClient.Model.GetChatMessagesPaginatedResponse)">
            <summary>
            Returns true if GetChatMessagesPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetChatMessagesPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetChatMessagesPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetChatMessagesPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetChatMessagesPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetChatMessagesPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetChatMessagesPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetChatMessagesPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetContactImportSessionProgressResponse">
            <summary>
            GetContactImportSessionProgressResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetContactImportSessionProgressResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetContactImportSessionProgressResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetContactImportSessionProgressResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetContactImportSessionProgressResponse"/> class.
            </summary>
            <param name="status">Session status: * **1** - if session has been initialized but not yet started; * **3** - if session is being processed; * **4** - if session has errors; * **5** - if session completed successfully.  (required).</param>
            <param name="processed">How many contacts have been imported? (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetContactImportSessionProgressResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactImportSessionProgressResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactImportSessionProgressResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactImportSessionProgressResponse.Equals(TextMagicClient.Model.GetContactImportSessionProgressResponse)">
            <summary>
            Returns true if GetContactImportSessionProgressResponse instances are equal
            </summary>
            <param name="input">Instance of GetContactImportSessionProgressResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactImportSessionProgressResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactImportSessionProgressResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetContactImportSessionProgressResponse.Status">
            <summary>
            Session status: * **1** - if session has been initialized but not yet started; * **3** - if session is being processed; * **4** - if session has errors; * **5** - if session completed successfully. 
            </summary>
            <value>Session status: * **1** - if session has been initialized but not yet started; * **3** - if session is being processed; * **4** - if session has errors; * **5** - if session completed successfully. </value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactImportSessionProgressResponse.Processed">
            <summary>
            How many contacts have been imported?
            </summary>
            <value>How many contacts have been imported?</value>
        </member>
        <member name="T:TextMagicClient.Model.GetContactNotesPaginatedResponse">
            <summary>
            GetContactNotesPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetContactNotesPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetContactNotesPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetContactNotesPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.ContactNote})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetContactNotesPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetContactNotesPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactNotesPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactNotesPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactNotesPaginatedResponse.Equals(TextMagicClient.Model.GetContactNotesPaginatedResponse)">
            <summary>
            Returns true if GetContactNotesPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetContactNotesPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactNotesPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactNotesPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetContactNotesPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetContactNotesPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactNotesPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactNotesPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetContactsAutocompleteResponse">
            <summary>
            GetContactsAutocompleteResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsAutocompleteResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetContactsAutocompleteResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsAutocompleteResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsAutocompleteResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsAutocompleteResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsAutocompleteResponse.Equals(TextMagicClient.Model.GetContactsAutocompleteResponse)">
            <summary>
            Returns true if GetContactsAutocompleteResponse instances are equal
            </summary>
            <param name="input">Instance of GetContactsAutocompleteResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsAutocompleteResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsAutocompleteResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:TextMagicClient.Model.GetContactsAutocompleteResponseItem">
            <summary>
            GetContactsAutocompleteResponseItem
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsAutocompleteResponseItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetContactsAutocompleteResponseItem"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsAutocompleteResponseItem.#ctor(System.Nullable{System.Int32},TextMagicClient.Model.GetContactsAutocompleteResponseItem.EntityTypeEnum,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetContactsAutocompleteResponseItem"/> class.
            </summary>
            <param name="entityId">Id of entity. 0 if object is a reply. (required).</param>
            <param name="entityType">Entry type: * **contact** if it is related to a contact; * **list** if it is related to a contact list; * **reply** if it is related to an incoming message.  (required).</param>
            <param name="value">ID of the contact/list if entityType is contact/list OR phone number if entityType is reply. (required).</param>
            <param name="label">Name of the contact/list if entityType is contact/list OR phone number if entityType is reply. (required).</param>
            <param name="sharedBy">If contact or list was shared by another sub-account, the name of this user will be shown. (required).</param>
            <param name="isShared">If contact or list was shared by another sub-account then `true` will be set. (required).</param>
            <param name="avatar">Contact avatar URI. (required).</param>
            <param name="favorited">If contact has been marked as favorite. (required).</param>
            <param name="userId">Owner ID of the contact/list (if it was shared). (required).</param>
            <param name="countryName">countryName (required).</param>
            <param name="qposition">qposition (required).</param>
            <param name="rposition">rposition (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsAutocompleteResponseItem.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsAutocompleteResponseItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsAutocompleteResponseItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsAutocompleteResponseItem.Equals(TextMagicClient.Model.GetContactsAutocompleteResponseItem)">
            <summary>
            Returns true if GetContactsAutocompleteResponseItem instances are equal
            </summary>
            <param name="input">Instance of GetContactsAutocompleteResponseItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsAutocompleteResponseItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsAutocompleteResponseItem.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsAutocompleteResponseItem.EntityType">
            <summary>
            Entry type: * **contact** if it is related to a contact; * **list** if it is related to a contact list; * **reply** if it is related to an incoming message. 
            </summary>
            <value>Entry type: * **contact** if it is related to a contact; * **list** if it is related to a contact list; * **reply** if it is related to an incoming message. </value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsAutocompleteResponseItem.EntityId">
            <summary>
            Id of entity. 0 if object is a reply.
            </summary>
            <value>Id of entity. 0 if object is a reply.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsAutocompleteResponseItem.Value">
            <summary>
            ID of the contact/list if entityType is contact/list OR phone number if entityType is reply.
            </summary>
            <value>ID of the contact/list if entityType is contact/list OR phone number if entityType is reply.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsAutocompleteResponseItem.Label">
            <summary>
            Name of the contact/list if entityType is contact/list OR phone number if entityType is reply.
            </summary>
            <value>Name of the contact/list if entityType is contact/list OR phone number if entityType is reply.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsAutocompleteResponseItem.SharedBy">
            <summary>
            If contact or list was shared by another sub-account, the name of this user will be shown.
            </summary>
            <value>If contact or list was shared by another sub-account, the name of this user will be shown.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsAutocompleteResponseItem.IsShared">
            <summary>
            If contact or list was shared by another sub-account then &#x60;true&#x60; will be set.
            </summary>
            <value>If contact or list was shared by another sub-account then &#x60;true&#x60; will be set.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsAutocompleteResponseItem.Avatar">
            <summary>
            Contact avatar URI.
            </summary>
            <value>Contact avatar URI.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsAutocompleteResponseItem.Favorited">
            <summary>
            If contact has been marked as favorite.
            </summary>
            <value>If contact has been marked as favorite.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsAutocompleteResponseItem.UserId">
            <summary>
            Owner ID of the contact/list (if it was shared).
            </summary>
            <value>Owner ID of the contact/list (if it was shared).</value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsAutocompleteResponseItem.CountryName">
            <summary>
            Gets or Sets CountryName
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsAutocompleteResponseItem.Qposition">
            <summary>
            Gets or Sets Qposition
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsAutocompleteResponseItem.Rposition">
            <summary>
            Gets or Sets Rposition
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetContactsAutocompleteResponseItem.EntityTypeEnum">
            <summary>
            Entry type: * **contact** if it is related to a contact; * **list** if it is related to a contact list; * **reply** if it is related to an incoming message. 
            </summary>
            <value>Entry type: * **contact** if it is related to a contact; * **list** if it is related to a contact list; * **reply** if it is related to an incoming message. </value>
        </member>
        <member name="F:TextMagicClient.Model.GetContactsAutocompleteResponseItem.EntityTypeEnum.Reply">
            <summary>
            Enum Reply for value: reply
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.GetContactsAutocompleteResponseItem.EntityTypeEnum.Contact">
            <summary>
            Enum Contact for value: contact
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.GetContactsAutocompleteResponseItem.EntityTypeEnum.List">
            <summary>
            Enum List for value: list
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetContactsByListIdPaginatedResponse">
            <summary>
            GetContactsByListIdPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsByListIdPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetContactsByListIdPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsByListIdPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.Contact})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetContactsByListIdPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsByListIdPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsByListIdPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsByListIdPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsByListIdPaginatedResponse.Equals(TextMagicClient.Model.GetContactsByListIdPaginatedResponse)">
            <summary>
            Returns true if GetContactsByListIdPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetContactsByListIdPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsByListIdPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsByListIdPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsByListIdPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsByListIdPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsByListIdPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsByListIdPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetContactsPaginatedResponse">
            <summary>
            GetContactsPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetContactsPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.Contact})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetContactsPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsPaginatedResponse.Equals(TextMagicClient.Model.GetContactsPaginatedResponse)">
            <summary>
            Returns true if GetContactsPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetContactsPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetContactsPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetContactsPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetCountriesResponse">
            <summary>
            GetCountriesResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetCountriesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetCountriesResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetCountriesResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCountriesResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCountriesResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCountriesResponse.Equals(TextMagicClient.Model.GetCountriesResponse)">
            <summary>
            Returns true if GetCountriesResponse instances are equal
            </summary>
            <param name="input">Instance of GetCountriesResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCountriesResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCountriesResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:TextMagicClient.Model.GetCustomFieldsPaginatedResponse">
            <summary>
            GetCustomFieldsPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetCustomFieldsPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetCustomFieldsPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetCustomFieldsPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.UserCustomField})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetCustomFieldsPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetCustomFieldsPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCustomFieldsPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCustomFieldsPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCustomFieldsPaginatedResponse.Equals(TextMagicClient.Model.GetCustomFieldsPaginatedResponse)">
            <summary>
            Returns true if GetCustomFieldsPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetCustomFieldsPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCustomFieldsPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetCustomFieldsPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetCustomFieldsPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetCustomFieldsPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetCustomFieldsPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetCustomFieldsPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetDisallowedRulesResponse">
            <summary>
            GetDisallowedRulesResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetDisallowedRulesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetDisallowedRulesResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetDisallowedRulesResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetDisallowedRulesResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetDisallowedRulesResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetDisallowedRulesResponse.Equals(TextMagicClient.Model.GetDisallowedRulesResponse)">
            <summary>
            Returns true if GetDisallowedRulesResponse instances are equal
            </summary>
            <param name="input">Instance of GetDisallowedRulesResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetDisallowedRulesResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetDisallowedRulesResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:TextMagicClient.Model.GetFavoritesPaginatedResponse">
            <summary>
            GetFavoritesPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetFavoritesPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetFavoritesPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetFavoritesPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.FavoriteContact})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetFavoritesPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetFavoritesPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetFavoritesPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetFavoritesPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetFavoritesPaginatedResponse.Equals(TextMagicClient.Model.GetFavoritesPaginatedResponse)">
            <summary>
            Returns true if GetFavoritesPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetFavoritesPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetFavoritesPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetFavoritesPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetFavoritesPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetFavoritesPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetFavoritesPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetFavoritesPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse">
            <summary>
            GetInboundMessagesNotificationSettingsResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse"/> class.
            </summary>
            <param name="inboundMessageNotification">Should user receive notification about new incoming messages. (required).</param>
            <param name="forwardedCallNotification">Should user receive notification about new forwarded calls. (required).</param>
            <param name="includeSmsHistory">Include SMS history into notification Email. (required).</param>
            <param name="sendInHtmlFormat">Send Email notification in HTML format. (required).</param>
            <param name="alertEmail1">New message notification email 1. (required).</param>
            <param name="alertEmail2">New message notification email 2. (required).</param>
            <param name="alertEmail3">New message notification email 3. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse.Equals(TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse)">
            <summary>
            Returns true if GetInboundMessagesNotificationSettingsResponse instances are equal
            </summary>
            <param name="input">Instance of GetInboundMessagesNotificationSettingsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse.InboundMessageNotification">
            <summary>
            Should user receive notification about new incoming messages.
            </summary>
            <value>Should user receive notification about new incoming messages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse.ForwardedCallNotification">
            <summary>
            Should user receive notification about new forwarded calls.
            </summary>
            <value>Should user receive notification about new forwarded calls.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse.IncludeSmsHistory">
            <summary>
            Include SMS history into notification Email.
            </summary>
            <value>Include SMS history into notification Email.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse.SendInHtmlFormat">
            <summary>
            Send Email notification in HTML format.
            </summary>
            <value>Send Email notification in HTML format.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse.AlertEmail1">
            <summary>
            New message notification email 1.
            </summary>
            <value>New message notification email 1.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse.AlertEmail2">
            <summary>
            New message notification email 2.
            </summary>
            <value>New message notification email 2.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetInboundMessagesNotificationSettingsResponse.AlertEmail3">
            <summary>
            New message notification email 3.
            </summary>
            <value>New message notification email 3.</value>
        </member>
        <member name="T:TextMagicClient.Model.GetInvoicesPaginatedResponse">
            <summary>
            GetInvoicesPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetInvoicesPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetInvoicesPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetInvoicesPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.Invoice})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetInvoicesPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetInvoicesPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetInvoicesPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetInvoicesPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetInvoicesPaginatedResponse.Equals(TextMagicClient.Model.GetInvoicesPaginatedResponse)">
            <summary>
            Returns true if GetInvoicesPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetInvoicesPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetInvoicesPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetInvoicesPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetInvoicesPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetInvoicesPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetInvoicesPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetInvoicesPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetListContactsIdsResponse">
            <summary>
            GetListContactsIdsResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetListContactsIdsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetListContactsIdsResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetListContactsIdsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetListContactsIdsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetListContactsIdsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetListContactsIdsResponse.Equals(TextMagicClient.Model.GetListContactsIdsResponse)">
            <summary>
            Returns true if GetListContactsIdsResponse instances are equal
            </summary>
            <param name="input">Instance of GetListContactsIdsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetListContactsIdsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetListContactsIdsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:TextMagicClient.Model.GetListsOfContactPaginatedResponse">
            <summary>
            GetListsOfContactPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetListsOfContactPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetListsOfContactPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetListsOfContactPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.List})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetListsOfContactPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetListsOfContactPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetListsOfContactPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetListsOfContactPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetListsOfContactPaginatedResponse.Equals(TextMagicClient.Model.GetListsOfContactPaginatedResponse)">
            <summary>
            Returns true if GetListsOfContactPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetListsOfContactPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetListsOfContactPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetListsOfContactPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetListsOfContactPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetListsOfContactPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetListsOfContactPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetListsOfContactPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetListsPaginatedResponse">
            <summary>
            GetListsPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetListsPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetListsPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetListsPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.List})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetListsPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetListsPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetListsPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetListsPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetListsPaginatedResponse.Equals(TextMagicClient.Model.GetListsPaginatedResponse)">
            <summary>
            Returns true if GetListsPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetListsPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetListsPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetListsPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetListsPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetListsPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetListsPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetListsPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetMessagePreviewResponse">
            <summary>
            GetMessagePreviewResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePreviewResponse.#ctor(System.Collections.Generic.List{TextMagicClient.Model.MessageOut})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetMessagePreviewResponse"/> class.
            </summary>
            <param name="messages">messages.</param>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePreviewResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePreviewResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePreviewResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePreviewResponse.Equals(TextMagicClient.Model.GetMessagePreviewResponse)">
            <summary>
            Returns true if GetMessagePreviewResponse instances are equal
            </summary>
            <param name="input">Instance of GetMessagePreviewResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePreviewResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePreviewResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagePreviewResponse.Messages">
            <summary>
            Gets or Sets Messages
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetMessagePriceResponse">
            <summary>
            GetMessagePriceResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetMessagePriceResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponse.#ctor(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.GetMessagePriceResponseCountriesItem})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetMessagePriceResponse"/> class.
            </summary>
            <param name="total">Total price of the message. (required).</param>
            <param name="parts">Message parts (multiples of 160 characters) count. (required).</param>
            <param name="countries">countries (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponse.Equals(TextMagicClient.Model.GetMessagePriceResponse)">
            <summary>
            Returns true if GetMessagePriceResponse instances are equal
            </summary>
            <param name="input">Instance of GetMessagePriceResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagePriceResponse.Total">
            <summary>
            Total price of the message.
            </summary>
            <value>Total price of the message.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagePriceResponse.Parts">
            <summary>
            Message parts (multiples of 160 characters) count.
            </summary>
            <value>Message parts (multiples of 160 characters) count.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagePriceResponse.Countries">
            <summary>
            Gets or Sets Countries
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetMessagePriceResponseCountriesItem">
            <summary>
            GetMessagePriceResponseCountriesItem
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponseCountriesItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetMessagePriceResponseCountriesItem"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponseCountriesItem.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetMessagePriceResponseCountriesItem"/> class.
            </summary>
            <param name="country">The 2-letter ISO country code. (required).</param>
            <param name="countryName">Country name. (required).</param>
            <param name="allowDedicated">Is allowed to use a dedicated number? (required).</param>
            <param name="count">Parts count to send. (required).</param>
            <param name="max">Maximum parts to send. (required).</param>
            <param name="sum">Total price to send. (required).</param>
            <param name="landline">Is this a landline number? (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponseCountriesItem.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponseCountriesItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponseCountriesItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponseCountriesItem.Equals(TextMagicClient.Model.GetMessagePriceResponseCountriesItem)">
            <summary>
            Returns true if GetMessagePriceResponseCountriesItem instances are equal
            </summary>
            <param name="input">Instance of GetMessagePriceResponseCountriesItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponseCountriesItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePriceResponseCountriesItem.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagePriceResponseCountriesItem.Country">
            <summary>
            The 2-letter ISO country code.
            </summary>
            <value>The 2-letter ISO country code.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagePriceResponseCountriesItem.CountryName">
            <summary>
            Country name.
            </summary>
            <value>Country name.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagePriceResponseCountriesItem.AllowDedicated">
            <summary>
            Is allowed to use a dedicated number?
            </summary>
            <value>Is allowed to use a dedicated number?</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagePriceResponseCountriesItem.Count">
            <summary>
            Parts count to send.
            </summary>
            <value>Parts count to send.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagePriceResponseCountriesItem.Max">
            <summary>
            Maximum parts to send.
            </summary>
            <value>Maximum parts to send.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagePriceResponseCountriesItem.Sum">
            <summary>
            Total price to send.
            </summary>
            <value>Total price to send.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagePriceResponseCountriesItem.Landline">
            <summary>
            Is this a landline number?
            </summary>
            <value>Is this a landline number?</value>
        </member>
        <member name="T:TextMagicClient.Model.GetMessagePricesResponse">
            <summary>
            GetMessagePricesResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePricesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetMessagePricesResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePricesResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePricesResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePricesResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePricesResponse.Equals(TextMagicClient.Model.GetMessagePricesResponse)">
            <summary>
            Returns true if GetMessagePricesResponse instances are equal
            </summary>
            <param name="input">Instance of GetMessagePricesResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePricesResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagePricesResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse">
            <summary>
            GetMessagesBySessionIdPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.MessageOut})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse.Equals(TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse)">
            <summary>
            Returns true if GetMessagesBySessionIdPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetMessagesBySessionIdPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagesBySessionIdPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetMessageSessionStatResponse">
            <summary>
            GetMessageSessionStatResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetMessageSessionStatResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetMessageSessionStatResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetMessageSessionStatResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetMessageSessionStatResponse"/> class.
            </summary>
            <param name="failed">Amount of failed messages. (required).</param>
            <param name="delivered">Amount of delivered messages. (required).</param>
            <param name="accepted">Amount of accepted messages. (required).</param>
            <param name="rejected">Amount of rejected messages. (required).</param>
            <param name="scheduled">Amount of scheduled messages. (required).</param>
            <param name="all">Total amount of messages. (required).</param>
            <param name="sent">Amount of sent but not yet delivered messages. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetMessageSessionStatResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessageSessionStatResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessageSessionStatResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessageSessionStatResponse.Equals(TextMagicClient.Model.GetMessageSessionStatResponse)">
            <summary>
            Returns true if GetMessageSessionStatResponse instances are equal
            </summary>
            <param name="input">Instance of GetMessageSessionStatResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessageSessionStatResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessageSessionStatResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetMessageSessionStatResponse.Failed">
            <summary>
            Amount of failed messages.
            </summary>
            <value>Amount of failed messages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessageSessionStatResponse.Delivered">
            <summary>
            Amount of delivered messages.
            </summary>
            <value>Amount of delivered messages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessageSessionStatResponse.Accepted">
            <summary>
            Amount of accepted messages.
            </summary>
            <value>Amount of accepted messages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessageSessionStatResponse.Rejected">
            <summary>
            Amount of rejected messages.
            </summary>
            <value>Amount of rejected messages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessageSessionStatResponse.Scheduled">
            <summary>
            Amount of scheduled messages.
            </summary>
            <value>Amount of scheduled messages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessageSessionStatResponse.All">
            <summary>
            Total amount of messages.
            </summary>
            <value>Total amount of messages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessageSessionStatResponse.Sent">
            <summary>
            Amount of sent but not yet delivered messages.
            </summary>
            <value>Amount of sent but not yet delivered messages.</value>
        </member>
        <member name="T:TextMagicClient.Model.GetMessagingCountersResponse">
            <summary>
            GetMessagingCountersResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagingCountersResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetMessagingCountersResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagingCountersResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetMessagingCountersResponse"/> class.
            </summary>
            <param name="contacts">Total contacts amount. (required).</param>
            <param name="sent">Total sent messages amount. (required).</param>
            <param name="received">Total received messages amount. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagingCountersResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagingCountersResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagingCountersResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagingCountersResponse.Equals(TextMagicClient.Model.GetMessagingCountersResponse)">
            <summary>
            Returns true if GetMessagingCountersResponse instances are equal
            </summary>
            <param name="input">Instance of GetMessagingCountersResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagingCountersResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagingCountersResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagingCountersResponse.Contacts">
            <summary>
            Total contacts amount.
            </summary>
            <value>Total contacts amount.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagingCountersResponse.Sent">
            <summary>
            Total sent messages amount.
            </summary>
            <value>Total sent messages amount.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetMessagingCountersResponse.Received">
            <summary>
            Total received messages amount.
            </summary>
            <value>Total received messages amount.</value>
        </member>
        <member name="T:TextMagicClient.Model.GetMessagingStatResponse">
            <summary>
            GetMessagingStatResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagingStatResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetMessagingStatResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagingStatResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagingStatResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagingStatResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagingStatResponse.Equals(TextMagicClient.Model.GetMessagingStatResponse)">
            <summary>
            Returns true if GetMessagingStatResponse instances are equal
            </summary>
            <param name="input">Instance of GetMessagingStatResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagingStatResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetMessagingStatResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse">
            <summary>
            GetOutboundMessagesHistoryPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.MessageOut})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse"/> class.
            </summary>
            <param name="lastId">lastId (required).</param>
            <param name="nextLastId">nextLastId (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse.Equals(TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse)">
            <summary>
            Returns true if GetOutboundMessagesHistoryPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetOutboundMessagesHistoryPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse.LastId">
            <summary>
            Gets or Sets LastId
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse.NextLastId">
            <summary>
            Gets or Sets NextLastId
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetOutboundMessagesHistoryPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetPushTokensResponse">
            <summary>
            GetPushTokensResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetPushTokensResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetPushTokensResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetPushTokensResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetPushTokensResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetPushTokensResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetPushTokensResponse.Equals(TextMagicClient.Model.GetPushTokensResponse)">
            <summary>
            Returns true if GetPushTokensResponse instances are equal
            </summary>
            <param name="input">Instance of GetPushTokensResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetPushTokensResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetPushTokensResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:TextMagicClient.Model.GetSenderIdsPaginatedResponse">
            <summary>
            GetSenderIdsPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderIdsPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetSenderIdsPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderIdsPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.SenderId})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetSenderIdsPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderIdsPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderIdsPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderIdsPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderIdsPaginatedResponse.Equals(TextMagicClient.Model.GetSenderIdsPaginatedResponse)">
            <summary>
            Returns true if GetSenderIdsPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetSenderIdsPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderIdsPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderIdsPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetSenderIdsPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetSenderIdsPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetSenderIdsPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetSenderIdsPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetSenderSettingsResponse">
            <summary>
            GetSenderSettingsResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderSettingsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetSenderSettingsResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderSettingsResponse.#ctor(System.Collections.Generic.List{TextMagicClient.Model.SenderSettingsItem},System.Collections.Generic.List{TextMagicClient.Model.SenderSettingsItem},System.Collections.Generic.List{TextMagicClient.Model.SenderSettingsItem})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetSenderSettingsResponse"/> class.
            </summary>
            <param name="user">user (required).</param>
            <param name="special">special (required).</param>
            <param name="other">other (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderSettingsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderSettingsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderSettingsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderSettingsResponse.Equals(TextMagicClient.Model.GetSenderSettingsResponse)">
            <summary>
            Returns true if GetSenderSettingsResponse instances are equal
            </summary>
            <param name="input">Instance of GetSenderSettingsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderSettingsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSenderSettingsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetSenderSettingsResponse.User">
            <summary>
            Gets or Sets User
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetSenderSettingsResponse.Special">
            <summary>
            Gets or Sets Special
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetSenderSettingsResponse.Other">
            <summary>
            Gets or Sets Other
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetSpendingStatPaginatedResponse">
            <summary>
            GetSpendingStatPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetSpendingStatPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetSpendingStatPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetSpendingStatPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.UserStatement})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetSpendingStatPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetSpendingStatPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSpendingStatPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSpendingStatPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSpendingStatPaginatedResponse.Equals(TextMagicClient.Model.GetSpendingStatPaginatedResponse)">
            <summary>
            Returns true if GetSpendingStatPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetSpendingStatPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSpendingStatPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSpendingStatPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetSpendingStatPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetSpendingStatPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetSpendingStatPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetSpendingStatPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetStateResponse">
            <summary>
            GetStateResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetStateResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetStateResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetStateResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetStateResponse"/> class.
            </summary>
            <param name="systemCacheClear">systemCacheClear (required).</param>
            <param name="systemExit">systemExit (required).</param>
            <param name="systemAlert">systemAlert (required).</param>
            <param name="systemAccountStateChanged">systemAccountStateChanged (required).</param>
            <param name="messageDeleted">messageDeleted (required).</param>
            <param name="messageIncoming">messageIncoming (required).</param>
            <param name="messageIncomingDeleted">messageIncomingDeleted (required).</param>
            <param name="messageStateChanged">messageStateChanged (required).</param>
            <param name="messageBulkEnd">messageBulkEnd (required).</param>
            <param name="messageWipeEnd">messageWipeEnd (required).</param>
            <param name="messageSent">messageSent (required).</param>
            <param name="messageSessionDeleted">messageSessionDeleted (required).</param>
            <param name="messageCacheClear">messageCacheClear (required).</param>
            <param name="messageIncomingCacheClear">messageIncomingCacheClear (required).</param>
            <param name="messageScheduleAdded">messageScheduleAdded (required).</param>
            <param name="messageScheduleStateChanged">messageScheduleStateChanged (required).</param>
            <param name="messageScheduleDeleted">messageScheduleDeleted (required).</param>
            <param name="messageScheduleCacheClear">messageScheduleCacheClear (required).</param>
            <param name="messageTemplateCacheClear">messageTemplateCacheClear (required).</param>
            <param name="callFinished">callFinished (required).</param>
            <param name="chatCreated">chatCreated (required).</param>
            <param name="chatMarkedAsRead">chatMarkedAsRead (required).</param>
            <param name="chatMuted">chatMuted (required).</param>
            <param name="chatUnmuted">chatUnmuted (required).</param>
            <param name="chatPinned">chatPinned (required).</param>
            <param name="chatUnpinned">chatUnpinned (required).</param>
            <param name="chatDeleted">chatDeleted (required).</param>
            <param name="chatClosed">chatClosed (required).</param>
            <param name="chatReopened">chatReopened (required).</param>
            <param name="chatCacheClear">chatCacheClear (required).</param>
            <param name="contactAdded">contactAdded (required).</param>
            <param name="contactDeleted">contactDeleted (required).</param>
            <param name="contactStateChanged">contactStateChanged (required).</param>
            <param name="listAdded">listAdded (required).</param>
            <param name="listDeleted">listDeleted (required).</param>
            <param name="listStateChanged">listStateChanged (required).</param>
            <param name="contactWipeEnd">contactWipeEnd (required).</param>
            <param name="contactImportEnd">contactImportEnd (required).</param>
            <param name="contactCacheClear">contactCacheClear (required).</param>
            <param name="listCacheClear">listCacheClear (required).</param>
            <param name="customFieldsCacheClear">customFieldsCacheClear (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetStateResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetStateResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetStateResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetStateResponse.Equals(TextMagicClient.Model.GetStateResponse)">
            <summary>
            Returns true if GetStateResponse instances are equal
            </summary>
            <param name="input">Instance of GetStateResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetStateResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetStateResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.SystemCacheClear">
            <summary>
            Gets or Sets SystemCacheClear
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.SystemExit">
            <summary>
            Gets or Sets SystemExit
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.SystemAlert">
            <summary>
            Gets or Sets SystemAlert
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.SystemAccountStateChanged">
            <summary>
            Gets or Sets SystemAccountStateChanged
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.MessageDeleted">
            <summary>
            Gets or Sets MessageDeleted
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.MessageIncoming">
            <summary>
            Gets or Sets MessageIncoming
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.MessageIncomingDeleted">
            <summary>
            Gets or Sets MessageIncomingDeleted
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.MessageStateChanged">
            <summary>
            Gets or Sets MessageStateChanged
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.MessageBulkEnd">
            <summary>
            Gets or Sets MessageBulkEnd
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.MessageWipeEnd">
            <summary>
            Gets or Sets MessageWipeEnd
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.MessageSent">
            <summary>
            Gets or Sets MessageSent
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.MessageSessionDeleted">
            <summary>
            Gets or Sets MessageSessionDeleted
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.MessageCacheClear">
            <summary>
            Gets or Sets MessageCacheClear
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.MessageIncomingCacheClear">
            <summary>
            Gets or Sets MessageIncomingCacheClear
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.MessageScheduleAdded">
            <summary>
            Gets or Sets MessageScheduleAdded
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.MessageScheduleStateChanged">
            <summary>
            Gets or Sets MessageScheduleStateChanged
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.MessageScheduleDeleted">
            <summary>
            Gets or Sets MessageScheduleDeleted
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.MessageScheduleCacheClear">
            <summary>
            Gets or Sets MessageScheduleCacheClear
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.MessageTemplateCacheClear">
            <summary>
            Gets or Sets MessageTemplateCacheClear
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.CallFinished">
            <summary>
            Gets or Sets CallFinished
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ChatCreated">
            <summary>
            Gets or Sets ChatCreated
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ChatMarkedAsRead">
            <summary>
            Gets or Sets ChatMarkedAsRead
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ChatMuted">
            <summary>
            Gets or Sets ChatMuted
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ChatUnmuted">
            <summary>
            Gets or Sets ChatUnmuted
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ChatPinned">
            <summary>
            Gets or Sets ChatPinned
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ChatUnpinned">
            <summary>
            Gets or Sets ChatUnpinned
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ChatDeleted">
            <summary>
            Gets or Sets ChatDeleted
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ChatClosed">
            <summary>
            Gets or Sets ChatClosed
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ChatReopened">
            <summary>
            Gets or Sets ChatReopened
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ChatCacheClear">
            <summary>
            Gets or Sets ChatCacheClear
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ContactAdded">
            <summary>
            Gets or Sets ContactAdded
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ContactDeleted">
            <summary>
            Gets or Sets ContactDeleted
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ContactStateChanged">
            <summary>
            Gets or Sets ContactStateChanged
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ListAdded">
            <summary>
            Gets or Sets ListAdded
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ListDeleted">
            <summary>
            Gets or Sets ListDeleted
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ListStateChanged">
            <summary>
            Gets or Sets ListStateChanged
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ContactWipeEnd">
            <summary>
            Gets or Sets ContactWipeEnd
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ContactImportEnd">
            <summary>
            Gets or Sets ContactImportEnd
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ContactCacheClear">
            <summary>
            Gets or Sets ContactCacheClear
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.ListCacheClear">
            <summary>
            Gets or Sets ListCacheClear
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetStateResponse.CustomFieldsCacheClear">
            <summary>
            Gets or Sets CustomFieldsCacheClear
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetSubaccountsWithTokensInputObject">
            <summary>
            GetSubaccountsWithTokensInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetSubaccountsWithTokensInputObject.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetSubaccountsWithTokensInputObject"/> class.
            </summary>
            <param name="appName">Application name..</param>
            <param name="password">Your account password..</param>
        </member>
        <member name="M:TextMagicClient.Model.GetSubaccountsWithTokensInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSubaccountsWithTokensInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSubaccountsWithTokensInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSubaccountsWithTokensInputObject.Equals(TextMagicClient.Model.GetSubaccountsWithTokensInputObject)">
            <summary>
            Returns true if GetSubaccountsWithTokensInputObject instances are equal
            </summary>
            <param name="input">Instance of GetSubaccountsWithTokensInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSubaccountsWithTokensInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSubaccountsWithTokensInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetSubaccountsWithTokensInputObject.AppName">
            <summary>
            Application name.
            </summary>
            <value>Application name.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetSubaccountsWithTokensInputObject.Password">
            <summary>
            Your account password.
            </summary>
            <value>Your account password.</value>
        </member>
        <member name="T:TextMagicClient.Model.GetSubaccountsWithTokensResponse">
            <summary>
            GetSubaccountsWithTokensResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetSubaccountsWithTokensResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetSubaccountsWithTokensResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetSubaccountsWithTokensResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSubaccountsWithTokensResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSubaccountsWithTokensResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSubaccountsWithTokensResponse.Equals(TextMagicClient.Model.GetSubaccountsWithTokensResponse)">
            <summary>
            Returns true if GetSubaccountsWithTokensResponse instances are equal
            </summary>
            <param name="input">Instance of GetSubaccountsWithTokensResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSubaccountsWithTokensResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSubaccountsWithTokensResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:TextMagicClient.Model.GetSurveyNodesResponse">
            <summary>
            GetSurveyNodesResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveyNodesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetSurveyNodesResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveyNodesResponse.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetSurveyNodesResponse"/> class.
            </summary>
            <param name="nodes">nodes (required).</param>
            <param name="rows">rows (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveyNodesResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveyNodesResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveyNodesResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveyNodesResponse.Equals(TextMagicClient.Model.GetSurveyNodesResponse)">
            <summary>
            Returns true if GetSurveyNodesResponse instances are equal
            </summary>
            <param name="input">Instance of GetSurveyNodesResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveyNodesResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveyNodesResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetSurveyNodesResponse.Nodes">
            <summary>
            Gets or Sets Nodes
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetSurveyNodesResponse.Rows">
            <summary>
            Gets or Sets Rows
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetSurveysPaginatedResponse">
            <summary>
            GetSurveysPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveysPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetSurveysPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveysPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.Survey})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetSurveysPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveysPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveysPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveysPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveysPaginatedResponse.Equals(TextMagicClient.Model.GetSurveysPaginatedResponse)">
            <summary>
            Returns true if GetSurveysPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetSurveysPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveysPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetSurveysPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetSurveysPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetSurveysPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetSurveysPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetSurveysPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetTimezonesResponse">
            <summary>
            GetTimezonesResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetTimezonesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetTimezonesResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetTimezonesResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetTimezonesResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetTimezonesResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetTimezonesResponse.Equals(TextMagicClient.Model.GetTimezonesResponse)">
            <summary>
            Returns true if GetTimezonesResponse instances are equal
            </summary>
            <param name="input">Instance of GetTimezonesResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetTimezonesResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetTimezonesResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:TextMagicClient.Model.GetUnreadMessagesTotalResponse">
            <summary>
            GetUnreadMessagesTotalResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetUnreadMessagesTotalResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetUnreadMessagesTotalResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetUnreadMessagesTotalResponse.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetUnreadMessagesTotalResponse"/> class.
            </summary>
            <param name="total">Amount of unread messages. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetUnreadMessagesTotalResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetUnreadMessagesTotalResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetUnreadMessagesTotalResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetUnreadMessagesTotalResponse.Equals(TextMagicClient.Model.GetUnreadMessagesTotalResponse)">
            <summary>
            Returns true if GetUnreadMessagesTotalResponse instances are equal
            </summary>
            <param name="input">Instance of GetUnreadMessagesTotalResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetUnreadMessagesTotalResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetUnreadMessagesTotalResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetUnreadMessagesTotalResponse.Total">
            <summary>
            Amount of unread messages.
            </summary>
            <value>Amount of unread messages.</value>
        </member>
        <member name="T:TextMagicClient.Model.GetUnsubscribersPaginatedResponse">
            <summary>
            GetUnsubscribersPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetUnsubscribersPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetUnsubscribersPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetUnsubscribersPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.UnsubscribedContact})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetUnsubscribersPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetUnsubscribersPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetUnsubscribersPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetUnsubscribersPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetUnsubscribersPaginatedResponse.Equals(TextMagicClient.Model.GetUnsubscribersPaginatedResponse)">
            <summary>
            Returns true if GetUnsubscribersPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetUnsubscribersPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetUnsubscribersPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetUnsubscribersPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetUnsubscribersPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetUnsubscribersPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetUnsubscribersPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetUnsubscribersPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse">
            <summary>
            GetUserDedicatedNumbersPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.UsersInbound})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse.Equals(TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse)">
            <summary>
            Returns true if GetUserDedicatedNumbersPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of GetUserDedicatedNumbersPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.GetUserDedicatedNumbersPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.GetVersionsResponse">
            <summary>
            GetVersionsResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetVersionsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetVersionsResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.GetVersionsResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.GetVersionsResponse"/> class.
            </summary>
            <param name="ios">ios (required).</param>
            <param name="android">android (required).</param>
            <param name="desktop">desktop (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.GetVersionsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetVersionsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetVersionsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetVersionsResponse.Equals(TextMagicClient.Model.GetVersionsResponse)">
            <summary>
            Returns true if GetVersionsResponse instances are equal
            </summary>
            <param name="input">Instance of GetVersionsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetVersionsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.GetVersionsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.GetVersionsResponse.Ios">
            <summary>
            Gets or Sets Ios
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetVersionsResponse.Android">
            <summary>
            Gets or Sets Android
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.GetVersionsResponse.Desktop">
            <summary>
            Gets or Sets Desktop
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.InviteSubaccountInputObject">
            <summary>
            InviteSubaccountInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.InviteSubaccountInputObject.#ctor(System.String,System.Nullable{TextMagicClient.Model.InviteSubaccountInputObject.RoleEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.InviteSubaccountInputObject"/> class.
            </summary>
            <param name="email">The invitation email will be sent to this email address..</param>
            <param name="role">Type of account: *   **A** for Administrator sub-account; *   **U** for Regular User. .</param>
        </member>
        <member name="M:TextMagicClient.Model.InviteSubaccountInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.InviteSubaccountInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.InviteSubaccountInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.InviteSubaccountInputObject.Equals(TextMagicClient.Model.InviteSubaccountInputObject)">
            <summary>
            Returns true if InviteSubaccountInputObject instances are equal
            </summary>
            <param name="input">Instance of InviteSubaccountInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.InviteSubaccountInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.InviteSubaccountInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.InviteSubaccountInputObject.Role">
            <summary>
            Type of account: *   **A** for Administrator sub-account; *   **U** for Regular User. 
            </summary>
            <value>Type of account: *   **A** for Administrator sub-account; *   **U** for Regular User. </value>
        </member>
        <member name="P:TextMagicClient.Model.InviteSubaccountInputObject.Email">
            <summary>
            The invitation email will be sent to this email address.
            </summary>
            <value>The invitation email will be sent to this email address.</value>
        </member>
        <member name="T:TextMagicClient.Model.InviteSubaccountInputObject.RoleEnum">
            <summary>
            Type of account: *   **A** for Administrator sub-account; *   **U** for Regular User. 
            </summary>
            <value>Type of account: *   **A** for Administrator sub-account; *   **U** for Regular User. </value>
        </member>
        <member name="F:TextMagicClient.Model.InviteSubaccountInputObject.RoleEnum.A">
            <summary>
            Enum A for value: A
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.InviteSubaccountInputObject.RoleEnum.U">
            <summary>
            Enum U for value: U
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.Invoice">
            <summary>
            Invoice
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Invoice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Invoice"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Invoice.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Single},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Invoice"/> class.
            </summary>
            <param name="id">The invoice ID. (required).</param>
            <param name="bundle">Top-up amount. (required).</param>
            <param name="currency">Top-up currency. (required).</param>
            <param name="vat">VAT charged (if any). (required).</param>
            <param name="paymentMethod">Payment method description. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.Invoice.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Invoice.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Invoice.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Invoice.Equals(TextMagicClient.Model.Invoice)">
            <summary>
            Returns true if Invoice instances are equal
            </summary>
            <param name="input">Instance of Invoice to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Invoice.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.Invoice.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.Invoice.Id">
            <summary>
            The invoice ID.
            </summary>
            <value>The invoice ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.Invoice.Bundle">
            <summary>
            Top-up amount.
            </summary>
            <value>Top-up amount.</value>
        </member>
        <member name="P:TextMagicClient.Model.Invoice.Currency">
            <summary>
            Top-up currency.
            </summary>
            <value>Top-up currency.</value>
        </member>
        <member name="P:TextMagicClient.Model.Invoice.Vat">
            <summary>
            VAT charged (if any).
            </summary>
            <value>VAT charged (if any).</value>
        </member>
        <member name="P:TextMagicClient.Model.Invoice.PaymentMethod">
            <summary>
            Payment method description.
            </summary>
            <value>Payment method description.</value>
        </member>
        <member name="T:TextMagicClient.Model.List">
            <summary>
            List
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.List.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.List"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.List.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},TextMagicClient.Model.User,System.Nullable{System.Boolean},System.Nullable{System.Boolean},TextMagicClient.Model.ListImage,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.List"/> class.
            </summary>
            <param name="id">List ID. (required).</param>
            <param name="name">List name. (required).</param>
            <param name="description">Description of the list. (required).</param>
            <param name="favorited">Is the List favorited? See [Favorites list](https://docs.textmagic.com/#operation/getFavourites). (required).</param>
            <param name="membersCount">List members count. (required).</param>
            <param name="user">user (required).</param>
            <param name="service">Internal service field. (required).</param>
            <param name="shared">Is the list **shared** among all sub-accounts? (required).</param>
            <param name="avatar">avatar (required).</param>
            <param name="isDefault">Indicates that List is used as a default. All new contacts added via the Web-app will be added in this List by default. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.List.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.List.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.List.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.List.Equals(TextMagicClient.Model.List)">
            <summary>
            Returns true if List instances are equal
            </summary>
            <param name="input">Instance of List to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.List.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.List.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.List.Id">
            <summary>
            List ID.
            </summary>
            <value>List ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.List.Name">
            <summary>
            List name.
            </summary>
            <value>List name.</value>
        </member>
        <member name="P:TextMagicClient.Model.List.Description">
            <summary>
            Description of the list.
            </summary>
            <value>Description of the list.</value>
        </member>
        <member name="P:TextMagicClient.Model.List.Favorited">
            <summary>
            Is the List favorited? See [Favorites list](https://docs.textmagic.com/#operation/getFavourites).
            </summary>
            <value>Is the List favorited? See [Favorites list](https://docs.textmagic.com/#operation/getFavourites).</value>
        </member>
        <member name="P:TextMagicClient.Model.List.MembersCount">
            <summary>
            List members count.
            </summary>
            <value>List members count.</value>
        </member>
        <member name="P:TextMagicClient.Model.List.User">
            <summary>
            Gets or Sets User
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.List.Service">
            <summary>
            Internal service field.
            </summary>
            <value>Internal service field.</value>
        </member>
        <member name="P:TextMagicClient.Model.List.Shared">
            <summary>
            Is the list **shared** among all sub-accounts?
            </summary>
            <value>Is the list **shared** among all sub-accounts?</value>
        </member>
        <member name="P:TextMagicClient.Model.List.Avatar">
            <summary>
            Gets or Sets Avatar
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.List.IsDefault">
            <summary>
            Indicates that List is used as a default. All new contacts added via the Web-app will be added in this List by default.
            </summary>
            <value>Indicates that List is used as a default. All new contacts added via the Web-app will be added in this List by default.</value>
        </member>
        <member name="T:TextMagicClient.Model.ListImage">
            <summary>
            ListImage
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.ListImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.ListImage"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.ListImage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.ListImage"/> class.
            </summary>
            <param name="href">The URI of a list avatar. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.ListImage.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.ListImage.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.ListImage.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.ListImage.Equals(TextMagicClient.Model.ListImage)">
            <summary>
            Returns true if ListImage instances are equal
            </summary>
            <param name="input">Instance of ListImage to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.ListImage.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.ListImage.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.ListImage.Href">
            <summary>
            The URI of a list avatar.
            </summary>
            <value>The URI of a list avatar.</value>
        </member>
        <member name="T:TextMagicClient.Model.MarkChatsReadBulkInputObject">
            <summary>
            MarkChatsReadBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MarkChatsReadBulkInputObject.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MarkChatsReadBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Entity ID(s), separated by comma..</param>
        </member>
        <member name="M:TextMagicClient.Model.MarkChatsReadBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MarkChatsReadBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MarkChatsReadBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MarkChatsReadBulkInputObject.Equals(TextMagicClient.Model.MarkChatsReadBulkInputObject)">
            <summary>
            Returns true if MarkChatsReadBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of MarkChatsReadBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MarkChatsReadBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.MarkChatsReadBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.MarkChatsReadBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.MarkChatsReadBulkInputObject.All">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="T:TextMagicClient.Model.MarkChatsUnreadBulkInputObject">
            <summary>
            MarkChatsUnreadBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MarkChatsUnreadBulkInputObject.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MarkChatsUnreadBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Entity ID(s), separated by comma..</param>
        </member>
        <member name="M:TextMagicClient.Model.MarkChatsUnreadBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MarkChatsUnreadBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MarkChatsUnreadBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MarkChatsUnreadBulkInputObject.Equals(TextMagicClient.Model.MarkChatsUnreadBulkInputObject)">
            <summary>
            Returns true if MarkChatsUnreadBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of MarkChatsUnreadBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MarkChatsUnreadBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.MarkChatsUnreadBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.MarkChatsUnreadBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.MarkChatsUnreadBulkInputObject.All">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="T:TextMagicClient.Model.MessageIn">
            <summary>
            MessageIn
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessageIn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessageIn"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessageIn.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessageIn"/> class.
            </summary>
            <param name="id">The ID of the inbound message. (required).</param>
            <param name="sender">The sender’s phone number. (required).</param>
            <param name="receiver">The receiver’s phone number (i.e. your dedicated or shared reply number). (required).</param>
            <param name="messageTime">The time when the message reached the TextMagic API endpoint. (required).</param>
            <param name="text">The text from the received message. (required).</param>
            <param name="contactId">Sender contact ID..</param>
            <param name="firstName">Sender contact first name..</param>
            <param name="lastName">Sender contact last name..</param>
            <param name="avatar">avatar (required).</param>
            <param name="email">Sender email..</param>
        </member>
        <member name="M:TextMagicClient.Model.MessageIn.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageIn.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageIn.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageIn.Equals(TextMagicClient.Model.MessageIn)">
            <summary>
            Returns true if MessageIn instances are equal
            </summary>
            <param name="input">Instance of MessageIn to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageIn.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageIn.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.MessageIn.Id">
            <summary>
            The ID of the inbound message.
            </summary>
            <value>The ID of the inbound message.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageIn.Sender">
            <summary>
            The sender’s phone number.
            </summary>
            <value>The sender’s phone number.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageIn.Receiver">
            <summary>
            The receiver’s phone number (i.e. your dedicated or shared reply number).
            </summary>
            <value>The receiver’s phone number (i.e. your dedicated or shared reply number).</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageIn.MessageTime">
            <summary>
            The time when the message reached the TextMagic API endpoint.
            </summary>
            <value>The time when the message reached the TextMagic API endpoint.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageIn.Text">
            <summary>
            The text from the received message.
            </summary>
            <value>The text from the received message.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageIn.ContactId">
            <summary>
            Sender contact ID.
            </summary>
            <value>Sender contact ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageIn.FirstName">
            <summary>
            Sender contact first name.
            </summary>
            <value>Sender contact first name.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageIn.LastName">
            <summary>
            Sender contact last name.
            </summary>
            <value>Sender contact last name.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageIn.Avatar">
            <summary>
            Gets or Sets Avatar
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.MessageIn.Email">
            <summary>
            Sender email.
            </summary>
            <value>Sender email.</value>
        </member>
        <member name="T:TextMagicClient.Model.MessageOut">
            <summary>
            MessageOut
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessageOut.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessageOut"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessageOut.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,TextMagicClient.Model.MessageOut.StatusEnum,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Single},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessageOut"/> class.
            </summary>
            <param name="id">Message ID. (required).</param>
            <param name="sender">Message sender (phone number or alphanumeric Sender ID)..</param>
            <param name="receiver">Recipient`s phone number..</param>
            <param name="text">text (required).</param>
            <param name="status">Delivery status of the message. See [message delivery statuses](https://docs.textmagic.com/#section/Delivery-status-codes) for details.  (required).</param>
            <param name="contactId">Recipient contact ID. (required).</param>
            <param name="sessionId">Message Session ID of a message. (required).</param>
            <param name="messageTime">Sending time. (required).</param>
            <param name="avatar">avatar (required).</param>
            <param name="deleted">Indicates that the message has been deleted..</param>
            <param name="charset">Message charset. Could be: *   **ISO-8859-1** for plaintext SMS; *   **UTF-16BE** for Unicode SMS.  (required).</param>
            <param name="charsetLabel">Human-readable message charset label. Could be: *   **ISO-8859-1** for plaintext SMS; *   **UTF-16BE** for Unicode SMS; *   **Voice** for voice services (Text-to-Speech or Voice Broadcast) messages.  (required).</param>
            <param name="firstName">Contact first name. Could be substituted from your [Contacts](https://docs.textmagic.com/#tag/Contacts) (even if you submitted the phone number instead of the contact ID).  (required).</param>
            <param name="lastName">Contact last name. (required).</param>
            <param name="country">The 2-letter ISO country code of the recipient's phone number.  (required).</param>
            <param name="phone">Receipent`s phone number..</param>
            <param name="price">Message price..</param>
            <param name="partsCount">Message parts (multiples of 160 characters) count. (required).</param>
            <param name="fromEmail">The user email which this message came from. For Email2SMS and Distribution Lists the messages, it is an original email address - in other cases, it is an account email address..</param>
            <param name="fromNumber">The Phone number used to send the SMS..</param>
        </member>
        <member name="M:TextMagicClient.Model.MessageOut.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageOut.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageOut.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageOut.Equals(TextMagicClient.Model.MessageOut)">
            <summary>
            Returns true if MessageOut instances are equal
            </summary>
            <param name="input">Instance of MessageOut to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageOut.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageOut.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.Status">
            <summary>
            Delivery status of the message. See [message delivery statuses](https://docs.textmagic.com/#section/Delivery-status-codes) for details. 
            </summary>
            <value>Delivery status of the message. See [message delivery statuses](https://docs.textmagic.com/#section/Delivery-status-codes) for details. </value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.Id">
            <summary>
            Message ID.
            </summary>
            <value>Message ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.Sender">
            <summary>
            Message sender (phone number or alphanumeric Sender ID).
            </summary>
            <value>Message sender (phone number or alphanumeric Sender ID).</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.Receiver">
            <summary>
            Recipient&#x60;s phone number.
            </summary>
            <value>Recipient&#x60;s phone number.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.Text">
            <summary>
            Gets or Sets Text
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.ContactId">
            <summary>
            Recipient contact ID.
            </summary>
            <value>Recipient contact ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.SessionId">
            <summary>
            Message Session ID of a message.
            </summary>
            <value>Message Session ID of a message.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.MessageTime">
            <summary>
            Sending time.
            </summary>
            <value>Sending time.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.Avatar">
            <summary>
            Gets or Sets Avatar
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.Deleted">
            <summary>
            Indicates that the message has been deleted.
            </summary>
            <value>Indicates that the message has been deleted.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.Charset">
            <summary>
            Message charset. Could be: *   **ISO-8859-1** for plaintext SMS; *   **UTF-16BE** for Unicode SMS. 
            </summary>
            <value>Message charset. Could be: *   **ISO-8859-1** for plaintext SMS; *   **UTF-16BE** for Unicode SMS. </value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.CharsetLabel">
            <summary>
            Human-readable message charset label. Could be: *   **ISO-8859-1** for plaintext SMS; *   **UTF-16BE** for Unicode SMS; *   **Voice** for voice services (Text-to-Speech or Voice Broadcast) messages. 
            </summary>
            <value>Human-readable message charset label. Could be: *   **ISO-8859-1** for plaintext SMS; *   **UTF-16BE** for Unicode SMS; *   **Voice** for voice services (Text-to-Speech or Voice Broadcast) messages. </value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.FirstName">
            <summary>
            Contact first name. Could be substituted from your [Contacts](https://docs.textmagic.com/#tag/Contacts) (even if you submitted the phone number instead of the contact ID). 
            </summary>
            <value>Contact first name. Could be substituted from your [Contacts](https://docs.textmagic.com/#tag/Contacts) (even if you submitted the phone number instead of the contact ID). </value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.LastName">
            <summary>
            Contact last name.
            </summary>
            <value>Contact last name.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.Country">
            <summary>
            The 2-letter ISO country code of the recipient&#39;s phone number. 
            </summary>
            <value>The 2-letter ISO country code of the recipient&#39;s phone number. </value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.Phone">
            <summary>
            Receipent&#x60;s phone number.
            </summary>
            <value>Receipent&#x60;s phone number.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.Price">
            <summary>
            Message price.
            </summary>
            <value>Message price.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.PartsCount">
            <summary>
            Message parts (multiples of 160 characters) count.
            </summary>
            <value>Message parts (multiples of 160 characters) count.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.FromEmail">
            <summary>
            The user email which this message came from. For Email2SMS and Distribution Lists the messages, it is an original email address - in other cases, it is an account email address.
            </summary>
            <value>The user email which this message came from. For Email2SMS and Distribution Lists the messages, it is an original email address - in other cases, it is an account email address.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageOut.FromNumber">
            <summary>
            The Phone number used to send the SMS.
            </summary>
            <value>The Phone number used to send the SMS.</value>
        </member>
        <member name="T:TextMagicClient.Model.MessageOut.StatusEnum">
            <summary>
            Delivery status of the message. See [message delivery statuses](https://docs.textmagic.com/#section/Delivery-status-codes) for details. 
            </summary>
            <value>Delivery status of the message. See [message delivery statuses](https://docs.textmagic.com/#section/Delivery-status-codes) for details. </value>
        </member>
        <member name="F:TextMagicClient.Model.MessageOut.StatusEnum.Q">
            <summary>
            Enum Q for value: q
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessageOut.StatusEnum.S">
            <summary>
            Enum S for value: s
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessageOut.StatusEnum.E">
            <summary>
            Enum E for value: e
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessageOut.StatusEnum.R">
            <summary>
            Enum R for value: r
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessageOut.StatusEnum.A">
            <summary>
            Enum A for value: a
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessageOut.StatusEnum.D">
            <summary>
            Enum D for value: d
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessageOut.StatusEnum.B">
            <summary>
            Enum B for value: b
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessageOut.StatusEnum.F">
            <summary>
            Enum F for value: f
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessageOut.StatusEnum.U">
            <summary>
            Enum U for value: u
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessageOut.StatusEnum.J">
            <summary>
            Enum J for value: j
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessageOut.StatusEnum.I">
            <summary>
            Enum I for value: i
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessageOut.StatusEnum.P">
            <summary>
            Enum P for value: p
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessageOut.StatusEnum.H">
            <summary>
            Enum H for value: h
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.MessagePriceItem">
            <summary>
            MessagePriceItem
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessagePriceItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessagePriceItem"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessagePriceItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessagePriceItem"/> class.
            </summary>
            <param name="name">Country name. (required).</param>
            <param name="price">Price to send message to desired country. (required).</param>
            <param name="country">The 2-letter ISO country code of the recipient's phone number. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.MessagePriceItem.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagePriceItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagePriceItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagePriceItem.Equals(TextMagicClient.Model.MessagePriceItem)">
            <summary>
            Returns true if MessagePriceItem instances are equal
            </summary>
            <param name="input">Instance of MessagePriceItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagePriceItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagePriceItem.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.MessagePriceItem.Name">
            <summary>
            Country name.
            </summary>
            <value>Country name.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagePriceItem.Price">
            <summary>
            Price to send message to desired country.
            </summary>
            <value>Price to send message to desired country.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagePriceItem.Country">
            <summary>
            The 2-letter ISO country code of the recipient&#39;s phone number.
            </summary>
            <value>The 2-letter ISO country code of the recipient&#39;s phone number.</value>
        </member>
        <member name="T:TextMagicClient.Model.MessageSession">
            <summary>
            MessageSession
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessageSession.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessageSession"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessageSession.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},TextMagicClient.Model.MessageSession.DestinationEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessageSession"/> class.
            </summary>
            <param name="id">Session ID. (required).</param>
            <param name="startTime">Session creation time. (required).</param>
            <param name="text">Session text. If a template was used for the session text (see [Messages: Send](https://docs.textmagic.com/#tag/Outbound-Messages) for details), it may contain template tags.  (required).</param>
            <param name="source">*   **O** – for TextMagic Online; *   **A** – for API; *   **M** – for TextMagic Messenger; *   **E** – for [Email to SMS](https://docs.textmagic.com/#tag/Send-Email-to-SMS); *   **X** – for [Distribution Lists](https://docs.textmagic.com/#tag/Distribution-Lists).  (required).</param>
            <param name="referenceId">Custom reference ID (see [Messages: Send](https://docs.textmagic.com/#tag/Send-Email-to-SMS) for details).  (required).</param>
            <param name="price">Session cost (in account currency). (required).</param>
            <param name="numbersCount">Session recipient count. (required).</param>
            <param name="destination">Destination type of a Message Session: * **t** – text SMS; * **s** – text-to-speech; * **v** – voice broadcast.  (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.MessageSession.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageSession.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageSession.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageSession.Equals(TextMagicClient.Model.MessageSession)">
            <summary>
            Returns true if MessageSession instances are equal
            </summary>
            <param name="input">Instance of MessageSession to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageSession.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageSession.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.MessageSession.Destination">
            <summary>
            Destination type of a Message Session: * **t** – text SMS; * **s** – text-to-speech; * **v** – voice broadcast. 
            </summary>
            <value>Destination type of a Message Session: * **t** – text SMS; * **s** – text-to-speech; * **v** – voice broadcast. </value>
        </member>
        <member name="P:TextMagicClient.Model.MessageSession.Id">
            <summary>
            Session ID.
            </summary>
            <value>Session ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageSession.StartTime">
            <summary>
            Session creation time.
            </summary>
            <value>Session creation time.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageSession.Text">
            <summary>
            Session text. If a template was used for the session text (see [Messages: Send](https://docs.textmagic.com/#tag/Outbound-Messages) for details), it may contain template tags. 
            </summary>
            <value>Session text. If a template was used for the session text (see [Messages: Send](https://docs.textmagic.com/#tag/Outbound-Messages) for details), it may contain template tags. </value>
        </member>
        <member name="P:TextMagicClient.Model.MessageSession.Source">
            <summary>
            *   **O** – for TextMagic Online; *   **A** – for API; *   **M** – for TextMagic Messenger; *   **E** – for [Email to SMS](https://docs.textmagic.com/#tag/Send-Email-to-SMS); *   **X** – for [Distribution Lists](https://docs.textmagic.com/#tag/Distribution-Lists). 
            </summary>
            <value>*   **O** – for TextMagic Online; *   **A** – for API; *   **M** – for TextMagic Messenger; *   **E** – for [Email to SMS](https://docs.textmagic.com/#tag/Send-Email-to-SMS); *   **X** – for [Distribution Lists](https://docs.textmagic.com/#tag/Distribution-Lists). </value>
        </member>
        <member name="P:TextMagicClient.Model.MessageSession.ReferenceId">
            <summary>
            Custom reference ID (see [Messages: Send](https://docs.textmagic.com/#tag/Send-Email-to-SMS) for details). 
            </summary>
            <value>Custom reference ID (see [Messages: Send](https://docs.textmagic.com/#tag/Send-Email-to-SMS) for details). </value>
        </member>
        <member name="P:TextMagicClient.Model.MessageSession.Price">
            <summary>
            Session cost (in account currency).
            </summary>
            <value>Session cost (in account currency).</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageSession.NumbersCount">
            <summary>
            Session recipient count.
            </summary>
            <value>Session recipient count.</value>
        </member>
        <member name="T:TextMagicClient.Model.MessageSession.DestinationEnum">
            <summary>
            Destination type of a Message Session: * **t** – text SMS; * **s** – text-to-speech; * **v** – voice broadcast. 
            </summary>
            <value>Destination type of a Message Session: * **t** – text SMS; * **s** – text-to-speech; * **v** – voice broadcast. </value>
        </member>
        <member name="F:TextMagicClient.Model.MessageSession.DestinationEnum.T">
            <summary>
            Enum T for value: t
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessageSession.DestinationEnum.S">
            <summary>
            Enum S for value: s
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessageSession.DestinationEnum.V">
            <summary>
            Enum V for value: v
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.MessagesIcs">
            <summary>
            MessagesIcs
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessagesIcs"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcs.#ctor(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,TextMagicClient.Model.MessageSession,System.Nullable{System.DateTime},System.String,TextMagicClient.Model.MessagesIcsParameters,TextMagicClient.Model.MessagesIcs.TypeEnum,System.String,TextMagicClient.Model.MessagesIcsTextParameters,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessagesIcs"/> class.
            </summary>
            <param name="id">Schedule ID. (required).</param>
            <param name="nextSend">The next send date in [ISO 8601](https://en.wikipedia.org/?title=ISO_8601) format.  (required).</param>
            <param name="rrule">[iCal RRULE](http://www.kanzaki.com/docs/ical/rrule.html) string.  (required).</param>
            <param name="session">session (required).</param>
            <param name="lastSent">The date and time when the last message was sent. (required).</param>
            <param name="contactName">Aggregated contact information. If the message was scheduled to be sent to a single contact, a full name will be returned here. Otherwise, a total amount of contacts will be returned. (required).</param>
            <param name="parameters">parameters (required).</param>
            <param name="type">type (required).</param>
            <param name="summary">A human-readable summary of the sending schedule. (required).</param>
            <param name="textParameters">textParameters (required).</param>
            <param name="firstOccurrence">First occurence date. (required).</param>
            <param name="lastOccurrence">Last occurence date (could be `null` if the schedule is endless). (required).</param>
            <param name="recipientsCount">Amount of actual recipients. (required).</param>
            <param name="timezone">User-friendly timezone name (with spaces replaced by underscores). (required).</param>
            <param name="completed">Indicates that scheduling has been completed. (required).</param>
            <param name="avatar">A relative link to the contact avatar. (required).</param>
            <param name="createdAt">Scheduling creation time. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcs.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcs.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcs.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcs.Equals(TextMagicClient.Model.MessagesIcs)">
            <summary>
            Returns true if MessagesIcs instances are equal
            </summary>
            <param name="input">Instance of MessagesIcs to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcs.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcs.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.Id">
            <summary>
            Schedule ID.
            </summary>
            <value>Schedule ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.NextSend">
            <summary>
            The next send date in [ISO 8601](https://en.wikipedia.org/?title&#x3D;ISO_8601) format. 
            </summary>
            <value>The next send date in [ISO 8601](https://en.wikipedia.org/?title&#x3D;ISO_8601) format. </value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.Rrule">
            <summary>
            [iCal RRULE](http://www.kanzaki.com/docs/ical/rrule.html) string. 
            </summary>
            <value>[iCal RRULE](http://www.kanzaki.com/docs/ical/rrule.html) string. </value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.Session">
            <summary>
            Gets or Sets Session
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.LastSent">
            <summary>
            The date and time when the last message was sent.
            </summary>
            <value>The date and time when the last message was sent.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.ContactName">
            <summary>
            Aggregated contact information. If the message was scheduled to be sent to a single contact, a full name will be returned here. Otherwise, a total amount of contacts will be returned.
            </summary>
            <value>Aggregated contact information. If the message was scheduled to be sent to a single contact, a full name will be returned here. Otherwise, a total amount of contacts will be returned.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.Parameters">
            <summary>
            Gets or Sets Parameters
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.Summary">
            <summary>
            A human-readable summary of the sending schedule.
            </summary>
            <value>A human-readable summary of the sending schedule.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.TextParameters">
            <summary>
            Gets or Sets TextParameters
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.FirstOccurrence">
            <summary>
            First occurence date.
            </summary>
            <value>First occurence date.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.LastOccurrence">
            <summary>
            Last occurence date (could be &#x60;null&#x60; if the schedule is endless).
            </summary>
            <value>Last occurence date (could be &#x60;null&#x60; if the schedule is endless).</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.RecipientsCount">
            <summary>
            Amount of actual recipients.
            </summary>
            <value>Amount of actual recipients.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.Timezone">
            <summary>
            User-friendly timezone name (with spaces replaced by underscores).
            </summary>
            <value>User-friendly timezone name (with spaces replaced by underscores).</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.Completed">
            <summary>
            Indicates that scheduling has been completed.
            </summary>
            <value>Indicates that scheduling has been completed.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.Avatar">
            <summary>
            A relative link to the contact avatar.
            </summary>
            <value>A relative link to the contact avatar.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcs.CreatedAt">
            <summary>
            Scheduling creation time.
            </summary>
            <value>Scheduling creation time.</value>
        </member>
        <member name="T:TextMagicClient.Model.MessagesIcs.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessagesIcs.TypeEnum.Once">
            <summary>
            Enum Once for value: Once
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessagesIcs.TypeEnum.Hourly">
            <summary>
            Enum Hourly for value: Hourly
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessagesIcs.TypeEnum.Daily">
            <summary>
            Enum Daily for value: Daily
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessagesIcs.TypeEnum.Weekly">
            <summary>
            Enum Weekly for value: Weekly
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessagesIcs.TypeEnum.Monthly">
            <summary>
            Enum Monthly for value: Monthly
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessagesIcs.TypeEnum.Yearly">
            <summary>
            Enum Yearly for value: Yearly
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.MessagesIcsParameters">
            <summary>
            MessagesIcsParameters
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessagesIcsParameters"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParameters.#ctor(System.String,TextMagicClient.Model.MessagesIcsParametersRecipients)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessagesIcsParameters"/> class.
            </summary>
            <param name="text">Scheduled message text. (required).</param>
            <param name="recipients">recipients (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParameters.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParameters.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParameters.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParameters.Equals(TextMagicClient.Model.MessagesIcsParameters)">
            <summary>
            Returns true if MessagesIcsParameters instances are equal
            </summary>
            <param name="input">Instance of MessagesIcsParameters to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParameters.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParameters.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcsParameters.Text">
            <summary>
            Scheduled message text.
            </summary>
            <value>Scheduled message text.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcsParameters.Recipients">
            <summary>
            Gets or Sets Recipients
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.MessagesIcsParametersRecipients">
            <summary>
            MessagesIcsParametersRecipients
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParametersRecipients.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessagesIcsParametersRecipients"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParametersRecipients.#ctor(System.Collections.Generic.List{System.Nullable{System.Int32}},System.Collections.Generic.List{System.Nullable{System.Int32}},System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessagesIcsParametersRecipients"/> class.
            </summary>
            <param name="contacts">contacts (required).</param>
            <param name="groups">groups (required).</param>
            <param name="numbers">numbers (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParametersRecipients.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParametersRecipients.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParametersRecipients.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParametersRecipients.Equals(TextMagicClient.Model.MessagesIcsParametersRecipients)">
            <summary>
            Returns true if MessagesIcsParametersRecipients instances are equal
            </summary>
            <param name="input">Instance of MessagesIcsParametersRecipients to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParametersRecipients.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsParametersRecipients.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcsParametersRecipients.Contacts">
            <summary>
            Gets or Sets Contacts
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcsParametersRecipients.Groups">
            <summary>
            Gets or Sets Groups
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcsParametersRecipients.Numbers">
            <summary>
            Gets or Sets Numbers
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.MessagesIcsTextParameters">
            <summary>
            MessagesIcsTextParameters
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsTextParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessagesIcsTextParameters"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsTextParameters.#ctor(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},TextMagicClient.Model.MessagesIcsTextParameters.EncodingEnum,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessagesIcsTextParameters"/> class.
            </summary>
            <param name="cost">Cost to check that one number is constant – 0.04 in your account currency. (required).</param>
            <param name="parts">Message parts (multiples of 160 characters) count. (required).</param>
            <param name="chars">Characters count. (required).</param>
            <param name="encoding">Message charset. Could be: * **ISO-8859-1** – for plaintext SMS; * **UTF-16BE** – for Unicode SMS.  (required).</param>
            <param name="countries">countries (required).</param>
            <param name="charsetLabel">Human-readable message charset label. Could be: *   **ISO-8859-1** for plaintext SMS; *   **UTF-16BE** for Unicode SMS; *   **Voice** for voice services (Text-to-Speech or Voice Broadcast) messages.  (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsTextParameters.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsTextParameters.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsTextParameters.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsTextParameters.Equals(TextMagicClient.Model.MessagesIcsTextParameters)">
            <summary>
            Returns true if MessagesIcsTextParameters instances are equal
            </summary>
            <param name="input">Instance of MessagesIcsTextParameters to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsTextParameters.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagesIcsTextParameters.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcsTextParameters.Encoding">
            <summary>
            Message charset. Could be: * **ISO-8859-1** – for plaintext SMS; * **UTF-16BE** – for Unicode SMS. 
            </summary>
            <value>Message charset. Could be: * **ISO-8859-1** – for plaintext SMS; * **UTF-16BE** – for Unicode SMS. </value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcsTextParameters.Cost">
            <summary>
            Cost to check that one number is constant – 0.04 in your account currency.
            </summary>
            <value>Cost to check that one number is constant – 0.04 in your account currency.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcsTextParameters.Parts">
            <summary>
            Message parts (multiples of 160 characters) count.
            </summary>
            <value>Message parts (multiples of 160 characters) count.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcsTextParameters.Chars">
            <summary>
            Characters count.
            </summary>
            <value>Characters count.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcsTextParameters.Countries">
            <summary>
            Gets or Sets Countries
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.MessagesIcsTextParameters.CharsetLabel">
            <summary>
            Human-readable message charset label. Could be: *   **ISO-8859-1** for plaintext SMS; *   **UTF-16BE** for Unicode SMS; *   **Voice** for voice services (Text-to-Speech or Voice Broadcast) messages. 
            </summary>
            <value>Human-readable message charset label. Could be: *   **ISO-8859-1** for plaintext SMS; *   **UTF-16BE** for Unicode SMS; *   **Voice** for voice services (Text-to-Speech or Voice Broadcast) messages. </value>
        </member>
        <member name="T:TextMagicClient.Model.MessagesIcsTextParameters.EncodingEnum">
            <summary>
            Message charset. Could be: * **ISO-8859-1** – for plaintext SMS; * **UTF-16BE** – for Unicode SMS. 
            </summary>
            <value>Message charset. Could be: * **ISO-8859-1** – for plaintext SMS; * **UTF-16BE** – for Unicode SMS. </value>
        </member>
        <member name="F:TextMagicClient.Model.MessagesIcsTextParameters.EncodingEnum.ISO88591">
            <summary>
            Enum ISO88591 for value: ISO-8859-1
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.MessagesIcsTextParameters.EncodingEnum.UTF16BE">
            <summary>
            Enum UTF16BE for value: UTF-16BE
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.MessageTemplate">
            <summary>
            MessageTemplate
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessageTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessageTemplate"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessageTemplate.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessageTemplate"/> class.
            </summary>
            <param name="id">Template ID. (required).</param>
            <param name="name">Template name. (required).</param>
            <param name="content">Template text. May contain tags inside braces. See the [Custom fields list](https://docs.textmagic.com/#section/Custom-fields-list-(Merge-tags)). (required).</param>
            <param name="lastModified">Time when the template was last modified. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.MessageTemplate.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageTemplate.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageTemplate.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageTemplate.Equals(TextMagicClient.Model.MessageTemplate)">
            <summary>
            Returns true if MessageTemplate instances are equal
            </summary>
            <param name="input">Instance of MessageTemplate to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageTemplate.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessageTemplate.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.MessageTemplate.Id">
            <summary>
            Template ID.
            </summary>
            <value>Template ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageTemplate.Name">
            <summary>
            Template name.
            </summary>
            <value>Template name.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageTemplate.Content">
            <summary>
            Template text. May contain tags inside braces. See the [Custom fields list](https://docs.textmagic.com/#section/Custom-fields-list-(Merge-tags)).
            </summary>
            <value>Template text. May contain tags inside braces. See the [Custom fields list](https://docs.textmagic.com/#section/Custom-fields-list-(Merge-tags)).</value>
        </member>
        <member name="P:TextMagicClient.Model.MessageTemplate.LastModified">
            <summary>
            Time when the template was last modified.
            </summary>
            <value>Time when the template was last modified.</value>
        </member>
        <member name="T:TextMagicClient.Model.MessagingStatItem">
            <summary>
            MessagingStatItem
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessagingStatItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessagingStatItem"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MessagingStatItem.#ctor(System.Nullable{System.Single},System.Nullable{System.DateTime},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MessagingStatItem"/> class.
            </summary>
            <param name="replyRate">The number of incoming messages divided by the number of total messages. (required).</param>
            <param name="date">Time interval start: empty if the **by** parameter was set to **off**.  (required).</param>
            <param name="deliveryRate">Message delivery rate:the number of delivered messages divided by the number of total messages. (required).</param>
            <param name="costs">Cost for sent messages during this period. The costs are in the [Account](https://docs.textmagic.com/#tag/User) currency.  (required).</param>
            <param name="messagesReceived">Total received messages count. (required).</param>
            <param name="messagesSentDelivered">Delivered messages count. As messages are retried for up to 48 hours, this value could change. (required).</param>
            <param name="messagesSentAccepted">Messages accepted for delivery (in queue) but not yet delivered. (required).</param>
            <param name="messagesSentBuffered">Messages buffered by endpoint cell phone operators. (required).</param>
            <param name="messagesSentFailed">Messages that have failed for whatever reason, e.g. the destination phone was switched off for 48 hours or the recipient's phone account is out of service. (required).</param>
            <param name="messagesSentRejected">Messages that were rejected: invalid Sender ID used (e.g. you cannot use the Sender ID or your own mobile number when sending to the United States and Canada.)  (required).</param>
            <param name="messagesSentParts">Total sent messages **parts** count. Note that this is not equal to the sent messages count, because one message could consist of 1 to 6 parts and users are charged per part, not per message. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.MessagingStatItem.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagingStatItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagingStatItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagingStatItem.Equals(TextMagicClient.Model.MessagingStatItem)">
            <summary>
            Returns true if MessagingStatItem instances are equal
            </summary>
            <param name="input">Instance of MessagingStatItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagingStatItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.MessagingStatItem.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.MessagingStatItem.ReplyRate">
            <summary>
            The number of incoming messages divided by the number of total messages.
            </summary>
            <value>The number of incoming messages divided by the number of total messages.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagingStatItem.Date">
            <summary>
            Time interval start: empty if the **by** parameter was set to **off**. 
            </summary>
            <value>Time interval start: empty if the **by** parameter was set to **off**. </value>
        </member>
        <member name="P:TextMagicClient.Model.MessagingStatItem.DeliveryRate">
            <summary>
            Message delivery rate:the number of delivered messages divided by the number of total messages.
            </summary>
            <value>Message delivery rate:the number of delivered messages divided by the number of total messages.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagingStatItem.Costs">
            <summary>
            Cost for sent messages during this period. The costs are in the [Account](https://docs.textmagic.com/#tag/User) currency. 
            </summary>
            <value>Cost for sent messages during this period. The costs are in the [Account](https://docs.textmagic.com/#tag/User) currency. </value>
        </member>
        <member name="P:TextMagicClient.Model.MessagingStatItem.MessagesReceived">
            <summary>
            Total received messages count.
            </summary>
            <value>Total received messages count.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagingStatItem.MessagesSentDelivered">
            <summary>
            Delivered messages count. As messages are retried for up to 48 hours, this value could change.
            </summary>
            <value>Delivered messages count. As messages are retried for up to 48 hours, this value could change.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagingStatItem.MessagesSentAccepted">
            <summary>
            Messages accepted for delivery (in queue) but not yet delivered.
            </summary>
            <value>Messages accepted for delivery (in queue) but not yet delivered.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagingStatItem.MessagesSentBuffered">
            <summary>
            Messages buffered by endpoint cell phone operators.
            </summary>
            <value>Messages buffered by endpoint cell phone operators.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagingStatItem.MessagesSentFailed">
            <summary>
            Messages that have failed for whatever reason, e.g. the destination phone was switched off for 48 hours or the recipient&#39;s phone account is out of service.
            </summary>
            <value>Messages that have failed for whatever reason, e.g. the destination phone was switched off for 48 hours or the recipient&#39;s phone account is out of service.</value>
        </member>
        <member name="P:TextMagicClient.Model.MessagingStatItem.MessagesSentRejected">
            <summary>
            Messages that were rejected: invalid Sender ID used (e.g. you cannot use the Sender ID or your own mobile number when sending to the United States and Canada.) 
            </summary>
            <value>Messages that were rejected: invalid Sender ID used (e.g. you cannot use the Sender ID or your own mobile number when sending to the United States and Canada.) </value>
        </member>
        <member name="P:TextMagicClient.Model.MessagingStatItem.MessagesSentParts">
            <summary>
            Total sent messages **parts** count. Note that this is not equal to the sent messages count, because one message could consist of 1 to 6 parts and users are charged per part, not per message.
            </summary>
            <value>Total sent messages **parts** count. Note that this is not equal to the sent messages count, because one message could consist of 1 to 6 parts and users are charged per part, not per message.</value>
        </member>
        <member name="T:TextMagicClient.Model.MuteChatInputObject">
            <summary>
            MuteChatInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MuteChatInputObject.#ctor(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MuteChatInputObject"/> class.
            </summary>
            <param name="id">Chat ID..</param>
            <param name="mute">Mute notifications sound..</param>
            <param name="_for">Mute for N hours..</param>
        </member>
        <member name="M:TextMagicClient.Model.MuteChatInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MuteChatInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MuteChatInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MuteChatInputObject.Equals(TextMagicClient.Model.MuteChatInputObject)">
            <summary>
            Returns true if MuteChatInputObject instances are equal
            </summary>
            <param name="input">Instance of MuteChatInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MuteChatInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.MuteChatInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.MuteChatInputObject.Id">
            <summary>
            Chat ID.
            </summary>
            <value>Chat ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.MuteChatInputObject.Mute">
            <summary>
            Mute notifications sound.
            </summary>
            <value>Mute notifications sound.</value>
        </member>
        <member name="P:TextMagicClient.Model.MuteChatInputObject.For">
            <summary>
            Mute for N hours.
            </summary>
            <value>Mute for N hours.</value>
        </member>
        <member name="T:TextMagicClient.Model.MuteChatsBulkInputObject">
            <summary>
            MuteChatsBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.MuteChatsBulkInputObject.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.MuteChatsBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Entity ID(s), separated by comma.</param>
            <param name="_for">Mute for N hours..</param>
        </member>
        <member name="M:TextMagicClient.Model.MuteChatsBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MuteChatsBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.MuteChatsBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MuteChatsBulkInputObject.Equals(TextMagicClient.Model.MuteChatsBulkInputObject)">
            <summary>
            Returns true if MuteChatsBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of MuteChatsBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.MuteChatsBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.MuteChatsBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.MuteChatsBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.MuteChatsBulkInputObject.All">
            <summary>
            Entity ID(s), separated by comma
            </summary>
            <value>Entity ID(s), separated by comma</value>
        </member>
        <member name="P:TextMagicClient.Model.MuteChatsBulkInputObject.For">
            <summary>
            Mute for N hours.
            </summary>
            <value>Mute for N hours.</value>
        </member>
        <member name="T:TextMagicClient.Model.NotFoundResponse">
            <summary>
            Returned when requested entity was not found.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.NotFoundResponse.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.NotFoundResponse"/> class.
            </summary>
            <param name="code">Error code. Meanings of error codes are similar to [HTTP response codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes)..</param>
            <param name="message">A Brief error message. You could display this message to your user or save it in a log..</param>
        </member>
        <member name="M:TextMagicClient.Model.NotFoundResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.NotFoundResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.NotFoundResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.NotFoundResponse.Equals(TextMagicClient.Model.NotFoundResponse)">
            <summary>
            Returns true if NotFoundResponse instances are equal
            </summary>
            <param name="input">Instance of NotFoundResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.NotFoundResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.NotFoundResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.NotFoundResponse.Code">
            <summary>
            Error code. Meanings of error codes are similar to [HTTP response codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes).
            </summary>
            <value>Error code. Meanings of error codes are similar to [HTTP response codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes).</value>
        </member>
        <member name="P:TextMagicClient.Model.NotFoundResponse.Message">
            <summary>
            A Brief error message. You could display this message to your user or save it in a log.
            </summary>
            <value>A Brief error message. You could display this message to your user or save it in a log.</value>
        </member>
        <member name="T:TextMagicClient.Model.PingResponse">
            <summary>
            PingResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.PingResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.PingResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.PingResponse.#ctor(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.PingResponse"/> class.
            </summary>
            <param name="userId">Current user Id. (required).</param>
            <param name="ping">Pong. (required).</param>
            <param name="utcDateTime">Current date and time. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.PingResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.PingResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.PingResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.PingResponse.Equals(TextMagicClient.Model.PingResponse)">
            <summary>
            Returns true if PingResponse instances are equal
            </summary>
            <param name="input">Instance of PingResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.PingResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.PingResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.PingResponse.UserId">
            <summary>
            Current user Id.
            </summary>
            <value>Current user Id.</value>
        </member>
        <member name="P:TextMagicClient.Model.PingResponse.Ping">
            <summary>
            Pong.
            </summary>
            <value>Pong.</value>
        </member>
        <member name="P:TextMagicClient.Model.PingResponse.UtcDateTime">
            <summary>
            Current date and time.
            </summary>
            <value>Current date and time.</value>
        </member>
        <member name="T:TextMagicClient.Model.PushToken">
            <summary>
            PushToken
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.PushToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.PushToken"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.PushToken.#ctor(TextMagicClient.Model.PushToken.TypeEnum,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.PushToken"/> class.
            </summary>
            <param name="type">type of the token: * **GCM** — Google Cloud Messaging * **APN** — Apple Push Notification * **FCM** — Firebase Cloud Messaging  (required).</param>
            <param name="token">Push token value. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.PushToken.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.PushToken.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.PushToken.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.PushToken.Equals(TextMagicClient.Model.PushToken)">
            <summary>
            Returns true if PushToken instances are equal
            </summary>
            <param name="input">Instance of PushToken to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.PushToken.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.PushToken.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.PushToken.Type">
            <summary>
            type of the token: * **GCM** — Google Cloud Messaging * **APN** — Apple Push Notification * **FCM** — Firebase Cloud Messaging 
            </summary>
            <value>type of the token: * **GCM** — Google Cloud Messaging * **APN** — Apple Push Notification * **FCM** — Firebase Cloud Messaging </value>
        </member>
        <member name="P:TextMagicClient.Model.PushToken.Token">
            <summary>
            Push token value.
            </summary>
            <value>Push token value.</value>
        </member>
        <member name="T:TextMagicClient.Model.PushToken.TypeEnum">
            <summary>
            type of the token: * **GCM** — Google Cloud Messaging * **APN** — Apple Push Notification * **FCM** — Firebase Cloud Messaging 
            </summary>
            <value>type of the token: * **GCM** — Google Cloud Messaging * **APN** — Apple Push Notification * **FCM** — Firebase Cloud Messaging </value>
        </member>
        <member name="F:TextMagicClient.Model.PushToken.TypeEnum.A">
            <summary>
            Enum A for value: a
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.PushToken.TypeEnum.G">
            <summary>
            Enum G for value: g
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.PushToken.TypeEnum.F">
            <summary>
            Enum F for value: f
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.ReopenChatsBulkInputObject">
            <summary>
            ReopenChatsBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.ReopenChatsBulkInputObject.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.ReopenChatsBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Entity ID(s), separated by comma..</param>
        </member>
        <member name="M:TextMagicClient.Model.ReopenChatsBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.ReopenChatsBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.ReopenChatsBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.ReopenChatsBulkInputObject.Equals(TextMagicClient.Model.ReopenChatsBulkInputObject)">
            <summary>
            Returns true if ReopenChatsBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of ReopenChatsBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.ReopenChatsBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.ReopenChatsBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.ReopenChatsBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.ReopenChatsBulkInputObject.All">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="T:TextMagicClient.Model.RequestNewSubaccountTokenInputObject">
            <summary>
            RequestNewSubaccountTokenInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.RequestNewSubaccountTokenInputObject.#ctor(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.RequestNewSubaccountTokenInputObject"/> class.
            </summary>
            <param name="userId">Sub-account ID..</param>
            <param name="password">Your account password..</param>
            <param name="appName">Application name..</param>
        </member>
        <member name="M:TextMagicClient.Model.RequestNewSubaccountTokenInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.RequestNewSubaccountTokenInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.RequestNewSubaccountTokenInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.RequestNewSubaccountTokenInputObject.Equals(TextMagicClient.Model.RequestNewSubaccountTokenInputObject)">
            <summary>
            Returns true if RequestNewSubaccountTokenInputObject instances are equal
            </summary>
            <param name="input">Instance of RequestNewSubaccountTokenInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.RequestNewSubaccountTokenInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.RequestNewSubaccountTokenInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.RequestNewSubaccountTokenInputObject.UserId">
            <summary>
            Sub-account ID.
            </summary>
            <value>Sub-account ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.RequestNewSubaccountTokenInputObject.Password">
            <summary>
            Your account password.
            </summary>
            <value>Your account password.</value>
        </member>
        <member name="P:TextMagicClient.Model.RequestNewSubaccountTokenInputObject.AppName">
            <summary>
            Application name.
            </summary>
            <value>Application name.</value>
        </member>
        <member name="T:TextMagicClient.Model.RequestSenderIdInputObject">
            <summary>
            RequestSenderIdInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.RequestSenderIdInputObject.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.RequestSenderIdInputObject"/> class.
            </summary>
            <param name="senderId">The Sender ID that you are applying for. *   11 characters maximum; *   Only Latin based characters and digits are allowed; *   Should contain at least 1 letter. .</param>
            <param name="explanation">Explanation of why you need this Sender ID..</param>
        </member>
        <member name="M:TextMagicClient.Model.RequestSenderIdInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.RequestSenderIdInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.RequestSenderIdInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.RequestSenderIdInputObject.Equals(TextMagicClient.Model.RequestSenderIdInputObject)">
            <summary>
            Returns true if RequestSenderIdInputObject instances are equal
            </summary>
            <param name="input">Instance of RequestSenderIdInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.RequestSenderIdInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.RequestSenderIdInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.RequestSenderIdInputObject.SenderId">
            <summary>
            The Sender ID that you are applying for. *   11 characters maximum; *   Only Latin based characters and digits are allowed; *   Should contain at least 1 letter. 
            </summary>
            <value>The Sender ID that you are applying for. *   11 characters maximum; *   Only Latin based characters and digits are allowed; *   Should contain at least 1 letter. </value>
        </member>
        <member name="P:TextMagicClient.Model.RequestSenderIdInputObject.Explanation">
            <summary>
            Explanation of why you need this Sender ID.
            </summary>
            <value>Explanation of why you need this Sender ID.</value>
        </member>
        <member name="T:TextMagicClient.Model.ResourceLinkResponse">
            <summary>
            Response contains paginated list of data items.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.ResourceLinkResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.ResourceLinkResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.ResourceLinkResponse.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.ResourceLinkResponse"/> class.
            </summary>
            <param name="id">Resource ID. (required).</param>
            <param name="href">A link to this resource. If you want to fetch it, just **GET** this address. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.ResourceLinkResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.ResourceLinkResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.ResourceLinkResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.ResourceLinkResponse.Equals(TextMagicClient.Model.ResourceLinkResponse)">
            <summary>
            Returns true if ResourceLinkResponse instances are equal
            </summary>
            <param name="input">Instance of ResourceLinkResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.ResourceLinkResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.ResourceLinkResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.ResourceLinkResponse.Id">
            <summary>
            Resource ID.
            </summary>
            <value>Resource ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.ResourceLinkResponse.Href">
            <summary>
            A link to this resource. If you want to fetch it, just **GET** this address.
            </summary>
            <value>A link to this resource. If you want to fetch it, just **GET** this address.</value>
        </member>
        <member name="T:TextMagicClient.Model.SearchChatsByIdsPaginatedResponse">
            <summary>
            SearchChatsByIdsPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByIdsPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchChatsByIdsPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByIdsPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.Chat})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchChatsByIdsPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByIdsPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByIdsPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByIdsPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByIdsPaginatedResponse.Equals(TextMagicClient.Model.SearchChatsByIdsPaginatedResponse)">
            <summary>
            Returns true if SearchChatsByIdsPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of SearchChatsByIdsPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByIdsPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByIdsPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SearchChatsByIdsPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SearchChatsByIdsPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchChatsByIdsPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchChatsByIdsPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse">
            <summary>
            SearchChatsByReceipentPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.Chat})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse.Equals(TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse)">
            <summary>
            Returns true if SearchChatsByReceipentPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of SearchChatsByReceipentPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchChatsByReceipentPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SearchChatsPaginatedResponse">
            <summary>
            SearchChatsPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchChatsPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.Chat})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchChatsPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsPaginatedResponse.Equals(TextMagicClient.Model.SearchChatsPaginatedResponse)">
            <summary>
            Returns true if SearchChatsPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of SearchChatsPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchChatsPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SearchChatsPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SearchChatsPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchChatsPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchChatsPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SearchContactsPaginatedResponse">
            <summary>
            SearchContactsPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchContactsPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchContactsPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchContactsPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.Contact})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchContactsPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SearchContactsPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchContactsPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchContactsPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchContactsPaginatedResponse.Equals(TextMagicClient.Model.SearchContactsPaginatedResponse)">
            <summary>
            Returns true if SearchContactsPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of SearchContactsPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchContactsPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchContactsPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SearchContactsPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SearchContactsPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchContactsPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchContactsPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SearchInboundMessagesPaginatedResponse">
            <summary>
            SearchInboundMessagesPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchInboundMessagesPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchInboundMessagesPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchInboundMessagesPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.MessageIn})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchInboundMessagesPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SearchInboundMessagesPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchInboundMessagesPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchInboundMessagesPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchInboundMessagesPaginatedResponse.Equals(TextMagicClient.Model.SearchInboundMessagesPaginatedResponse)">
            <summary>
            Returns true if SearchInboundMessagesPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of SearchInboundMessagesPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchInboundMessagesPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchInboundMessagesPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SearchInboundMessagesPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SearchInboundMessagesPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchInboundMessagesPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchInboundMessagesPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SearchListsPaginatedResponse">
            <summary>
            SearchListsPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchListsPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchListsPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchListsPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.List})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchListsPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SearchListsPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchListsPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchListsPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchListsPaginatedResponse.Equals(TextMagicClient.Model.SearchListsPaginatedResponse)">
            <summary>
            Returns true if SearchListsPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of SearchListsPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchListsPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchListsPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SearchListsPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SearchListsPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchListsPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchListsPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse">
            <summary>
            SearchOutboundMessagesPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.MessageOut})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse.Equals(TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse)">
            <summary>
            Returns true if SearchOutboundMessagesPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of SearchOutboundMessagesPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchOutboundMessagesPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse">
            <summary>
            SearchScheduledMessagesPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.MessagesIcs})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse.Equals(TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse)">
            <summary>
            Returns true if SearchScheduledMessagesPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of SearchScheduledMessagesPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchScheduledMessagesPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SearchTemplatesPaginatedResponse">
            <summary>
            SearchTemplatesPaginatedResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchTemplatesPaginatedResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchTemplatesPaginatedResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SearchTemplatesPaginatedResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.MessageTemplate})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SearchTemplatesPaginatedResponse"/> class.
            </summary>
            <param name="page">page (required).</param>
            <param name="pageCount">The total number of pages. (required).</param>
            <param name="limit">The number of results per page. (required).</param>
            <param name="resources">resources (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SearchTemplatesPaginatedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchTemplatesPaginatedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchTemplatesPaginatedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchTemplatesPaginatedResponse.Equals(TextMagicClient.Model.SearchTemplatesPaginatedResponse)">
            <summary>
            Returns true if SearchTemplatesPaginatedResponse instances are equal
            </summary>
            <param name="input">Instance of SearchTemplatesPaginatedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchTemplatesPaginatedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SearchTemplatesPaginatedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SearchTemplatesPaginatedResponse.Page">
            <summary>
            Gets or Sets Page
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SearchTemplatesPaginatedResponse.PageCount">
            <summary>
            The total number of pages.
            </summary>
            <value>The total number of pages.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchTemplatesPaginatedResponse.Limit">
            <summary>
            The number of results per page.
            </summary>
            <value>The number of results per page.</value>
        </member>
        <member name="P:TextMagicClient.Model.SearchTemplatesPaginatedResponse.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SenderId">
            <summary>
            SenderId
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SenderId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SenderId"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SenderId.#ctor(System.Nullable{System.Int32},System.String,System.String,TextMagicClient.Model.User,TextMagicClient.Model.SenderId.StatusEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SenderId"/> class.
            </summary>
            <param name="id">Numeric sender ID. (required).</param>
            <param name="displayTimeFormat">Format for representation of time..</param>
            <param name="senderId">Alphanumeric ID. (required).</param>
            <param name="user">user (required).</param>
            <param name="status">*   **P** for Pending - this Sender ID is being reviewed by our support team; *   **R** for Rejected - our support team rejected your application for this Sender ID; *   **A** for Active.  (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SenderId.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SenderId.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SenderId.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SenderId.Equals(TextMagicClient.Model.SenderId)">
            <summary>
            Returns true if SenderId instances are equal
            </summary>
            <param name="input">Instance of SenderId to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SenderId.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SenderId.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SenderId.Status">
            <summary>
            *   **P** for Pending - this Sender ID is being reviewed by our support team; *   **R** for Rejected - our support team rejected your application for this Sender ID; *   **A** for Active. 
            </summary>
            <value>*   **P** for Pending - this Sender ID is being reviewed by our support team; *   **R** for Rejected - our support team rejected your application for this Sender ID; *   **A** for Active. </value>
        </member>
        <member name="P:TextMagicClient.Model.SenderId.Id">
            <summary>
            Numeric sender ID.
            </summary>
            <value>Numeric sender ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.SenderId.DisplayTimeFormat">
            <summary>
            Format for representation of time.
            </summary>
            <value>Format for representation of time.</value>
        </member>
        <member name="P:TextMagicClient.Model.SenderId._SenderId">
            <summary>
            Alphanumeric ID.
            </summary>
            <value>Alphanumeric ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.SenderId.User">
            <summary>
            Gets or Sets User
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SenderId.StatusEnum">
            <summary>
            *   **P** for Pending - this Sender ID is being reviewed by our support team; *   **R** for Rejected - our support team rejected your application for this Sender ID; *   **A** for Active. 
            </summary>
            <value>*   **P** for Pending - this Sender ID is being reviewed by our support team; *   **R** for Rejected - our support team rejected your application for this Sender ID; *   **A** for Active. </value>
        </member>
        <member name="F:TextMagicClient.Model.SenderId.StatusEnum.A">
            <summary>
            Enum A for value: A
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.SenderId.StatusEnum.R">
            <summary>
            Enum R for value: R
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.SenderId.StatusEnum.P">
            <summary>
            Enum P for value: P
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SenderSettingsItem">
            <summary>
            SenderSettingsItem
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SenderSettingsItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SenderSettingsItem"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SenderSettingsItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SenderSettingsItem"/> class.
            </summary>
            <param name="country">The 2-letter ISO country code of the recipient's phone number.  (required).</param>
            <param name="phone">Phone enabled for sending to a specified country. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SenderSettingsItem.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SenderSettingsItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SenderSettingsItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SenderSettingsItem.Equals(TextMagicClient.Model.SenderSettingsItem)">
            <summary>
            Returns true if SenderSettingsItem instances are equal
            </summary>
            <param name="input">Instance of SenderSettingsItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SenderSettingsItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SenderSettingsItem.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SenderSettingsItem.Country">
            <summary>
            The 2-letter ISO country code of the recipient&#39;s phone number. 
            </summary>
            <value>The 2-letter ISO country code of the recipient&#39;s phone number. </value>
        </member>
        <member name="P:TextMagicClient.Model.SenderSettingsItem.Phone">
            <summary>
            Phone enabled for sending to a specified country.
            </summary>
            <value>Phone enabled for sending to a specified country.</value>
        </member>
        <member name="T:TextMagicClient.Model.SendMessageInputObject">
            <summary>
            SendMessageInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SendMessageInputObject.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SendMessageInputObject"/> class.
            </summary>
            <param name="text">Message text. Required if the **template_id** is not set..</param>
            <param name="templateId">Template used instead of message text. Required if the **text** is not set..</param>
            <param name="sendingTime">DEPRECATED, consider using sendingDateTime and sendingTimezone parameters instead: Optional (required with rrule set). Message sending time in unix timestamp format. Default is now..</param>
            <param name="sendingDateTime">Sending time in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to **sendingTimezone**..</param>
            <param name="sendingTimezone">ID or ISO-name of timezone used for sending when sendingDateTime parameter is set. E.g. if you specify sendingDateTime = \\\"2016-05-27 13:02:33\\\" and sendingTimezone = \\\"America/Buenos_Aires\\\", your message will be sent at May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is account timezone..</param>
            <param name="contacts">Comma separated array of contact resources id message will be sent to..</param>
            <param name="lists">Comma separated array of list resources id message will be sent to..</param>
            <param name="phones">Comma separated array of E.164 phone numbers message will be sent to..</param>
            <param name="cutExtra">Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead. (default to false).</param>
            <param name="partsCount">Maximum message parts count (TextMagic allows sending 1 to 6 message parts)..</param>
            <param name="referenceId">Custom message reference id which can be used in your application infrastructure..</param>
            <param name="from">One of allowed Sender ID (phone number or alphanumeric sender ID). If specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs)..</param>
            <param name="rrule">iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details..</param>
            <param name="createChat">Should sending method try to create new Chat (if not exist) with specified recipients? (default to false).</param>
            <param name="tts">Send a Text-to-Speech message. (default to false).</param>
            <param name="local">Treat phone numbers passed in the \\'phones\\' field as local. (default to false).</param>
            <param name="localCountry">The 2-letter ISO country code for local phone numbers, used when \\'local\\' is set to true. Default is the account country..</param>
            <param name="destination">Messsage destination type allowed [mms, tts]..</param>
            <param name="resources">File name from mms attachment response (named as resource).</param>
        </member>
        <member name="M:TextMagicClient.Model.SendMessageInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendMessageInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendMessageInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendMessageInputObject.Equals(TextMagicClient.Model.SendMessageInputObject)">
            <summary>
            Returns true if SendMessageInputObject instances are equal
            </summary>
            <param name="input">Instance of SendMessageInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendMessageInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendMessageInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.Text">
            <summary>
            Message text. Required if the **template_id** is not set.
            </summary>
            <value>Message text. Required if the **template_id** is not set.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.TemplateId">
            <summary>
            Template used instead of message text. Required if the **text** is not set.
            </summary>
            <value>Template used instead of message text. Required if the **text** is not set.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.SendingTime">
            <summary>
            DEPRECATED, consider using sendingDateTime and sendingTimezone parameters instead: Optional (required with rrule set). Message sending time in unix timestamp format. Default is now.
            </summary>
            <value>DEPRECATED, consider using sendingDateTime and sendingTimezone parameters instead: Optional (required with rrule set). Message sending time in unix timestamp format. Default is now.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.SendingDateTime">
            <summary>
            Sending time in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to **sendingTimezone**.
            </summary>
            <value>Sending time in Y-m-d H:i:s format (e.g. 2016-05-27 13:02:33). This time is relative to **sendingTimezone**.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.SendingTimezone">
            <summary>
            ID or ISO-name of timezone used for sending when sendingDateTime parameter is set. E.g. if you specify sendingDateTime &#x3D; \\\&quot;2016-05-27 13:02:33\\\&quot; and sendingTimezone &#x3D; \\\&quot;America/Buenos_Aires\\\&quot;, your message will be sent at May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is account timezone.
            </summary>
            <value>ID or ISO-name of timezone used for sending when sendingDateTime parameter is set. E.g. if you specify sendingDateTime &#x3D; \\\&quot;2016-05-27 13:02:33\\\&quot; and sendingTimezone &#x3D; \\\&quot;America/Buenos_Aires\\\&quot;, your message will be sent at May 27, 2016 13:02:33 Buenos Aires time, or 16:02:33 UTC. Default is account timezone.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.Contacts">
            <summary>
            Comma separated array of contact resources id message will be sent to.
            </summary>
            <value>Comma separated array of contact resources id message will be sent to.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.Lists">
            <summary>
            Comma separated array of list resources id message will be sent to.
            </summary>
            <value>Comma separated array of list resources id message will be sent to.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.Phones">
            <summary>
            Comma separated array of E.164 phone numbers message will be sent to.
            </summary>
            <value>Comma separated array of E.164 phone numbers message will be sent to.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.CutExtra">
            <summary>
            Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead.
            </summary>
            <value>Should sending method cut extra characters which not fit supplied partsCount or return 400 Bad request response instead.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.PartsCount">
            <summary>
            Maximum message parts count (TextMagic allows sending 1 to 6 message parts).
            </summary>
            <value>Maximum message parts count (TextMagic allows sending 1 to 6 message parts).</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.ReferenceId">
            <summary>
            Custom message reference id which can be used in your application infrastructure.
            </summary>
            <value>Custom message reference id which can be used in your application infrastructure.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.From">
            <summary>
            One of allowed Sender ID (phone number or alphanumeric sender ID). If specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs).
            </summary>
            <value>One of allowed Sender ID (phone number or alphanumeric sender ID). If specified Sender ID is not allowed for some destinations, a fallback default Sender ID will be used to ensure delivery. See [Get timezones](https://docs.textmagic.com/#tag/Sender-IDs).</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.Rrule">
            <summary>
            iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details.
            </summary>
            <value>iCal RRULE parameter to create recurrent scheduled messages. When used, sendingTime is mandatory as start point of sending. See https://www.textmagic.com/free-tools/rrule-generator for format details.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.CreateChat">
            <summary>
            Should sending method try to create new Chat (if not exist) with specified recipients?
            </summary>
            <value>Should sending method try to create new Chat (if not exist) with specified recipients?</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.Tts">
            <summary>
            Send a Text-to-Speech message.
            </summary>
            <value>Send a Text-to-Speech message.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.Local">
            <summary>
            Treat phone numbers passed in the \\&#39;phones\\&#39; field as local.
            </summary>
            <value>Treat phone numbers passed in the \\&#39;phones\\&#39; field as local.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.LocalCountry">
            <summary>
            The 2-letter ISO country code for local phone numbers, used when \\&#39;local\\&#39; is set to true. Default is the account country.
            </summary>
            <value>The 2-letter ISO country code for local phone numbers, used when \\&#39;local\\&#39; is set to true. Default is the account country.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.Destination">
            <summary>
            Messsage destination type allowed [mms, tts].
            </summary>
            <value>Messsage destination type allowed [mms, tts].</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageInputObject.Resources">
            <summary>
            File name from mms attachment response (named as resource)
            </summary>
            <value>File name from mms attachment response (named as resource)</value>
        </member>
        <member name="T:TextMagicClient.Model.SendMessageResponse">
            <summary>
            SendMessageResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SendMessageResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SendMessageResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SendMessageResponse.#ctor(System.Nullable{System.Int32},System.String,TextMagicClient.Model.SendMessageResponse.TypeEnum,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SendMessageResponse"/> class.
            </summary>
            <param name="id">Message ID. (required).</param>
            <param name="href">URI of the message session. (required).</param>
            <param name="type">Message response type: * **message** – when the message is sent to a single recipient. * **session** – when the message is sent is to multiple recipients. * **schedule** - when the message is scheduled for sending. * **bulk** - when the message is sent to multiple recipients and the number of recipients requires asynchronous processing See [Sending more than 1,000 messages in one session](https://docs.textmagic.com/#section/Tutorials/Sending-more-than-1000-messages-in-one-session).  (required).</param>
            <param name="sessionId">Message session ID. (required).</param>
            <param name="bulkId">Bulk Session ID. See [Sending more than 1,000 messages in one session](https://docs.textmagic.com/#section/Tutorials/Sending-more-than-1000-messages-in-one-session). (required).</param>
            <param name="messageId">Message ID. (required).</param>
            <param name="scheduleId">Message Schedule ID. (required).</param>
            <param name="chatId">Message Chat ID. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SendMessageResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendMessageResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendMessageResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendMessageResponse.Equals(TextMagicClient.Model.SendMessageResponse)">
            <summary>
            Returns true if SendMessageResponse instances are equal
            </summary>
            <param name="input">Instance of SendMessageResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendMessageResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendMessageResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageResponse.Type">
            <summary>
            Message response type: * **message** – when the message is sent to a single recipient. * **session** – when the message is sent is to multiple recipients. * **schedule** - when the message is scheduled for sending. * **bulk** - when the message is sent to multiple recipients and the number of recipients requires asynchronous processing See [Sending more than 1,000 messages in one session](https://docs.textmagic.com/#section/Tutorials/Sending-more-than-1000-messages-in-one-session). 
            </summary>
            <value>Message response type: * **message** – when the message is sent to a single recipient. * **session** – when the message is sent is to multiple recipients. * **schedule** - when the message is scheduled for sending. * **bulk** - when the message is sent to multiple recipients and the number of recipients requires asynchronous processing See [Sending more than 1,000 messages in one session](https://docs.textmagic.com/#section/Tutorials/Sending-more-than-1000-messages-in-one-session). </value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageResponse.Id">
            <summary>
            Message ID.
            </summary>
            <value>Message ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageResponse.Href">
            <summary>
            URI of the message session.
            </summary>
            <value>URI of the message session.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageResponse.SessionId">
            <summary>
            Message session ID.
            </summary>
            <value>Message session ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageResponse.BulkId">
            <summary>
            Bulk Session ID. See [Sending more than 1,000 messages in one session](https://docs.textmagic.com/#section/Tutorials/Sending-more-than-1000-messages-in-one-session).
            </summary>
            <value>Bulk Session ID. See [Sending more than 1,000 messages in one session](https://docs.textmagic.com/#section/Tutorials/Sending-more-than-1000-messages-in-one-session).</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageResponse.MessageId">
            <summary>
            Message ID.
            </summary>
            <value>Message ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageResponse.ScheduleId">
            <summary>
            Message Schedule ID.
            </summary>
            <value>Message Schedule ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendMessageResponse.ChatId">
            <summary>
            Message Chat ID.
            </summary>
            <value>Message Chat ID.</value>
        </member>
        <member name="T:TextMagicClient.Model.SendMessageResponse.TypeEnum">
            <summary>
            Message response type: * **message** – when the message is sent to a single recipient. * **session** – when the message is sent is to multiple recipients. * **schedule** - when the message is scheduled for sending. * **bulk** - when the message is sent to multiple recipients and the number of recipients requires asynchronous processing See [Sending more than 1,000 messages in one session](https://docs.textmagic.com/#section/Tutorials/Sending-more-than-1000-messages-in-one-session). 
            </summary>
            <value>Message response type: * **message** – when the message is sent to a single recipient. * **session** – when the message is sent is to multiple recipients. * **schedule** - when the message is scheduled for sending. * **bulk** - when the message is sent to multiple recipients and the number of recipients requires asynchronous processing See [Sending more than 1,000 messages in one session](https://docs.textmagic.com/#section/Tutorials/Sending-more-than-1000-messages-in-one-session). </value>
        </member>
        <member name="F:TextMagicClient.Model.SendMessageResponse.TypeEnum.Message">
            <summary>
            Enum Message for value: message
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.SendMessageResponse.TypeEnum.Session">
            <summary>
            Enum Session for value: session
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.SendMessageResponse.TypeEnum.Schedule">
            <summary>
            Enum Schedule for value: schedule
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.SendMessageResponse.TypeEnum.Bulk">
            <summary>
            Enum Bulk for value: bulk
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SendPhoneVerificationCodeResponse">
            <summary>
            SendPhoneVerificationCodeResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SendPhoneVerificationCodeResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SendPhoneVerificationCodeResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SendPhoneVerificationCodeResponse.#ctor(System.String,System.Nullable{System.Decimal})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SendPhoneVerificationCodeResponse"/> class.
            </summary>
            <param name="verifyId">The ID of a verification request. This is required to finish the verification request in the next step. (required).</param>
            <param name="price">An amount of credit which will be deducted from your account balance when this verification is successfully completed. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SendPhoneVerificationCodeResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendPhoneVerificationCodeResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendPhoneVerificationCodeResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendPhoneVerificationCodeResponse.Equals(TextMagicClient.Model.SendPhoneVerificationCodeResponse)">
            <summary>
            Returns true if SendPhoneVerificationCodeResponse instances are equal
            </summary>
            <param name="input">Instance of SendPhoneVerificationCodeResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendPhoneVerificationCodeResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendPhoneVerificationCodeResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SendPhoneVerificationCodeResponse.VerifyId">
            <summary>
            The ID of a verification request. This is required to finish the verification request in the next step.
            </summary>
            <value>The ID of a verification request. This is required to finish the verification request in the next step.</value>
        </member>
        <member name="P:TextMagicClient.Model.SendPhoneVerificationCodeResponse.Price">
            <summary>
            An amount of credit which will be deducted from your account balance when this verification is successfully completed.
            </summary>
            <value>An amount of credit which will be deducted from your account balance when this verification is successfully completed.</value>
        </member>
        <member name="T:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject">
            <summary>
            SendPhoneVerificationCodeTFAInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject"/> class.
            </summary>
            <param name="phone">Use the phone number in international E.164 format. If you need to pass a phone number in the local format, please use it with the **country** parameter to specify the origin country of the phone number. .</param>
            <param name="workflowId">**Workflows**  The Verify API allows you to select the best workflow for your use case. This might depend on the type of verification taking place, your users' preference, or their geographical location. You can specify which workflow to use for each Verify API request by setting the workflowId field to an integer value 1-7. The details of each of these preset workflows are detailed below.  &lt;br /&gt;  **Workflow 1 (Default Workflow): SMS -&gt; TTS -&gt; TTS**  Send PIN code by text message, follow up with two subsequent voice calls if the request wasn't already verified.  Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Call user and give TTS PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Call user and give TTS PIN code  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 2: SMS -&gt; SMS -&gt; TTS**   Send PIN code by text message, follow up with a second text message and finally a voice call if the request has not been verified.  Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Call user and give TTS PIN code  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 3: TTS -&gt; TTS**  Call the user and speak a PIN code, follow up with a second call if the request wasn't already verified.  Call user and give TTS PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Call user and give TTS PIN code  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 4: SMS -&gt; SMS**   Send PIN code by text message, follow up with a second text message if the code hasn't been verified.  Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 5: SMS -&gt; TTS**   Send PIN code by text message, follow up with a voice call if the code hasn't been verified.  Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Call user and give TTS PIN code&lt;br /&gt; Wait for 60 seconds  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 6: SMS**   Send PIN code by text message once only.  Send SMS to user with PIN code  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 7: TTS**  Call the user and speak a PIN code once only.  Call user and give TTS PIN code  Request expires after 300 seconds .</param>
            <param name="brand">An alphanumeric string with up to 18 characters you can use to personalize the verification text message body, to help users identify your company or application name. For example: “Your TextMagic PIN is …” .</param>
            <param name="codeLength">The length of the verification code. The value can be 4 or 6 characters. .</param>
            <param name="language">By default, the SMS or text-to-speech (TTS) voice message is generated in the locale that matches the number. For example, the text message or TTS message for a 33\\* number is sent in French. Use this parameter to explicitly control the language, accent, and gender used for the verification request. Choosing one of the following: `de-de`, `en-au`, `en-gb`, `en-us`, `en-in`, `es-es`, `es-mx`, `es-us`, `fr-ca`, `fr-fr`, `is-is`, `it-it`, `ja-jp`, `ko-kr`, `nl-nl`, `pl-pl`, `pt-pt`, `pt-br`, `ro-ro`, `ru-ru`, `sv-se`, `tr-tr`, `zh-cn` or `zh-tw`. .</param>
            <param name="senderId">One of the available [sender settings](https://my.textmagic.com/online/reply-options/) on your TextMagic account. If the specified sender setting type is not allowed for some destinations, a fallback default sender will be used to ensure message delivery. More info about known restrictions can be found [here](https://support.textmagic.com/article/how-to-understand-sender-setting-restrictions/). .</param>
            <param name="country">The 2-letter ISO country code for the local phone number..</param>
        </member>
        <member name="M:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject.Equals(TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject)">
            <summary>
            Returns true if SendPhoneVerificationCodeTFAInputObject instances are equal
            </summary>
            <param name="input">Instance of SendPhoneVerificationCodeTFAInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject.Phone">
            <summary>
            Use the phone number in international E.164 format. If you need to pass a phone number in the local format, please use it with the **country** parameter to specify the origin country of the phone number. 
            </summary>
            <value>Use the phone number in international E.164 format. If you need to pass a phone number in the local format, please use it with the **country** parameter to specify the origin country of the phone number. </value>
        </member>
        <member name="P:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject.WorkflowId">
            <summary>
            **Workflows**  The Verify API allows you to select the best workflow for your use case. This might depend on the type of verification taking place, your users&#39; preference, or their geographical location. You can specify which workflow to use for each Verify API request by setting the workflowId field to an integer value 1-7. The details of each of these preset workflows are detailed below.  &lt;br /&gt;  **Workflow 1 (Default Workflow): SMS -&gt; TTS -&gt; TTS**  Send PIN code by text message, follow up with two subsequent voice calls if the request wasn&#39;t already verified.  Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Call user and give TTS PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Call user and give TTS PIN code  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 2: SMS -&gt; SMS -&gt; TTS**   Send PIN code by text message, follow up with a second text message and finally a voice call if the request has not been verified.  Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Call user and give TTS PIN code  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 3: TTS -&gt; TTS**  Call the user and speak a PIN code, follow up with a second call if the request wasn&#39;t already verified.  Call user and give TTS PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Call user and give TTS PIN code  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 4: SMS -&gt; SMS**   Send PIN code by text message, follow up with a second text message if the code hasn&#39;t been verified.  Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 5: SMS -&gt; TTS**   Send PIN code by text message, follow up with a voice call if the code hasn&#39;t been verified.  Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Call user and give TTS PIN code&lt;br /&gt; Wait for 60 seconds  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 6: SMS**   Send PIN code by text message once only.  Send SMS to user with PIN code  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 7: TTS**  Call the user and speak a PIN code once only.  Call user and give TTS PIN code  Request expires after 300 seconds 
            </summary>
            <value>**Workflows**  The Verify API allows you to select the best workflow for your use case. This might depend on the type of verification taking place, your users&#39; preference, or their geographical location. You can specify which workflow to use for each Verify API request by setting the workflowId field to an integer value 1-7. The details of each of these preset workflows are detailed below.  &lt;br /&gt;  **Workflow 1 (Default Workflow): SMS -&gt; TTS -&gt; TTS**  Send PIN code by text message, follow up with two subsequent voice calls if the request wasn&#39;t already verified.  Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Call user and give TTS PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Call user and give TTS PIN code  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 2: SMS -&gt; SMS -&gt; TTS**   Send PIN code by text message, follow up with a second text message and finally a voice call if the request has not been verified.  Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Call user and give TTS PIN code  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 3: TTS -&gt; TTS**  Call the user and speak a PIN code, follow up with a second call if the request wasn&#39;t already verified.  Call user and give TTS PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Call user and give TTS PIN code  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 4: SMS -&gt; SMS**   Send PIN code by text message, follow up with a second text message if the code hasn&#39;t been verified.  Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 5: SMS -&gt; TTS**   Send PIN code by text message, follow up with a voice call if the code hasn&#39;t been verified.  Send SMS to user with PIN code&lt;br /&gt; Wait for 60 seconds&lt;br /&gt; Call user and give TTS PIN code&lt;br /&gt; Wait for 60 seconds  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 6: SMS**   Send PIN code by text message once only.  Send SMS to user with PIN code  Request expires after 300 seconds  &lt;br /&gt;  **Workflow 7: TTS**  Call the user and speak a PIN code once only.  Call user and give TTS PIN code  Request expires after 300 seconds </value>
        </member>
        <member name="P:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject.Brand">
            <summary>
            An alphanumeric string with up to 18 characters you can use to personalize the verification text message body, to help users identify your company or application name. For example: “Your TextMagic PIN is …” 
            </summary>
            <value>An alphanumeric string with up to 18 characters you can use to personalize the verification text message body, to help users identify your company or application name. For example: “Your TextMagic PIN is …” </value>
        </member>
        <member name="P:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject.CodeLength">
            <summary>
            The length of the verification code. The value can be 4 or 6 characters. 
            </summary>
            <value>The length of the verification code. The value can be 4 or 6 characters. </value>
        </member>
        <member name="P:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject.Language">
            <summary>
            By default, the SMS or text-to-speech (TTS) voice message is generated in the locale that matches the number. For example, the text message or TTS message for a 33\\* number is sent in French. Use this parameter to explicitly control the language, accent, and gender used for the verification request. Choosing one of the following: &#x60;de-de&#x60;, &#x60;en-au&#x60;, &#x60;en-gb&#x60;, &#x60;en-us&#x60;, &#x60;en-in&#x60;, &#x60;es-es&#x60;, &#x60;es-mx&#x60;, &#x60;es-us&#x60;, &#x60;fr-ca&#x60;, &#x60;fr-fr&#x60;, &#x60;is-is&#x60;, &#x60;it-it&#x60;, &#x60;ja-jp&#x60;, &#x60;ko-kr&#x60;, &#x60;nl-nl&#x60;, &#x60;pl-pl&#x60;, &#x60;pt-pt&#x60;, &#x60;pt-br&#x60;, &#x60;ro-ro&#x60;, &#x60;ru-ru&#x60;, &#x60;sv-se&#x60;, &#x60;tr-tr&#x60;, &#x60;zh-cn&#x60; or &#x60;zh-tw&#x60;. 
            </summary>
            <value>By default, the SMS or text-to-speech (TTS) voice message is generated in the locale that matches the number. For example, the text message or TTS message for a 33\\* number is sent in French. Use this parameter to explicitly control the language, accent, and gender used for the verification request. Choosing one of the following: &#x60;de-de&#x60;, &#x60;en-au&#x60;, &#x60;en-gb&#x60;, &#x60;en-us&#x60;, &#x60;en-in&#x60;, &#x60;es-es&#x60;, &#x60;es-mx&#x60;, &#x60;es-us&#x60;, &#x60;fr-ca&#x60;, &#x60;fr-fr&#x60;, &#x60;is-is&#x60;, &#x60;it-it&#x60;, &#x60;ja-jp&#x60;, &#x60;ko-kr&#x60;, &#x60;nl-nl&#x60;, &#x60;pl-pl&#x60;, &#x60;pt-pt&#x60;, &#x60;pt-br&#x60;, &#x60;ro-ro&#x60;, &#x60;ru-ru&#x60;, &#x60;sv-se&#x60;, &#x60;tr-tr&#x60;, &#x60;zh-cn&#x60; or &#x60;zh-tw&#x60;. </value>
        </member>
        <member name="P:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject.SenderId">
            <summary>
            One of the available [sender settings](https://my.textmagic.com/online/reply-options/) on your TextMagic account. If the specified sender setting type is not allowed for some destinations, a fallback default sender will be used to ensure message delivery. More info about known restrictions can be found [here](https://support.textmagic.com/article/how-to-understand-sender-setting-restrictions/). 
            </summary>
            <value>One of the available [sender settings](https://my.textmagic.com/online/reply-options/) on your TextMagic account. If the specified sender setting type is not allowed for some destinations, a fallback default sender will be used to ensure message delivery. More info about known restrictions can be found [here](https://support.textmagic.com/article/how-to-understand-sender-setting-restrictions/). </value>
        </member>
        <member name="P:TextMagicClient.Model.SendPhoneVerificationCodeTFAInputObject.Country">
            <summary>
            The 2-letter ISO country code for the local phone number.
            </summary>
            <value>The 2-letter ISO country code for the local phone number.</value>
        </member>
        <member name="T:TextMagicClient.Model.SetChatStatusInputObject">
            <summary>
            SetChatStatusInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SetChatStatusInputObject.#ctor(System.Nullable{System.Int32},System.Nullable{TextMagicClient.Model.SetChatStatusInputObject.StatusEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SetChatStatusInputObject"/> class.
            </summary>
            <param name="id">Chat ID..</param>
            <param name="status">Chat status:   * **a** - Active;   * **c** - Closed;   * **d** - Deleted. .</param>
        </member>
        <member name="M:TextMagicClient.Model.SetChatStatusInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SetChatStatusInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SetChatStatusInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SetChatStatusInputObject.Equals(TextMagicClient.Model.SetChatStatusInputObject)">
            <summary>
            Returns true if SetChatStatusInputObject instances are equal
            </summary>
            <param name="input">Instance of SetChatStatusInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SetChatStatusInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SetChatStatusInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SetChatStatusInputObject.Status">
            <summary>
            Chat status:   * **a** - Active;   * **c** - Closed;   * **d** - Deleted. 
            </summary>
            <value>Chat status:   * **a** - Active;   * **c** - Closed;   * **d** - Deleted. </value>
        </member>
        <member name="P:TextMagicClient.Model.SetChatStatusInputObject.Id">
            <summary>
            Chat ID.
            </summary>
            <value>Chat ID.</value>
        </member>
        <member name="T:TextMagicClient.Model.SetChatStatusInputObject.StatusEnum">
            <summary>
            Chat status:   * **a** - Active;   * **c** - Closed;   * **d** - Deleted. 
            </summary>
            <value>Chat status:   * **a** - Active;   * **c** - Closed;   * **d** - Deleted. </value>
        </member>
        <member name="F:TextMagicClient.Model.SetChatStatusInputObject.StatusEnum.A">
            <summary>
            Enum A for value: a
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.SetChatStatusInputObject.StatusEnum.C">
            <summary>
            Enum C for value: c
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.SetChatStatusInputObject.StatusEnum.D">
            <summary>
            Enum D for value: d
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SubaccountWithToken">
            <summary>
            SubaccountWithToken
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SubaccountWithToken.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SubaccountWithToken"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SubaccountWithToken.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,TextMagicClient.Model.SubaccountWithToken.StatusEnum,System.Nullable{System.Double},System.String,System.String,TextMagicClient.Model.Currency,TextMagicClient.Model.Country,TextMagicClient.Model.Timezone,TextMagicClient.Model.SubaccountWithToken.SubaccountTypeEnum,System.Nullable{System.Boolean},System.Nullable{System.Boolean},TextMagicClient.Model.UserImage,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SubaccountWithToken"/> class.
            </summary>
            <param name="id">Sub-account ID. (required).</param>
            <param name="username">Username. (required).</param>
            <param name="firstName">Account first name. (required).</param>
            <param name="lastName">Account last name. (required).</param>
            <param name="email">Account Email address. (required).</param>
            <param name="status">Current account status: * **A** for Active; * **T** for Trial.  (required).</param>
            <param name="balance">Account balance (in account currency). (required).</param>
            <param name="phone">Contact phone number. (required).</param>
            <param name="company">Account company name. (required).</param>
            <param name="currency">currency (required).</param>
            <param name="country">country (required).</param>
            <param name="timezone">timezone (required).</param>
            <param name="subaccountType">Type of account: *   **A** for Administrator sub-account; *   **U** for Regular User.  (required).</param>
            <param name="emailAccepted">Does the account have a confirmed Email?. (required).</param>
            <param name="phoneAccepted">Does the account have a confirmed Phone Number?. (required).</param>
            <param name="avatar">avatar (required).</param>
            <param name="token">Access token of account. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SubaccountWithToken.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SubaccountWithToken.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SubaccountWithToken.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SubaccountWithToken.Equals(TextMagicClient.Model.SubaccountWithToken)">
            <summary>
            Returns true if SubaccountWithToken instances are equal
            </summary>
            <param name="input">Instance of SubaccountWithToken to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SubaccountWithToken.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SubaccountWithToken.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.Status">
            <summary>
            Current account status: * **A** for Active; * **T** for Trial. 
            </summary>
            <value>Current account status: * **A** for Active; * **T** for Trial. </value>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.SubaccountType">
            <summary>
            Type of account: *   **A** for Administrator sub-account; *   **U** for Regular User. 
            </summary>
            <value>Type of account: *   **A** for Administrator sub-account; *   **U** for Regular User. </value>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.Id">
            <summary>
            Sub-account ID.
            </summary>
            <value>Sub-account ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.Username">
            <summary>
            Username.
            </summary>
            <value>Username.</value>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.FirstName">
            <summary>
            Account first name.
            </summary>
            <value>Account first name.</value>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.LastName">
            <summary>
            Account last name.
            </summary>
            <value>Account last name.</value>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.Email">
            <summary>
            Account Email address.
            </summary>
            <value>Account Email address.</value>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.Balance">
            <summary>
            Account balance (in account currency).
            </summary>
            <value>Account balance (in account currency).</value>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.Phone">
            <summary>
            Contact phone number.
            </summary>
            <value>Contact phone number.</value>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.Company">
            <summary>
            Account company name.
            </summary>
            <value>Account company name.</value>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.Currency">
            <summary>
            Gets or Sets Currency
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.Country">
            <summary>
            Gets or Sets Country
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.Timezone">
            <summary>
            Gets or Sets Timezone
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.EmailAccepted">
            <summary>
            Does the account have a confirmed Email?.
            </summary>
            <value>Does the account have a confirmed Email?.</value>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.PhoneAccepted">
            <summary>
            Does the account have a confirmed Phone Number?.
            </summary>
            <value>Does the account have a confirmed Phone Number?.</value>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.Avatar">
            <summary>
            Gets or Sets Avatar
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SubaccountWithToken.Token">
            <summary>
            Access token of account.
            </summary>
            <value>Access token of account.</value>
        </member>
        <member name="T:TextMagicClient.Model.SubaccountWithToken.StatusEnum">
            <summary>
            Current account status: * **A** for Active; * **T** for Trial. 
            </summary>
            <value>Current account status: * **A** for Active; * **T** for Trial. </value>
        </member>
        <member name="F:TextMagicClient.Model.SubaccountWithToken.StatusEnum.A">
            <summary>
            Enum A for value: A
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.SubaccountWithToken.StatusEnum.T">
            <summary>
            Enum T for value: T
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SubaccountWithToken.SubaccountTypeEnum">
            <summary>
            Type of account: *   **A** for Administrator sub-account; *   **U** for Regular User. 
            </summary>
            <value>Type of account: *   **A** for Administrator sub-account; *   **U** for Regular User. </value>
        </member>
        <member name="F:TextMagicClient.Model.SubaccountWithToken.SubaccountTypeEnum.A">
            <summary>
            Enum A for value: A
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.SubaccountWithToken.SubaccountTypeEnum.U">
            <summary>
            Enum U for value: U
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.Survey">
            <summary>
            Survey
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Survey.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Survey"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Survey.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.List{TextMagicClient.Model.SurveyRecipient},System.Collections.Generic.List{TextMagicClient.Model.SurveySenderCountries})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Survey"/> class.
            </summary>
            <param name="id">id (required).</param>
            <param name="name">name (required).</param>
            <param name="status">status (required).</param>
            <param name="createdAt">createdAt (required).</param>
            <param name="updatedAt">updatedAt (required).</param>
            <param name="receipents">receipents.</param>
            <param name="countries">countries.</param>
        </member>
        <member name="M:TextMagicClient.Model.Survey.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Survey.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Survey.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Survey.Equals(TextMagicClient.Model.Survey)">
            <summary>
            Returns true if Survey instances are equal
            </summary>
            <param name="input">Instance of Survey to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Survey.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.Survey.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.Survey.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.Survey.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.Survey.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.Survey.CreatedAt">
            <summary>
            Gets or Sets CreatedAt
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.Survey.UpdatedAt">
            <summary>
            Gets or Sets UpdatedAt
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.Survey.Receipents">
            <summary>
            Gets or Sets Receipents
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.Survey.Countries">
            <summary>
            Gets or Sets Countries
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SurveyNode">
            <summary>
            SurveyNode
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SurveyNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SurveyNode"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SurveyNode.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SurveyNode"/> class.
            </summary>
            <param name="id">id (required).</param>
            <param name="label">label (required).</param>
            <param name="body">body (required).</param>
            <param name="nodeType">nodeType (required).</param>
            <param name="isEndNode">isEndNode (required).</param>
            <param name="sendDelay">sendDelay (required).</param>
            <param name="startNodes">startNodes (required).</param>
            <param name="endNodes">endNodes (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SurveyNode.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SurveyNode.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SurveyNode.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SurveyNode.Equals(TextMagicClient.Model.SurveyNode)">
            <summary>
            Returns true if SurveyNode instances are equal
            </summary>
            <param name="input">Instance of SurveyNode to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SurveyNode.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SurveyNode.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SurveyNode.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SurveyNode.Label">
            <summary>
            Gets or Sets Label
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SurveyNode.Body">
            <summary>
            Gets or Sets Body
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SurveyNode.NodeType">
            <summary>
            Gets or Sets NodeType
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SurveyNode.IsEndNode">
            <summary>
            Gets or Sets IsEndNode
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SurveyNode.SendDelay">
            <summary>
            Gets or Sets SendDelay
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SurveyNode.StartNodes">
            <summary>
            Gets or Sets StartNodes
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SurveyNode.EndNodes">
            <summary>
            Gets or Sets EndNodes
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SurveyRecipient">
            <summary>
            SurveyRecipient
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SurveyRecipient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SurveyRecipient"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SurveyRecipient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SurveyRecipient"/> class.
            </summary>
            <param name="phone">phone (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SurveyRecipient.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SurveyRecipient.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SurveyRecipient.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SurveyRecipient.Equals(TextMagicClient.Model.SurveyRecipient)">
            <summary>
            Returns true if SurveyRecipient instances are equal
            </summary>
            <param name="input">Instance of SurveyRecipient to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SurveyRecipient.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SurveyRecipient.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SurveyRecipient.Phone">
            <summary>
            Gets or Sets Phone
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.SurveySenderCountries">
            <summary>
            SurveySenderCountries
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SurveySenderCountries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SurveySenderCountries"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.SurveySenderCountries.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.SurveySenderCountries"/> class.
            </summary>
            <param name="id">id (required).</param>
            <param name="countryName">countryName (required).</param>
            <param name="fromNumber">fromNumber (required).</param>
            <param name="allowDedicated">Is allowed to use a dedicated number? (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.SurveySenderCountries.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SurveySenderCountries.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.SurveySenderCountries.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SurveySenderCountries.Equals(TextMagicClient.Model.SurveySenderCountries)">
            <summary>
            Returns true if SurveySenderCountries instances are equal
            </summary>
            <param name="input">Instance of SurveySenderCountries to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.SurveySenderCountries.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.SurveySenderCountries.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.SurveySenderCountries.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SurveySenderCountries.CountryName">
            <summary>
            Gets or Sets CountryName
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SurveySenderCountries.FromNumber">
            <summary>
            Gets or Sets FromNumber
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.SurveySenderCountries.AllowDedicated">
            <summary>
            Is allowed to use a dedicated number?
            </summary>
            <value>Is allowed to use a dedicated number?</value>
        </member>
        <member name="T:TextMagicClient.Model.Timezone">
            <summary>
            Timezone
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Timezone.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Timezone"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.Timezone.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.Timezone"/> class.
            </summary>
            <param name="id">Internal timezone ID. (required).</param>
            <param name="area">Timezone area. (required).</param>
            <param name="dst">Is daylight saving time used in this timezone? (required).</param>
            <param name="offset">Offset from UTC time in seconds. In this example, it is 21600/60/60=6 hours. (required).</param>
            <param name="timezone">User-friendly timezone name (with spaces replaced by underscores). (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.Timezone.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Timezone.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.Timezone.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Timezone.Equals(TextMagicClient.Model.Timezone)">
            <summary>
            Returns true if Timezone instances are equal
            </summary>
            <param name="input">Instance of Timezone to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.Timezone.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.Timezone.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.Timezone.Id">
            <summary>
            Internal timezone ID.
            </summary>
            <value>Internal timezone ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.Timezone.Area">
            <summary>
            Timezone area.
            </summary>
            <value>Timezone area.</value>
        </member>
        <member name="P:TextMagicClient.Model.Timezone.Dst">
            <summary>
            Is daylight saving time used in this timezone?
            </summary>
            <value>Is daylight saving time used in this timezone?</value>
        </member>
        <member name="P:TextMagicClient.Model.Timezone.Offset">
            <summary>
            Offset from UTC time in seconds. In this example, it is 21600/60/60&#x3D;6 hours.
            </summary>
            <value>Offset from UTC time in seconds. In this example, it is 21600/60/60&#x3D;6 hours.</value>
        </member>
        <member name="P:TextMagicClient.Model.Timezone._Timezone">
            <summary>
            User-friendly timezone name (with spaces replaced by underscores).
            </summary>
            <value>User-friendly timezone name (with spaces replaced by underscores).</value>
        </member>
        <member name="T:TextMagicClient.Model.UnauthorizedResponse">
            <summary>
            Returned when request has been denied in reason of access problems.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UnauthorizedResponse.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UnauthorizedResponse"/> class.
            </summary>
            <param name="code">Error code. Meanings of error codes are similar to [HTTP response codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes)..</param>
            <param name="message">Brief error message. You could display this message to your user or save it in a log..</param>
        </member>
        <member name="M:TextMagicClient.Model.UnauthorizedResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnauthorizedResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnauthorizedResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnauthorizedResponse.Equals(TextMagicClient.Model.UnauthorizedResponse)">
            <summary>
            Returns true if UnauthorizedResponse instances are equal
            </summary>
            <param name="input">Instance of UnauthorizedResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnauthorizedResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnauthorizedResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UnauthorizedResponse.Code">
            <summary>
            Error code. Meanings of error codes are similar to [HTTP response codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes).
            </summary>
            <value>Error code. Meanings of error codes are similar to [HTTP response codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes).</value>
        </member>
        <member name="P:TextMagicClient.Model.UnauthorizedResponse.Message">
            <summary>
            Brief error message. You could display this message to your user or save it in a log.
            </summary>
            <value>Brief error message. You could display this message to your user or save it in a log.</value>
        </member>
        <member name="T:TextMagicClient.Model.UnblockContactInputObject">
            <summary>
            UnblockContactInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UnblockContactInputObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UnblockContactInputObject"/> class.
            </summary>
            <param name="phone">Contact phone number..</param>
        </member>
        <member name="M:TextMagicClient.Model.UnblockContactInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnblockContactInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnblockContactInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnblockContactInputObject.Equals(TextMagicClient.Model.UnblockContactInputObject)">
            <summary>
            Returns true if UnblockContactInputObject instances are equal
            </summary>
            <param name="input">Instance of UnblockContactInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnblockContactInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnblockContactInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UnblockContactInputObject.Phone">
            <summary>
            Contact phone number.
            </summary>
            <value>Contact phone number.</value>
        </member>
        <member name="T:TextMagicClient.Model.UnblockContactsBulkInputObject">
            <summary>
            UnblockContactsBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UnblockContactsBulkInputObject.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UnblockContactsBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Default is 0 (false). If set to 1, all entities will be removed..</param>
        </member>
        <member name="M:TextMagicClient.Model.UnblockContactsBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnblockContactsBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnblockContactsBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnblockContactsBulkInputObject.Equals(TextMagicClient.Model.UnblockContactsBulkInputObject)">
            <summary>
            Returns true if UnblockContactsBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of UnblockContactsBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnblockContactsBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnblockContactsBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UnblockContactsBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.UnblockContactsBulkInputObject.All">
            <summary>
            Default is 0 (false). If set to 1, all entities will be removed.
            </summary>
            <value>Default is 0 (false). If set to 1, all entities will be removed.</value>
        </member>
        <member name="T:TextMagicClient.Model.UnmuteChatsBulkInputObject">
            <summary>
            UnmuteChatsBulkInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UnmuteChatsBulkInputObject.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UnmuteChatsBulkInputObject"/> class.
            </summary>
            <param name="ids">Entity ID(s), separated by comma..</param>
            <param name="all">Entity ID(s), separated by comma.</param>
        </member>
        <member name="M:TextMagicClient.Model.UnmuteChatsBulkInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnmuteChatsBulkInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnmuteChatsBulkInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnmuteChatsBulkInputObject.Equals(TextMagicClient.Model.UnmuteChatsBulkInputObject)">
            <summary>
            Returns true if UnmuteChatsBulkInputObject instances are equal
            </summary>
            <param name="input">Instance of UnmuteChatsBulkInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnmuteChatsBulkInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnmuteChatsBulkInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UnmuteChatsBulkInputObject.Ids">
            <summary>
            Entity ID(s), separated by comma.
            </summary>
            <value>Entity ID(s), separated by comma.</value>
        </member>
        <member name="P:TextMagicClient.Model.UnmuteChatsBulkInputObject.All">
            <summary>
            Entity ID(s), separated by comma
            </summary>
            <value>Entity ID(s), separated by comma</value>
        </member>
        <member name="T:TextMagicClient.Model.UnsubscribeContactInputObject">
            <summary>
            UnsubscribeContactInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UnsubscribeContactInputObject.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UnsubscribeContactInputObject"/> class.
            </summary>
            <param name="phone">Contact phone number..</param>
            <param name="blockIncoming">If set to 1, incoming messages from this number will be blocked..</param>
        </member>
        <member name="M:TextMagicClient.Model.UnsubscribeContactInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnsubscribeContactInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnsubscribeContactInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnsubscribeContactInputObject.Equals(TextMagicClient.Model.UnsubscribeContactInputObject)">
            <summary>
            Returns true if UnsubscribeContactInputObject instances are equal
            </summary>
            <param name="input">Instance of UnsubscribeContactInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnsubscribeContactInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnsubscribeContactInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UnsubscribeContactInputObject.Phone">
            <summary>
            Contact phone number.
            </summary>
            <value>Contact phone number.</value>
        </member>
        <member name="P:TextMagicClient.Model.UnsubscribeContactInputObject.BlockIncoming">
            <summary>
            If set to 1, incoming messages from this number will be blocked.
            </summary>
            <value>If set to 1, incoming messages from this number will be blocked.</value>
        </member>
        <member name="T:TextMagicClient.Model.UnsubscribedContact">
            <summary>
            UnsubscribedContact
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UnsubscribedContact.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UnsubscribedContact"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UnsubscribedContact.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UnsubscribedContact"/> class.
            </summary>
            <param name="id">Unsubscribed contact ID. (required).</param>
            <param name="phone">Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164). (required).</param>
            <param name="unsubscribeTime">Time when contact was opted-out. (required).</param>
            <param name="firstName">Unsubscribed contact first name. (required).</param>
            <param name="lastName">Unsubscribed contact last name. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.UnsubscribedContact.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnsubscribedContact.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnsubscribedContact.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnsubscribedContact.Equals(TextMagicClient.Model.UnsubscribedContact)">
            <summary>
            Returns true if UnsubscribedContact instances are equal
            </summary>
            <param name="input">Instance of UnsubscribedContact to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnsubscribedContact.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UnsubscribedContact.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UnsubscribedContact.Id">
            <summary>
            Unsubscribed contact ID.
            </summary>
            <value>Unsubscribed contact ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.UnsubscribedContact.Phone">
            <summary>
            Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
            </summary>
            <value>Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).</value>
        </member>
        <member name="P:TextMagicClient.Model.UnsubscribedContact.UnsubscribeTime">
            <summary>
            Time when contact was opted-out.
            </summary>
            <value>Time when contact was opted-out.</value>
        </member>
        <member name="P:TextMagicClient.Model.UnsubscribedContact.FirstName">
            <summary>
            Unsubscribed contact first name.
            </summary>
            <value>Unsubscribed contact first name.</value>
        </member>
        <member name="P:TextMagicClient.Model.UnsubscribedContact.LastName">
            <summary>
            Unsubscribed contact last name.
            </summary>
            <value>Unsubscribed contact last name.</value>
        </member>
        <member name="T:TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject">
            <summary>
            UpdateBalanceNotificationSettingsInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject.#ctor(System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject"/> class.
            </summary>
            <param name="lowBalanceNotification">Should user receive low balance notification..</param>
            <param name="alertBalance">If balance is below this value, user receive low balance notification..</param>
            <param name="alertPhone">Low balance notification phone number..</param>
            <param name="alertEmail1">Low balance notification email 1..</param>
            <param name="alertEmail2">Low balance notification email 2..</param>
            <param name="alertEmail3">Low balance notification email 3..</param>
        </member>
        <member name="M:TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject.Equals(TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject)">
            <summary>
            Returns true if UpdateBalanceNotificationSettingsInputObject instances are equal
            </summary>
            <param name="input">Instance of UpdateBalanceNotificationSettingsInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject.LowBalanceNotification">
            <summary>
            Should user receive low balance notification.
            </summary>
            <value>Should user receive low balance notification.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject.AlertBalance">
            <summary>
            If balance is below this value, user receive low balance notification.
            </summary>
            <value>If balance is below this value, user receive low balance notification.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject.AlertPhone">
            <summary>
            Low balance notification phone number.
            </summary>
            <value>Low balance notification phone number.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject.AlertEmail1">
            <summary>
            Low balance notification email 1.
            </summary>
            <value>Low balance notification email 1.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject.AlertEmail2">
            <summary>
            Low balance notification email 2.
            </summary>
            <value>Low balance notification email 2.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateBalanceNotificationSettingsInputObject.AlertEmail3">
            <summary>
            Low balance notification email 3.
            </summary>
            <value>Low balance notification email 3.</value>
        </member>
        <member name="T:TextMagicClient.Model.UpdateCallbackSettingsInputObject">
            <summary>
            UpdateCallbackSettingsInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCallbackSettingsInputObject.#ctor(System.String,System.String,System.Nullable{TextMagicClient.Model.UpdateCallbackSettingsInputObject.FormatEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UpdateCallbackSettingsInputObject"/> class.
            </summary>
            <param name="outUrl">This URL is used to push message delivery status updates to your application..</param>
            <param name="inUrl">This URL is used to push incoming SMS to your application..</param>
            <param name="format">Desired callback data format. m - multipart/form-data, u - application/x-www-form-urlencoded, j - application/json.</param>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCallbackSettingsInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCallbackSettingsInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCallbackSettingsInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCallbackSettingsInputObject.Equals(TextMagicClient.Model.UpdateCallbackSettingsInputObject)">
            <summary>
            Returns true if UpdateCallbackSettingsInputObject instances are equal
            </summary>
            <param name="input">Instance of UpdateCallbackSettingsInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCallbackSettingsInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCallbackSettingsInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCallbackSettingsInputObject.Format">
            <summary>
            Desired callback data format. m - multipart/form-data, u - application/x-www-form-urlencoded, j - application/json
            </summary>
            <value>Desired callback data format. m - multipart/form-data, u - application/x-www-form-urlencoded, j - application/json</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCallbackSettingsInputObject.OutUrl">
            <summary>
            This URL is used to push message delivery status updates to your application.
            </summary>
            <value>This URL is used to push message delivery status updates to your application.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCallbackSettingsInputObject.InUrl">
            <summary>
            This URL is used to push incoming SMS to your application.
            </summary>
            <value>This URL is used to push incoming SMS to your application.</value>
        </member>
        <member name="T:TextMagicClient.Model.UpdateCallbackSettingsInputObject.FormatEnum">
            <summary>
            Desired callback data format. m - multipart/form-data, u - application/x-www-form-urlencoded, j - application/json
            </summary>
            <value>Desired callback data format. m - multipart/form-data, u - application/x-www-form-urlencoded, j - application/json</value>
        </member>
        <member name="F:TextMagicClient.Model.UpdateCallbackSettingsInputObject.FormatEnum.M">
            <summary>
            Enum M for value: m
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.UpdateCallbackSettingsInputObject.FormatEnum.U">
            <summary>
            Enum U for value: u
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.UpdateCallbackSettingsInputObject.FormatEnum.J">
            <summary>
            Enum J for value: j
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject">
            <summary>
            UpdateChatDesktopNotificationSettingsInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject"/> class.
            </summary>
            <param name="playSound">Enable notification sound?.</param>
            <param name="showNotifications">Show desktop notifications about new messages..</param>
            <param name="showText">Incoming message text will be displayed in desktop notifications..</param>
            <param name="soundId">Sound Id of a notification..</param>
        </member>
        <member name="M:TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject.Equals(TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject)">
            <summary>
            Returns true if UpdateChatDesktopNotificationSettingsInputObject instances are equal
            </summary>
            <param name="input">Instance of UpdateChatDesktopNotificationSettingsInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject.PlaySound">
            <summary>
            Enable notification sound?
            </summary>
            <value>Enable notification sound?</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject.ShowNotifications">
            <summary>
            Show desktop notifications about new messages.
            </summary>
            <value>Show desktop notifications about new messages.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject.ShowText">
            <summary>
            Incoming message text will be displayed in desktop notifications.
            </summary>
            <value>Incoming message text will be displayed in desktop notifications.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateChatDesktopNotificationSettingsInputObject.SoundId">
            <summary>
            Sound Id of a notification.
            </summary>
            <value>Sound Id of a notification.</value>
        </member>
        <member name="T:TextMagicClient.Model.UpdateContactInputObject">
            <summary>
            UpdateContactInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UpdateContactInputObject.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.List{TextMagicClient.Model.CustomFieldListItem},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UpdateContactInputObject"/> class.
            </summary>
            <param name="firstName">Contact first name..</param>
            <param name="lastName">Contact last name..</param>
            <param name="phone">Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164)..</param>
            <param name="email">Contact email address..</param>
            <param name="companyName">Contact company name..</param>
            <param name="lists">Comma-separated [list](https://docs.textmagic.com/#section/Lists) ID. Each contact must be assigned to at least one list..</param>
            <param name="favorited">Is the contact marked as favorite?.</param>
            <param name="blocked">Is the contact blocked for outgoing and incoming messaging?.</param>
            <param name="type">Force type of phone. Possible values: 0 is landline; 1 is mobile; default is -1 (auto-detection)..</param>
            <param name="customFieldValues">customFieldValues.</param>
            <param name="local">Treat phone numbers passed in the request body as **local**..</param>
            <param name="country">The 2-letter ISO country code for local phone numbers, used when **local** is set to true..</param>
        </member>
        <member name="M:TextMagicClient.Model.UpdateContactInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateContactInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateContactInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateContactInputObject.Equals(TextMagicClient.Model.UpdateContactInputObject)">
            <summary>
            Returns true if UpdateContactInputObject instances are equal
            </summary>
            <param name="input">Instance of UpdateContactInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateContactInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateContactInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UpdateContactInputObject.FirstName">
            <summary>
            Contact first name.
            </summary>
            <value>Contact first name.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateContactInputObject.LastName">
            <summary>
            Contact last name.
            </summary>
            <value>Contact last name.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateContactInputObject.Phone">
            <summary>
            Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
            </summary>
            <value>Phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateContactInputObject.Email">
            <summary>
            Contact email address.
            </summary>
            <value>Contact email address.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateContactInputObject.CompanyName">
            <summary>
            Contact company name.
            </summary>
            <value>Contact company name.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateContactInputObject.Lists">
            <summary>
            Comma-separated [list](https://docs.textmagic.com/#section/Lists) ID. Each contact must be assigned to at least one list.
            </summary>
            <value>Comma-separated [list](https://docs.textmagic.com/#section/Lists) ID. Each contact must be assigned to at least one list.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateContactInputObject.Favorited">
            <summary>
            Is the contact marked as favorite?
            </summary>
            <value>Is the contact marked as favorite?</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateContactInputObject.Blocked">
            <summary>
            Is the contact blocked for outgoing and incoming messaging?
            </summary>
            <value>Is the contact blocked for outgoing and incoming messaging?</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateContactInputObject.Type">
            <summary>
            Force type of phone. Possible values: 0 is landline; 1 is mobile; default is -1 (auto-detection).
            </summary>
            <value>Force type of phone. Possible values: 0 is landline; 1 is mobile; default is -1 (auto-detection).</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateContactInputObject.CustomFieldValues">
            <summary>
            Gets or Sets CustomFieldValues
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.UpdateContactInputObject.Local">
            <summary>
            Treat phone numbers passed in the request body as **local**.
            </summary>
            <value>Treat phone numbers passed in the request body as **local**.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateContactInputObject.Country">
            <summary>
            The 2-letter ISO country code for local phone numbers, used when **local** is set to true.
            </summary>
            <value>The 2-letter ISO country code for local phone numbers, used when **local** is set to true.</value>
        </member>
        <member name="T:TextMagicClient.Model.UpdateContactNoteInputObject">
            <summary>
            UpdateContactNoteInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UpdateContactNoteInputObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UpdateContactNoteInputObject"/> class.
            </summary>
            <param name="note">Contact Note text..</param>
        </member>
        <member name="M:TextMagicClient.Model.UpdateContactNoteInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateContactNoteInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateContactNoteInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateContactNoteInputObject.Equals(TextMagicClient.Model.UpdateContactNoteInputObject)">
            <summary>
            Returns true if UpdateContactNoteInputObject instances are equal
            </summary>
            <param name="input">Instance of UpdateContactNoteInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateContactNoteInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateContactNoteInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UpdateContactNoteInputObject.Note">
            <summary>
            Contact Note text.
            </summary>
            <value>Contact Note text.</value>
        </member>
        <member name="T:TextMagicClient.Model.UpdateCurrentUserInputObject">
            <summary>
            UpdateCurrentUserInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCurrentUserInputObject.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UpdateCurrentUserInputObject"/> class.
            </summary>
            <param name="username">username.</param>
            <param name="firstName">Account first name..</param>
            <param name="lastName">Account last name..</param>
            <param name="email">email.</param>
            <param name="phone">phone.</param>
            <param name="company">Account company name..</param>
            <param name="timezone">The timezome internal ID. See [Get timezones](https://docs.textmagic.com/#operation/getTimezones)..</param>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCurrentUserInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCurrentUserInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCurrentUserInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCurrentUserInputObject.Equals(TextMagicClient.Model.UpdateCurrentUserInputObject)">
            <summary>
            Returns true if UpdateCurrentUserInputObject instances are equal
            </summary>
            <param name="input">Instance of UpdateCurrentUserInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCurrentUserInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCurrentUserInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCurrentUserInputObject.Username">
            <summary>
            Gets or Sets Username
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCurrentUserInputObject.FirstName">
            <summary>
            Account first name.
            </summary>
            <value>Account first name.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCurrentUserInputObject.LastName">
            <summary>
            Account last name.
            </summary>
            <value>Account last name.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCurrentUserInputObject.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCurrentUserInputObject.Phone">
            <summary>
            Gets or Sets Phone
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCurrentUserInputObject.Company">
            <summary>
            Account company name.
            </summary>
            <value>Account company name.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCurrentUserInputObject.Timezone">
            <summary>
            The timezome internal ID. See [Get timezones](https://docs.textmagic.com/#operation/getTimezones).
            </summary>
            <value>The timezome internal ID. See [Get timezones](https://docs.textmagic.com/#operation/getTimezones).</value>
        </member>
        <member name="T:TextMagicClient.Model.UpdateCurrentUserResponse">
            <summary>
            UpdateCurrentUserResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCurrentUserResponse.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UpdateCurrentUserResponse"/> class.
            </summary>
            <param name="username">Username..</param>
            <param name="firstName">Account first name..</param>
            <param name="lastName">Account last name..</param>
            <param name="email">User email address..</param>
            <param name="phone">phone.</param>
            <param name="company">Account company name..</param>
            <param name="timezone">Internal timezone ID. See [Get timezones](https://docs.textmagic.com/#operation/getTimezones)..</param>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCurrentUserResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCurrentUserResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCurrentUserResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCurrentUserResponse.Equals(TextMagicClient.Model.UpdateCurrentUserResponse)">
            <summary>
            Returns true if UpdateCurrentUserResponse instances are equal
            </summary>
            <param name="input">Instance of UpdateCurrentUserResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCurrentUserResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCurrentUserResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCurrentUserResponse.Username">
            <summary>
            Username.
            </summary>
            <value>Username.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCurrentUserResponse.FirstName">
            <summary>
            Account first name.
            </summary>
            <value>Account first name.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCurrentUserResponse.LastName">
            <summary>
            Account last name.
            </summary>
            <value>Account last name.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCurrentUserResponse.Email">
            <summary>
            User email address.
            </summary>
            <value>User email address.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCurrentUserResponse.Phone">
            <summary>
            Gets or Sets Phone
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCurrentUserResponse.Company">
            <summary>
            Account company name.
            </summary>
            <value>Account company name.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCurrentUserResponse.Timezone">
            <summary>
            Internal timezone ID. See [Get timezones](https://docs.textmagic.com/#operation/getTimezones).
            </summary>
            <value>Internal timezone ID. See [Get timezones](https://docs.textmagic.com/#operation/getTimezones).</value>
        </member>
        <member name="T:TextMagicClient.Model.UpdateCustomFieldInputObject">
            <summary>
            UpdateCustomFieldInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCustomFieldInputObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UpdateCustomFieldInputObject"/> class.
            </summary>
            <param name="name">Custom field name..</param>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCustomFieldInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCustomFieldInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCustomFieldInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCustomFieldInputObject.Equals(TextMagicClient.Model.UpdateCustomFieldInputObject)">
            <summary>
            Returns true if UpdateCustomFieldInputObject instances are equal
            </summary>
            <param name="input">Instance of UpdateCustomFieldInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCustomFieldInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCustomFieldInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCustomFieldInputObject.Name">
            <summary>
            Custom field name.
            </summary>
            <value>Custom field name.</value>
        </member>
        <member name="T:TextMagicClient.Model.UpdateCustomFieldValueInputObject">
            <summary>
            UpdateCustomFieldValueInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCustomFieldValueInputObject.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UpdateCustomFieldValueInputObject"/> class.
            </summary>
            <param name="contactId">Contact ID. See [Contact](https://docs.textmagic.com/#tag/Contacts). .</param>
            <param name="value">Custom field value. Note that this value is not parsed in any way; it is stored and used in tags exactly as you send it..</param>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCustomFieldValueInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCustomFieldValueInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCustomFieldValueInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCustomFieldValueInputObject.Equals(TextMagicClient.Model.UpdateCustomFieldValueInputObject)">
            <summary>
            Returns true if UpdateCustomFieldValueInputObject instances are equal
            </summary>
            <param name="input">Instance of UpdateCustomFieldValueInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCustomFieldValueInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateCustomFieldValueInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCustomFieldValueInputObject.ContactId">
            <summary>
            Contact ID. See [Contact](https://docs.textmagic.com/#tag/Contacts). 
            </summary>
            <value>Contact ID. See [Contact](https://docs.textmagic.com/#tag/Contacts). </value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateCustomFieldValueInputObject.Value">
            <summary>
            Custom field value. Note that this value is not parsed in any way; it is stored and used in tags exactly as you send it.
            </summary>
            <value>Custom field value. Note that this value is not parsed in any way; it is stored and used in tags exactly as you send it.</value>
        </member>
        <member name="T:TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject">
            <summary>
            UpdateInboundMessagesNotificationSettingsInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject"/> class.
            </summary>
            <param name="inboundMessageNotification">Should user receive notification about new incoming messages..</param>
            <param name="includeSmsHistory">Include SMS history into notification Email..</param>
            <param name="sendInHtmlFormat">Send Email notification in HTML format..</param>
            <param name="alertEmail1">New message notification email 2..</param>
            <param name="alertEmail2">New message notification email 2..</param>
            <param name="alertEmail3">New message notification email 3..</param>
        </member>
        <member name="M:TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject.Equals(TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject)">
            <summary>
            Returns true if UpdateInboundMessagesNotificationSettingsInputObject instances are equal
            </summary>
            <param name="input">Instance of UpdateInboundMessagesNotificationSettingsInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject.InboundMessageNotification">
            <summary>
            Should user receive notification about new incoming messages.
            </summary>
            <value>Should user receive notification about new incoming messages.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject.IncludeSmsHistory">
            <summary>
            Include SMS history into notification Email.
            </summary>
            <value>Include SMS history into notification Email.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject.SendInHtmlFormat">
            <summary>
            Send Email notification in HTML format.
            </summary>
            <value>Send Email notification in HTML format.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject.AlertEmail1">
            <summary>
            New message notification email 2.
            </summary>
            <value>New message notification email 2.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject.AlertEmail2">
            <summary>
            New message notification email 2.
            </summary>
            <value>New message notification email 2.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateInboundMessagesNotificationSettingsInputObject.AlertEmail3">
            <summary>
            New message notification email 3.
            </summary>
            <value>New message notification email 3.</value>
        </member>
        <member name="T:TextMagicClient.Model.UpdateListObject">
            <summary>
            UpdateListObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UpdateListObject.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UpdateListObject"/> class.
            </summary>
            <param name="name">List name..</param>
            <param name="shared">Make this list shared or not? (default to false).</param>
            <param name="favorited">Is list favorited. (default to false).</param>
            <param name="isDefault">Is list default for new contacts (web only). (default to false).</param>
        </member>
        <member name="M:TextMagicClient.Model.UpdateListObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateListObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateListObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateListObject.Equals(TextMagicClient.Model.UpdateListObject)">
            <summary>
            Returns true if UpdateListObject instances are equal
            </summary>
            <param name="input">Instance of UpdateListObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateListObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateListObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UpdateListObject.Name">
            <summary>
            List name.
            </summary>
            <value>List name.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateListObject.Shared">
            <summary>
            Make this list shared or not?
            </summary>
            <value>Make this list shared or not?</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateListObject.Favorited">
            <summary>
            Is list favorited.
            </summary>
            <value>Is list favorited.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateListObject.IsDefault">
            <summary>
            Is list default for new contacts (web only).
            </summary>
            <value>Is list default for new contacts (web only).</value>
        </member>
        <member name="T:TextMagicClient.Model.UpdateSenderSettingInputObject">
            <summary>
            UpdateSenderSettingInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UpdateSenderSettingInputObject.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UpdateSenderSettingInputObject"/> class.
            </summary>
            <param name="value">Available phone number in international E.164 format or senderid..</param>
            <param name="country">Country for which the setting will be set..</param>
            <param name="chatId">Set sender setting for specified chat only..</param>
        </member>
        <member name="M:TextMagicClient.Model.UpdateSenderSettingInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateSenderSettingInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateSenderSettingInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateSenderSettingInputObject.Equals(TextMagicClient.Model.UpdateSenderSettingInputObject)">
            <summary>
            Returns true if UpdateSenderSettingInputObject instances are equal
            </summary>
            <param name="input">Instance of UpdateSenderSettingInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateSenderSettingInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateSenderSettingInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UpdateSenderSettingInputObject.Value">
            <summary>
            Available phone number in international E.164 format or senderid.
            </summary>
            <value>Available phone number in international E.164 format or senderid.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateSenderSettingInputObject.Country">
            <summary>
            Country for which the setting will be set.
            </summary>
            <value>Country for which the setting will be set.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateSenderSettingInputObject.ChatId">
            <summary>
            Set sender setting for specified chat only.
            </summary>
            <value>Set sender setting for specified chat only.</value>
        </member>
        <member name="T:TextMagicClient.Model.UpdateSurveyCountryItem">
            <summary>
            UpdateSurveyCountryItem
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UpdateSurveyCountryItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UpdateSurveyCountryItem"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UpdateSurveyCountryItem.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UpdateSurveyCountryItem"/> class.
            </summary>
            <param name="country">The 2-letter ISO country code. (required).</param>
            <param name="userInboundId">User inbound phone ID. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.UpdateSurveyCountryItem.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateSurveyCountryItem.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateSurveyCountryItem.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateSurveyCountryItem.Equals(TextMagicClient.Model.UpdateSurveyCountryItem)">
            <summary>
            Returns true if UpdateSurveyCountryItem instances are equal
            </summary>
            <param name="input">Instance of UpdateSurveyCountryItem to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateSurveyCountryItem.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateSurveyCountryItem.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UpdateSurveyCountryItem.Country">
            <summary>
            The 2-letter ISO country code.
            </summary>
            <value>The 2-letter ISO country code.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateSurveyCountryItem.UserInboundId">
            <summary>
            User inbound phone ID.
            </summary>
            <value>User inbound phone ID.</value>
        </member>
        <member name="T:TextMagicClient.Model.UpdateTemplateInputObject">
            <summary>
            UpdateTemplateInputObject
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UpdateTemplateInputObject.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UpdateTemplateInputObject"/> class.
            </summary>
            <param name="name">Template name..</param>
            <param name="content">Template text. May contain tags inside braces. See [Custom fields list](https://docs.textmagic.com/#section/Custom-fields-list-(Merge-tags))..</param>
        </member>
        <member name="M:TextMagicClient.Model.UpdateTemplateInputObject.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateTemplateInputObject.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateTemplateInputObject.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateTemplateInputObject.Equals(TextMagicClient.Model.UpdateTemplateInputObject)">
            <summary>
            Returns true if UpdateTemplateInputObject instances are equal
            </summary>
            <param name="input">Instance of UpdateTemplateInputObject to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateTemplateInputObject.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UpdateTemplateInputObject.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UpdateTemplateInputObject.Name">
            <summary>
            Template name.
            </summary>
            <value>Template name.</value>
        </member>
        <member name="P:TextMagicClient.Model.UpdateTemplateInputObject.Content">
            <summary>
            Template text. May contain tags inside braces. See [Custom fields list](https://docs.textmagic.com/#section/Custom-fields-list-(Merge-tags)).
            </summary>
            <value>Template text. May contain tags inside braces. See [Custom fields list](https://docs.textmagic.com/#section/Custom-fields-list-(Merge-tags)).</value>
        </member>
        <member name="T:TextMagicClient.Model.UploadMessageAttachmentResponse">
            <summary>
            UploadMessageAttachmentResponse
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UploadMessageAttachmentResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UploadMessageAttachmentResponse"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UploadMessageAttachmentResponse.#ctor(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UploadMessageAttachmentResponse"/> class.
            </summary>
            <param name="chars">`href` field characters count.  (required).</param>
            <param name="href">This is a relative link to your file. To construct a full link, just add “[https://my.textmagic.com/”](https://my.textmagic.com/%E2%80%9D) to the beginning (like this: [https://my.textmagic.com/click/Zwcj9](https://my.textmagic.com/click/Zwcj9)). For most modern devices, you can omit the “https://” part and write just [my.textmagic.com/click/Zwcj9](https://my.textmagic.com/click/Zwcj9), which will save you 8 characters.  (required).</param>
            <param name="name">File name of the uploaded file.  (required).</param>
            <param name="size">Attachment size in bytes. (required).</param>
            <param name="resource">Internal file name (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.UploadMessageAttachmentResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UploadMessageAttachmentResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UploadMessageAttachmentResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UploadMessageAttachmentResponse.Equals(TextMagicClient.Model.UploadMessageAttachmentResponse)">
            <summary>
            Returns true if UploadMessageAttachmentResponse instances are equal
            </summary>
            <param name="input">Instance of UploadMessageAttachmentResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UploadMessageAttachmentResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UploadMessageAttachmentResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UploadMessageAttachmentResponse.Chars">
            <summary>
            &#x60;href&#x60; field characters count. 
            </summary>
            <value>&#x60;href&#x60; field characters count. </value>
        </member>
        <member name="P:TextMagicClient.Model.UploadMessageAttachmentResponse.Href">
            <summary>
            This is a relative link to your file. To construct a full link, just add “[https://my.textmagic.com/”](https://my.textmagic.com/%E2%80%9D) to the beginning (like this: [https://my.textmagic.com/click/Zwcj9](https://my.textmagic.com/click/Zwcj9)). For most modern devices, you can omit the “https://” part and write just [my.textmagic.com/click/Zwcj9](https://my.textmagic.com/click/Zwcj9), which will save you 8 characters. 
            </summary>
            <value>This is a relative link to your file. To construct a full link, just add “[https://my.textmagic.com/”](https://my.textmagic.com/%E2%80%9D) to the beginning (like this: [https://my.textmagic.com/click/Zwcj9](https://my.textmagic.com/click/Zwcj9)). For most modern devices, you can omit the “https://” part and write just [my.textmagic.com/click/Zwcj9](https://my.textmagic.com/click/Zwcj9), which will save you 8 characters. </value>
        </member>
        <member name="P:TextMagicClient.Model.UploadMessageAttachmentResponse.Name">
            <summary>
            File name of the uploaded file. 
            </summary>
            <value>File name of the uploaded file. </value>
        </member>
        <member name="P:TextMagicClient.Model.UploadMessageAttachmentResponse.Size">
            <summary>
            Attachment size in bytes.
            </summary>
            <value>Attachment size in bytes.</value>
        </member>
        <member name="P:TextMagicClient.Model.UploadMessageAttachmentResponse.Resource">
            <summary>
            Internal file name
            </summary>
            <value>Internal file name</value>
        </member>
        <member name="T:TextMagicClient.Model.User">
            <summary>
            User
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.User.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.User"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.User.#ctor(System.Nullable{System.Int32},System.Nullable{TextMagicClient.Model.User.DisplayTimeFormatEnum},System.String,System.String,System.String,System.String,TextMagicClient.Model.User.StatusEnum,System.Nullable{System.Decimal},System.String,System.String,TextMagicClient.Model.Currency,TextMagicClient.Model.Country,TextMagicClient.Model.Timezone,TextMagicClient.Model.User.SubaccountTypeEnum,System.Nullable{System.Boolean},System.Nullable{System.Boolean},TextMagicClient.Model.UserImage)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.User"/> class.
            </summary>
            <param name="id">User ID. (required).</param>
            <param name="displayTimeFormat">User's preferred format of time display: * *12h* - AM/PM format; * *24h* - 24-hour clock format. .</param>
            <param name="username">Username. (required).</param>
            <param name="firstName">Account first name. (required).</param>
            <param name="lastName">Account last name. (required).</param>
            <param name="email">User email address. (required).</param>
            <param name="status">Current account status: * **A** for Active; * **T** for Trial.  (required).</param>
            <param name="balance">Account balance (in account currency). (required).</param>
            <param name="phone">User's phone number. (required).</param>
            <param name="company">Account company name. (required).</param>
            <param name="currency">currency (required).</param>
            <param name="country">country (required).</param>
            <param name="timezone">timezone (required).</param>
            <param name="subaccountType">Type of account: * **P** for Parent User; * **A** for Administrator Sub-Account; * **U** for Regular User.  (required).</param>
            <param name="emailAccepted">Does the account have a confirmed email? (required).</param>
            <param name="phoneAccepted">Does the account have a confirmed phone number? (required).</param>
            <param name="avatar">avatar (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.User.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.User.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.User.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.User.Equals(TextMagicClient.Model.User)">
            <summary>
            Returns true if User instances are equal
            </summary>
            <param name="input">Instance of User to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.User.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.User.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.User.DisplayTimeFormat">
            <summary>
            User&#39;s preferred format of time display: * *12h* - AM/PM format; * *24h* - 24-hour clock format. 
            </summary>
            <value>User&#39;s preferred format of time display: * *12h* - AM/PM format; * *24h* - 24-hour clock format. </value>
        </member>
        <member name="P:TextMagicClient.Model.User.Status">
            <summary>
            Current account status: * **A** for Active; * **T** for Trial. 
            </summary>
            <value>Current account status: * **A** for Active; * **T** for Trial. </value>
        </member>
        <member name="P:TextMagicClient.Model.User.SubaccountType">
            <summary>
            Type of account: * **P** for Parent User; * **A** for Administrator Sub-Account; * **U** for Regular User. 
            </summary>
            <value>Type of account: * **P** for Parent User; * **A** for Administrator Sub-Account; * **U** for Regular User. </value>
        </member>
        <member name="P:TextMagicClient.Model.User.Id">
            <summary>
            User ID.
            </summary>
            <value>User ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.User.Username">
            <summary>
            Username.
            </summary>
            <value>Username.</value>
        </member>
        <member name="P:TextMagicClient.Model.User.FirstName">
            <summary>
            Account first name.
            </summary>
            <value>Account first name.</value>
        </member>
        <member name="P:TextMagicClient.Model.User.LastName">
            <summary>
            Account last name.
            </summary>
            <value>Account last name.</value>
        </member>
        <member name="P:TextMagicClient.Model.User.Email">
            <summary>
            User email address.
            </summary>
            <value>User email address.</value>
        </member>
        <member name="P:TextMagicClient.Model.User.Balance">
            <summary>
            Account balance (in account currency).
            </summary>
            <value>Account balance (in account currency).</value>
        </member>
        <member name="P:TextMagicClient.Model.User.Phone">
            <summary>
            User&#39;s phone number.
            </summary>
            <value>User&#39;s phone number.</value>
        </member>
        <member name="P:TextMagicClient.Model.User.Company">
            <summary>
            Account company name.
            </summary>
            <value>Account company name.</value>
        </member>
        <member name="P:TextMagicClient.Model.User.Currency">
            <summary>
            Gets or Sets Currency
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.User.Country">
            <summary>
            Gets or Sets Country
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.User.Timezone">
            <summary>
            Gets or Sets Timezone
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.User.EmailAccepted">
            <summary>
            Does the account have a confirmed email?
            </summary>
            <value>Does the account have a confirmed email?</value>
        </member>
        <member name="P:TextMagicClient.Model.User.PhoneAccepted">
            <summary>
            Does the account have a confirmed phone number?
            </summary>
            <value>Does the account have a confirmed phone number?</value>
        </member>
        <member name="P:TextMagicClient.Model.User.Avatar">
            <summary>
            Gets or Sets Avatar
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.User.DisplayTimeFormatEnum">
            <summary>
            User&#39;s preferred format of time display: * *12h* - AM/PM format; * *24h* - 24-hour clock format. 
            </summary>
            <value>User&#39;s preferred format of time display: * *12h* - AM/PM format; * *24h* - 24-hour clock format. </value>
        </member>
        <member name="F:TextMagicClient.Model.User.DisplayTimeFormatEnum._12h">
            <summary>
            Enum _12h for value: 12h
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.User.DisplayTimeFormatEnum._24h">
            <summary>
            Enum _24h for value: 24h
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.User.StatusEnum">
            <summary>
            Current account status: * **A** for Active; * **T** for Trial. 
            </summary>
            <value>Current account status: * **A** for Active; * **T** for Trial. </value>
        </member>
        <member name="F:TextMagicClient.Model.User.StatusEnum.A">
            <summary>
            Enum A for value: A
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.User.StatusEnum.T">
            <summary>
            Enum T for value: T
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.User.SubaccountTypeEnum">
            <summary>
            Type of account: * **P** for Parent User; * **A** for Administrator Sub-Account; * **U** for Regular User. 
            </summary>
            <value>Type of account: * **P** for Parent User; * **A** for Administrator Sub-Account; * **U** for Regular User. </value>
        </member>
        <member name="F:TextMagicClient.Model.User.SubaccountTypeEnum.P">
            <summary>
            Enum P for value: P
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.User.SubaccountTypeEnum.A">
            <summary>
            Enum A for value: A
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.User.SubaccountTypeEnum.U">
            <summary>
            Enum U for value: U
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.UserCustomField">
            <summary>
            UserCustomField
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UserCustomField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UserCustomField"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UserCustomField.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UserCustomField"/> class.
            </summary>
            <param name="id">Custom field ID. (required).</param>
            <param name="name">Custom field name. (required).</param>
            <param name="createdAt">Custom field creation time. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.UserCustomField.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UserCustomField.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UserCustomField.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UserCustomField.Equals(TextMagicClient.Model.UserCustomField)">
            <summary>
            Returns true if UserCustomField instances are equal
            </summary>
            <param name="input">Instance of UserCustomField to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UserCustomField.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UserCustomField.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UserCustomField.Id">
            <summary>
            Custom field ID.
            </summary>
            <value>Custom field ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.UserCustomField.Name">
            <summary>
            Custom field name.
            </summary>
            <value>Custom field name.</value>
        </member>
        <member name="P:TextMagicClient.Model.UserCustomField.CreatedAt">
            <summary>
            Custom field creation time.
            </summary>
            <value>Custom field creation time.</value>
        </member>
        <member name="T:TextMagicClient.Model.UserImage">
            <summary>
            UserImage
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UserImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UserImage"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UserImage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UserImage"/> class.
            </summary>
            <param name="href">The URI of a user avatar. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.UserImage.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UserImage.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UserImage.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UserImage.Equals(TextMagicClient.Model.UserImage)">
            <summary>
            Returns true if UserImage instances are equal
            </summary>
            <param name="input">Instance of UserImage to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UserImage.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UserImage.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UserImage.Href">
            <summary>
            The URI of a user avatar.
            </summary>
            <value>The URI of a user avatar.</value>
        </member>
        <member name="T:TextMagicClient.Model.UsersInbound">
            <summary>
            UsersInbound
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UsersInbound.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UsersInbound"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UsersInbound.#ctor(System.Nullable{System.Int32},System.String,System.String,TextMagicClient.Model.User,System.Nullable{System.DateTime},System.Nullable{System.DateTime},TextMagicClient.Model.UsersInbound.StatusEnum,TextMagicClient.Model.Country)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UsersInbound"/> class.
            </summary>
            <param name="id">Dedicated number ID. (required).</param>
            <param name="displayTimeFormat">Format for representation of time..</param>
            <param name="phone">Dedicated phone number..</param>
            <param name="user">user (required).</param>
            <param name="purchasedAt">Time when the dedicated number was purchased. (required).</param>
            <param name="expireAt">Dedicated number subscription expiration time. (required).</param>
            <param name="status">Number status: *   **U** for Unused. No messages have been sent from (or received to) this number; *   **A** for Active.  (required).</param>
            <param name="country">country (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.UsersInbound.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UsersInbound.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UsersInbound.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UsersInbound.Equals(TextMagicClient.Model.UsersInbound)">
            <summary>
            Returns true if UsersInbound instances are equal
            </summary>
            <param name="input">Instance of UsersInbound to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UsersInbound.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UsersInbound.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UsersInbound.Status">
            <summary>
            Number status: *   **U** for Unused. No messages have been sent from (or received to) this number; *   **A** for Active. 
            </summary>
            <value>Number status: *   **U** for Unused. No messages have been sent from (or received to) this number; *   **A** for Active. </value>
        </member>
        <member name="P:TextMagicClient.Model.UsersInbound.Id">
            <summary>
            Dedicated number ID.
            </summary>
            <value>Dedicated number ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.UsersInbound.DisplayTimeFormat">
            <summary>
            Format for representation of time.
            </summary>
            <value>Format for representation of time.</value>
        </member>
        <member name="P:TextMagicClient.Model.UsersInbound.Phone">
            <summary>
            Dedicated phone number.
            </summary>
            <value>Dedicated phone number.</value>
        </member>
        <member name="P:TextMagicClient.Model.UsersInbound.User">
            <summary>
            Gets or Sets User
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.UsersInbound.PurchasedAt">
            <summary>
            Time when the dedicated number was purchased.
            </summary>
            <value>Time when the dedicated number was purchased.</value>
        </member>
        <member name="P:TextMagicClient.Model.UsersInbound.ExpireAt">
            <summary>
            Dedicated number subscription expiration time.
            </summary>
            <value>Dedicated number subscription expiration time.</value>
        </member>
        <member name="P:TextMagicClient.Model.UsersInbound.Country">
            <summary>
            Gets or Sets Country
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.UsersInbound.StatusEnum">
            <summary>
            Number status: *   **U** for Unused. No messages have been sent from (or received to) this number; *   **A** for Active. 
            </summary>
            <value>Number status: *   **U** for Unused. No messages have been sent from (or received to) this number; *   **A** for Active. </value>
        </member>
        <member name="F:TextMagicClient.Model.UsersInbound.StatusEnum.U">
            <summary>
            Enum U for value: U
            </summary>
        </member>
        <member name="F:TextMagicClient.Model.UsersInbound.StatusEnum.A">
            <summary>
            Enum A for value: A
            </summary>
        </member>
        <member name="T:TextMagicClient.Model.UserStatement">
            <summary>
            UserStatement
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UserStatement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UserStatement"/> class.
            </summary>
        </member>
        <member name="M:TextMagicClient.Model.UserStatement.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Double},System.Nullable{System.Single},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextMagicClient.Model.UserStatement"/> class.
            </summary>
            <param name="id">User statement ID. (required).</param>
            <param name="userId">User ID. (required).</param>
            <param name="date">User statement date. (required).</param>
            <param name="balance">balance (required).</param>
            <param name="delta">Balance change amount. (required).</param>
            <param name="type">Type of statement (what you have been charged for): *   **sms** - for sending SMS *   **number** - for renewing a dedicated number; *   **schedule** - for scheduling text messages; *   **topup** - for adding credits to your account.  (required).</param>
            <param name="value">Value differs by **type**: *   for **sms**, it is the sent messages amount; *   for **number**, it is a dedicated phone number; *   for **schedule**, it is a scheduled messages amount; *   for **top-up**, it is an invoice ID.  (required).</param>
            <param name="comment">Optional comment. (required).</param>
        </member>
        <member name="M:TextMagicClient.Model.UserStatement.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UserStatement.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:TextMagicClient.Model.UserStatement.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UserStatement.Equals(TextMagicClient.Model.UserStatement)">
            <summary>
            Returns true if UserStatement instances are equal
            </summary>
            <param name="input">Instance of UserStatement to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:TextMagicClient.Model.UserStatement.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:TextMagicClient.Model.UserStatement.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:TextMagicClient.Model.UserStatement.Id">
            <summary>
            User statement ID.
            </summary>
            <value>User statement ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.UserStatement.UserId">
            <summary>
            User ID.
            </summary>
            <value>User ID.</value>
        </member>
        <member name="P:TextMagicClient.Model.UserStatement.Date">
            <summary>
            User statement date.
            </summary>
            <value>User statement date.</value>
        </member>
        <member name="P:TextMagicClient.Model.UserStatement.Balance">
            <summary>
            Gets or Sets Balance
            </summary>
        </member>
        <member name="P:TextMagicClient.Model.UserStatement.Delta">
            <summary>
            Balance change amount.
            </summary>
            <value>Balance change amount.</value>
        </member>
        <member name="P:TextMagicClient.Model.UserStatement.Type">
            <summary>
            Type of statement (what you have been charged for): *   **sms** - for sending SMS *   **number** - for renewing a dedicated number; *   **schedule** - for scheduling text messages; *   **topup** - for adding credits to your account. 
            </summary>
            <value>Type of statement (what you have been charged for): *   **sms** - for sending SMS *   **number** - for renewing a dedicated number; *   **schedule** - for scheduling text messages; *   **topup** - for adding credits to your account. </value>
        </member>
        <member name="P:TextMagicClient.Model.UserStatement.Value">
            <summary>
            Value differs by **type**: *   for **sms**, it is the sent messages amount; *   for **number**, it is a dedicated phone number; *   for **schedule**, it is a scheduled messages amount; *   for **top-up**, it is an invoice ID. 
            </summary>
            <value>Value differs by **type**: *   for **sms**, it is the sent messages amount; *   for **number**, it is a dedicated phone number; *   for **schedule**, it is a scheduled messages amount; *   for **top-up**, it is an invoice ID. </value>
        </member>
        <member name="P:TextMagicClient.Model.UserStatement.Comment">
            <summary>
            Optional comment.
            </summary>
            <value>Optional comment.</value>
        </member>
    </members>
</doc>
